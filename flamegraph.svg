<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2006" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1989.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1989.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="0.0000%" y="1813" width="0.1673%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1823.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="0.0558%" y="1797" width="0.1115%" height="15" fill="rgb(217,0,24)"/><text x="0.3058%" y="1807.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="0.2231%" y="1797" width="0.0558%" height="15" fill="rgb(221,193,54)"/><text x="0.4731%" y="1807.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (6 samples, 0.33%)</title><rect x="0.0000%" y="1829" width="0.3346%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1839.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="0.1673%" y="1813" width="0.1673%" height="15" fill="rgb(208,68,35)"/><text x="0.4173%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="0.2789%" y="1797" width="0.0558%" height="15" fill="rgb(232,128,0)"/><text x="0.5289%" y="1807.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="1.1154%" y="1813" width="0.0558%" height="15" fill="rgb(207,160,47)"/><text x="1.3654%" y="1823.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (5 samples, 0.28%)</title><rect x="1.1712%" y="1813" width="0.2789%" height="15" fill="rgb(228,23,34)"/><text x="1.4212%" y="1823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.17%)</title><rect x="1.2828%" y="1797" width="0.1673%" height="15" fill="rgb(218,30,26)"/><text x="1.5328%" y="1807.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.17%)</title><rect x="1.2828%" y="1781" width="0.1673%" height="15" fill="rgb(220,122,19)"/><text x="1.5328%" y="1791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.17%)</title><rect x="1.2828%" y="1765" width="0.1673%" height="15" fill="rgb(250,228,42)"/><text x="1.5328%" y="1775.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.17%)</title><rect x="1.2828%" y="1749" width="0.1673%" height="15" fill="rgb(240,193,28)"/><text x="1.5328%" y="1759.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.17%)</title><rect x="1.2828%" y="1733" width="0.1673%" height="15" fill="rgb(216,20,37)"/><text x="1.5328%" y="1743.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.11%)</title><rect x="1.3385%" y="1717" width="0.1115%" height="15" fill="rgb(206,188,39)"/><text x="1.5885%" y="1727.50"></text></g><g><title>&lt;smol_str::SmolStr as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="1.4501%" y="1813" width="0.0558%" height="15" fill="rgb(217,207,13)"/><text x="1.7001%" y="1823.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.33%)</title><rect x="1.5059%" y="1813" width="0.3346%" height="15" fill="rgb(231,73,38)"/><text x="1.7559%" y="1823.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="1.8405%" y="1781" width="0.1115%" height="15" fill="rgb(225,20,46)"/><text x="2.0905%" y="1791.50"></text></g><g><title>mbe::expander::matcher::&lt;impl mbe::expander::Bindings&gt;::push_nested (31 samples, 1.73%)</title><rect x="0.3346%" y="1829" width="1.7289%" height="15" fill="rgb(210,31,41)"/><text x="0.5846%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.22%)</title><rect x="1.8405%" y="1813" width="0.2231%" height="15" fill="rgb(221,200,47)"/><text x="2.0905%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.22%)</title><rect x="1.8405%" y="1797" width="0.2231%" height="15" fill="rgb(226,26,5)"/><text x="2.0905%" y="1807.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="1.9520%" y="1781" width="0.1115%" height="15" fill="rgb(249,33,26)"/><text x="2.2020%" y="1791.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="2.0078%" y="1765" width="0.0558%" height="15" fill="rgb(235,183,28)"/><text x="2.2578%" y="1775.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="2.0078%" y="1749" width="0.0558%" height="15" fill="rgb(221,5,38)"/><text x="2.2578%" y="1759.50"></text></g><g><title>mbe::subtree_source::SubtreeTokenSource::new (1 samples, 0.06%)</title><rect x="2.0636%" y="1813" width="0.0558%" height="15" fill="rgb(247,18,42)"/><text x="2.3136%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.0636%" y="1797" width="0.0558%" height="15" fill="rgb(241,131,45)"/><text x="2.3136%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="2.0636%" y="1781" width="0.0558%" height="15" fill="rgb(249,31,29)"/><text x="2.3136%" y="1791.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="2.0636%" y="1765" width="0.0558%" height="15" fill="rgb(225,111,53)"/><text x="2.3136%" y="1775.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="2.0636%" y="1749" width="0.0558%" height="15" fill="rgb(238,160,17)"/><text x="2.3136%" y="1759.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="2.0636%" y="1733" width="0.0558%" height="15" fill="rgb(214,148,48)"/><text x="2.3136%" y="1743.50"></text></g><g><title>parser::grammar::expressions::expr_with_attrs (1 samples, 0.06%)</title><rect x="2.1194%" y="1765" width="0.0558%" height="15" fill="rgb(232,36,49)"/><text x="2.3694%" y="1775.50"></text></g><g><title>parser::grammar::expressions::expr (1 samples, 0.06%)</title><rect x="2.1194%" y="1749" width="0.0558%" height="15" fill="rgb(209,103,24)"/><text x="2.3694%" y="1759.50"></text></g><g><title>parser::grammar::expressions::expr_bp (1 samples, 0.06%)</title><rect x="2.1194%" y="1733" width="0.0558%" height="15" fill="rgb(229,88,8)"/><text x="2.3694%" y="1743.50"></text></g><g><title>parser::grammar::expressions::lhs (1 samples, 0.06%)</title><rect x="2.1194%" y="1717" width="0.0558%" height="15" fill="rgb(213,181,19)"/><text x="2.3694%" y="1727.50"></text></g><g><title>parser::grammar::expressions::atom::atom_expr (1 samples, 0.06%)</title><rect x="2.1194%" y="1701" width="0.0558%" height="15" fill="rgb(254,191,54)"/><text x="2.3694%" y="1711.50"></text></g><g><title>parser::grammar::expressions::path_expr (1 samples, 0.06%)</title><rect x="2.1194%" y="1685" width="0.0558%" height="15" fill="rgb(241,83,37)"/><text x="2.3694%" y="1695.50"></text></g><g><title>parser::grammar::paths::expr_path (1 samples, 0.06%)</title><rect x="2.1194%" y="1669" width="0.0558%" height="15" fill="rgb(233,36,39)"/><text x="2.3694%" y="1679.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="2.1194%" y="1653" width="0.0558%" height="15" fill="rgb(226,3,54)"/><text x="2.3694%" y="1663.50"></text></g><g><title>parser::parse_fragment (2 samples, 0.11%)</title><rect x="2.1194%" y="1813" width="0.1115%" height="15" fill="rgb(245,192,40)"/><text x="2.3694%" y="1823.50"></text></g><g><title>parser::parse_from_tokens (2 samples, 0.11%)</title><rect x="2.1194%" y="1797" width="0.1115%" height="15" fill="rgb(238,167,29)"/><text x="2.3694%" y="1807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.11%)</title><rect x="2.1194%" y="1781" width="0.1115%" height="15" fill="rgb(232,182,51)"/><text x="2.3694%" y="1791.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="2.1751%" y="1765" width="0.0558%" height="15" fill="rgb(231,60,39)"/><text x="2.4251%" y="1775.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="2.1751%" y="1749" width="0.0558%" height="15" fill="rgb(208,69,12)"/><text x="2.4251%" y="1759.50"></text></g><g><title>parser::grammar::paths::type_path (1 samples, 0.06%)</title><rect x="2.1751%" y="1733" width="0.0558%" height="15" fill="rgb(235,93,37)"/><text x="2.4251%" y="1743.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="2.1751%" y="1717" width="0.0558%" height="15" fill="rgb(213,116,39)"/><text x="2.4251%" y="1727.50"></text></g><g><title>parser::grammar::paths::path_segment (1 samples, 0.06%)</title><rect x="2.1751%" y="1701" width="0.0558%" height="15" fill="rgb(222,207,29)"/><text x="2.4251%" y="1711.50"></text></g><g><title>parser::grammar::name_ref (1 samples, 0.06%)</title><rect x="2.1751%" y="1685" width="0.0558%" height="15" fill="rgb(206,96,30)"/><text x="2.4251%" y="1695.50"></text></g><g><title>parser::parser::Parser::bump (1 samples, 0.06%)</title><rect x="2.1751%" y="1669" width="0.0558%" height="15" fill="rgb(218,138,4)"/><text x="2.4251%" y="1679.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="2.1751%" y="1653" width="0.0558%" height="15" fill="rgb(250,191,14)"/><text x="2.4251%" y="1663.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="2.1751%" y="1637" width="0.0558%" height="15" fill="rgb(239,60,40)"/><text x="2.4251%" y="1647.50"></text></g><g><title>parser::parser::Parser::push_event (1 samples, 0.06%)</title><rect x="2.1751%" y="1621" width="0.0558%" height="15" fill="rgb(206,27,48)"/><text x="2.4251%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="2.1751%" y="1605" width="0.0558%" height="15" fill="rgb(225,35,8)"/><text x="2.4251%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.1751%" y="1589" width="0.0558%" height="15" fill="rgb(250,213,24)"/><text x="2.4251%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.1751%" y="1573" width="0.0558%" height="15" fill="rgb(247,123,22)"/><text x="2.4251%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="2.1751%" y="1557" width="0.0558%" height="15" fill="rgb(231,138,38)"/><text x="2.4251%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="2.1751%" y="1541" width="0.0558%" height="15" fill="rgb(231,145,46)"/><text x="2.4251%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="2.1751%" y="1525" width="0.0558%" height="15" fill="rgb(251,118,11)"/><text x="2.4251%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="2.1751%" y="1509" width="0.0558%" height="15" fill="rgb(217,147,25)"/><text x="2.4251%" y="1519.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="2.1751%" y="1493" width="0.0558%" height="15" fill="rgb(247,81,37)"/><text x="2.4251%" y="1503.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="2.1751%" y="1477" width="0.0558%" height="15" fill="rgb(209,12,38)"/><text x="2.4251%" y="1487.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="2.1751%" y="1461" width="0.0558%" height="15" fill="rgb(227,1,9)"/><text x="2.4251%" y="1471.50"></text></g><g><title>&lt;&amp;[tt::TokenTree] as tt::buffer::TokenList&gt;::entries (2 samples, 0.11%)</title><rect x="2.2309%" y="1733" width="0.1115%" height="15" fill="rgb(248,47,43)"/><text x="2.4809%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.11%)</title><rect x="2.2309%" y="1717" width="0.1115%" height="15" fill="rgb(221,10,30)"/><text x="2.4809%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="2.2309%" y="1701" width="0.1115%" height="15" fill="rgb(210,229,1)"/><text x="2.4809%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="2.2309%" y="1685" width="0.1115%" height="15" fill="rgb(222,148,37)"/><text x="2.4809%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.11%)</title><rect x="2.2309%" y="1669" width="0.1115%" height="15" fill="rgb(234,67,33)"/><text x="2.4809%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.11%)</title><rect x="2.2309%" y="1653" width="0.1115%" height="15" fill="rgb(247,98,35)"/><text x="2.4809%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.11%)</title><rect x="2.2309%" y="1637" width="0.1115%" height="15" fill="rgb(247,138,52)"/><text x="2.4809%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="2.2309%" y="1621" width="0.1115%" height="15" fill="rgb(213,79,30)"/><text x="2.4809%" y="1631.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="2.2309%" y="1605" width="0.1115%" height="15" fill="rgb(246,177,23)"/><text x="2.4809%" y="1615.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="2.2309%" y="1589" width="0.1115%" height="15" fill="rgb(230,62,27)"/><text x="2.4809%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (43 samples, 2.40%)</title><rect x="0.0000%" y="1909" width="2.3982%" height="15" fill="rgb(216,154,8)"/><text x="0.2500%" y="1919.50">co..</text></g><g><title>mbe::MacroDef::expand (43 samples, 2.40%)</title><rect x="0.0000%" y="1893" width="2.3982%" height="15" fill="rgb(244,35,45)"/><text x="0.2500%" y="1903.50">mb..</text></g><g><title>mbe::expander::expand_rules (43 samples, 2.40%)</title><rect x="0.0000%" y="1877" width="2.3982%" height="15" fill="rgb(251,115,12)"/><text x="0.2500%" y="1887.50">mb..</text></g><g><title>mbe::expander::matcher::match_ (43 samples, 2.40%)</title><rect x="0.0000%" y="1861" width="2.3982%" height="15" fill="rgb(240,54,50)"/><text x="0.2500%" y="1871.50">mb..</text></g><g><title>mbe::expander::matcher::match_loop_inner (43 samples, 2.40%)</title><rect x="0.0000%" y="1845" width="2.3982%" height="15" fill="rgb(233,84,52)"/><text x="0.2500%" y="1855.50">mb..</text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (6 samples, 0.33%)</title><rect x="2.0636%" y="1829" width="0.3346%" height="15" fill="rgb(207,117,47)"/><text x="2.3136%" y="1839.50"></text></g><g><title>tt::buffer::TokenBuffer::from_tokens (3 samples, 0.17%)</title><rect x="2.2309%" y="1813" width="0.1673%" height="15" fill="rgb(249,43,39)"/><text x="2.4809%" y="1823.50"></text></g><g><title>tt::buffer::TokenBuffer::new (3 samples, 0.17%)</title><rect x="2.2309%" y="1797" width="0.1673%" height="15" fill="rgb(209,38,44)"/><text x="2.4809%" y="1807.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (3 samples, 0.17%)</title><rect x="2.2309%" y="1781" width="0.1673%" height="15" fill="rgb(236,212,23)"/><text x="2.4809%" y="1791.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (3 samples, 0.17%)</title><rect x="2.2309%" y="1765" width="0.1673%" height="15" fill="rgb(242,79,21)"/><text x="2.4809%" y="1775.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (3 samples, 0.17%)</title><rect x="2.2309%" y="1749" width="0.1673%" height="15" fill="rgb(211,96,35)"/><text x="2.4809%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="2.3424%" y="1733" width="0.0558%" height="15" fill="rgb(253,215,40)"/><text x="2.5924%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.3424%" y="1717" width="0.0558%" height="15" fill="rgb(211,81,21)"/><text x="2.5924%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.3424%" y="1701" width="0.0558%" height="15" fill="rgb(208,190,38)"/><text x="2.5924%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="2.3424%" y="1685" width="0.0558%" height="15" fill="rgb(235,213,38)"/><text x="2.5924%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="2.3424%" y="1669" width="0.0558%" height="15" fill="rgb(237,122,38)"/><text x="2.5924%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="2.3424%" y="1653" width="0.0558%" height="15" fill="rgb(244,218,35)"/><text x="2.5924%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="2.3424%" y="1637" width="0.0558%" height="15" fill="rgb(240,68,47)"/><text x="2.5924%" y="1647.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="2.3424%" y="1621" width="0.0558%" height="15" fill="rgb(210,16,53)"/><text x="2.5924%" y="1631.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="2.3424%" y="1605" width="0.0558%" height="15" fill="rgb(235,124,12)"/><text x="2.5924%" y="1615.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="2.3424%" y="1589" width="0.0558%" height="15" fill="rgb(224,169,11)"/><text x="2.5924%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="2.3982%" y="1445" width="0.0558%" height="15" fill="rgb(250,166,2)"/><text x="2.6482%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="2.3982%" y="1429" width="0.0558%" height="15" fill="rgb(242,216,29)"/><text x="2.6482%" y="1439.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="2.3982%" y="1413" width="0.0558%" height="15" fill="rgb(230,116,27)"/><text x="2.6482%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="2.3982%" y="1397" width="0.0558%" height="15" fill="rgb(228,99,48)"/><text x="2.6482%" y="1407.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="2.3982%" y="1381" width="0.0558%" height="15" fill="rgb(253,11,6)"/><text x="2.6482%" y="1391.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="2.3982%" y="1365" width="0.0558%" height="15" fill="rgb(247,143,39)"/><text x="2.6482%" y="1375.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="2.3982%" y="1349" width="0.0558%" height="15" fill="rgb(236,97,10)"/><text x="2.6482%" y="1359.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="2.3982%" y="1333" width="0.0558%" height="15" fill="rgb(233,208,19)"/><text x="2.6482%" y="1343.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="2.3982%" y="1317" width="0.0558%" height="15" fill="rgb(216,164,2)"/><text x="2.6482%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.11%)</title><rect x="2.3982%" y="1605" width="0.1115%" height="15" fill="rgb(220,129,5)"/><text x="2.6482%" y="1615.50"></text></g><g><title>mbe::MacroDef::expand (2 samples, 0.11%)</title><rect x="2.3982%" y="1589" width="0.1115%" height="15" fill="rgb(242,17,10)"/><text x="2.6482%" y="1599.50"></text></g><g><title>mbe::expander::expand_rules (2 samples, 0.11%)</title><rect x="2.3982%" y="1573" width="0.1115%" height="15" fill="rgb(242,107,0)"/><text x="2.6482%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::transcribe (2 samples, 0.11%)</title><rect x="2.3982%" y="1557" width="0.1115%" height="15" fill="rgb(251,28,31)"/><text x="2.6482%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="2.3982%" y="1541" width="0.1115%" height="15" fill="rgb(233,223,10)"/><text x="2.6482%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="2.3982%" y="1525" width="0.1115%" height="15" fill="rgb(215,21,27)"/><text x="2.6482%" y="1535.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="2.3982%" y="1509" width="0.1115%" height="15" fill="rgb(232,23,21)"/><text x="2.6482%" y="1519.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="2.3982%" y="1493" width="0.1115%" height="15" fill="rgb(244,5,23)"/><text x="2.6482%" y="1503.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="2.3982%" y="1477" width="0.1115%" height="15" fill="rgb(226,81,46)"/><text x="2.6482%" y="1487.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="2.3982%" y="1461" width="0.1115%" height="15" fill="rgb(247,70,30)"/><text x="2.6482%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="2.4540%" y="1445" width="0.0558%" height="15" fill="rgb(212,68,19)"/><text x="2.7040%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="2.4540%" y="1429" width="0.0558%" height="15" fill="rgb(240,187,13)"/><text x="2.7040%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="2.4540%" y="1413" width="0.0558%" height="15" fill="rgb(223,113,26)"/><text x="2.7040%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.17%)</title><rect x="2.3982%" y="1909" width="0.1673%" height="15" fill="rgb(206,192,2)"/><text x="2.6482%" y="1919.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3 samples, 0.17%)</title><rect x="2.3982%" y="1893" width="0.1673%" height="15" fill="rgb(241,108,4)"/><text x="2.6482%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.17%)</title><rect x="2.3982%" y="1877" width="0.1673%" height="15" fill="rgb(247,173,49)"/><text x="2.6482%" y="1887.50"></text></g><g><title>std::panicking::try (3 samples, 0.17%)</title><rect x="2.3982%" y="1861" width="0.1673%" height="15" fill="rgb(224,114,35)"/><text x="2.6482%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.17%)</title><rect x="2.3982%" y="1845" width="0.1673%" height="15" fill="rgb(245,159,27)"/><text x="2.6482%" y="1855.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="2.3982%" y="1829" width="0.1673%" height="15" fill="rgb(245,172,44)"/><text x="2.6482%" y="1839.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3 samples, 0.17%)</title><rect x="2.3982%" y="1813" width="0.1673%" height="15" fill="rgb(236,23,11)"/><text x="2.6482%" y="1823.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.17%)</title><rect x="2.3982%" y="1797" width="0.1673%" height="15" fill="rgb(205,117,38)"/><text x="2.6482%" y="1807.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.17%)</title><rect x="2.3982%" y="1781" width="0.1673%" height="15" fill="rgb(237,72,25)"/><text x="2.6482%" y="1791.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.17%)</title><rect x="2.3982%" y="1765" width="0.1673%" height="15" fill="rgb(244,70,9)"/><text x="2.6482%" y="1775.50"></text></g><g><title>test::run_test_in_process (3 samples, 0.17%)</title><rect x="2.3982%" y="1749" width="0.1673%" height="15" fill="rgb(217,125,39)"/><text x="2.6482%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.17%)</title><rect x="2.3982%" y="1733" width="0.1673%" height="15" fill="rgb(235,36,10)"/><text x="2.6482%" y="1743.50"></text></g><g><title>std::panicking::try (3 samples, 0.17%)</title><rect x="2.3982%" y="1717" width="0.1673%" height="15" fill="rgb(251,123,47)"/><text x="2.6482%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.17%)</title><rect x="2.3982%" y="1701" width="0.1673%" height="15" fill="rgb(221,13,13)"/><text x="2.6482%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="2.3982%" y="1685" width="0.1673%" height="15" fill="rgb(238,131,9)"/><text x="2.6482%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="2.3982%" y="1669" width="0.1673%" height="15" fill="rgb(211,50,8)"/><text x="2.6482%" y="1679.50"></text></g><g><title>test::__rust_begin_short_backtrace (3 samples, 0.17%)</title><rect x="2.3982%" y="1653" width="0.1673%" height="15" fill="rgb(245,182,24)"/><text x="2.6482%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.17%)</title><rect x="2.3982%" y="1637" width="0.1673%" height="15" fill="rgb(242,14,37)"/><text x="2.6482%" y="1647.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (3 samples, 0.17%)</title><rect x="2.3982%" y="1621" width="0.1673%" height="15" fill="rgb(246,228,12)"/><text x="2.6482%" y="1631.50"></text></g><g><title>mbe::MacroDef::expand (1 samples, 0.06%)</title><rect x="2.5098%" y="1605" width="0.0558%" height="15" fill="rgb(213,55,15)"/><text x="2.7598%" y="1615.50"></text></g><g><title>mbe::expander::expand_rules (1 samples, 0.06%)</title><rect x="2.5098%" y="1589" width="0.0558%" height="15" fill="rgb(209,9,3)"/><text x="2.7598%" y="1599.50"></text></g><g><title>mbe::expander::matcher::match_ (1 samples, 0.06%)</title><rect x="2.5098%" y="1573" width="0.0558%" height="15" fill="rgb(230,59,30)"/><text x="2.7598%" y="1583.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="2.5098%" y="1557" width="0.0558%" height="15" fill="rgb(209,121,21)"/><text x="2.7598%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="2.5098%" y="1541" width="0.0558%" height="15" fill="rgb(220,109,13)"/><text x="2.7598%" y="1551.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="2.5098%" y="1525" width="0.0558%" height="15" fill="rgb(232,18,1)"/><text x="2.7598%" y="1535.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.06%)</title><rect x="2.5098%" y="1509" width="0.0558%" height="15" fill="rgb(215,41,42)"/><text x="2.7598%" y="1519.50"></text></g><g><title>mbe::MacroDef::expand (4 samples, 0.22%)</title><rect x="2.5655%" y="1909" width="0.2231%" height="15" fill="rgb(224,123,36)"/><text x="2.8155%" y="1919.50"></text></g><g><title>mbe::expander::expand_rules (4 samples, 0.22%)</title><rect x="2.5655%" y="1893" width="0.2231%" height="15" fill="rgb(240,125,3)"/><text x="2.8155%" y="1903.50"></text></g><g><title>mbe::expander::matcher::match_ (4 samples, 0.22%)</title><rect x="2.5655%" y="1877" width="0.2231%" height="15" fill="rgb(205,98,50)"/><text x="2.8155%" y="1887.50"></text></g><g><title>mbe::expander::matcher::match_loop_inner (4 samples, 0.22%)</title><rect x="2.5655%" y="1861" width="0.2231%" height="15" fill="rgb(205,185,37)"/><text x="2.8155%" y="1871.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="2.5655%" y="1845" width="0.2231%" height="15" fill="rgb(238,207,15)"/><text x="2.8155%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="2.5655%" y="1829" width="0.2231%" height="15" fill="rgb(213,199,42)"/><text x="2.8155%" y="1839.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.22%)</title><rect x="2.5655%" y="1813" width="0.2231%" height="15" fill="rgb(235,201,11)"/><text x="2.8155%" y="1823.50"></text></g><g><title>_int_malloc (4 samples, 0.22%)</title><rect x="2.5655%" y="1797" width="0.2231%" height="15" fill="rgb(207,46,11)"/><text x="2.8155%" y="1807.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="2.7886%" y="1813" width="0.0558%" height="15" fill="rgb(241,35,35)"/><text x="3.0386%" y="1823.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.06%)</title><rect x="2.7886%" y="1797" width="0.0558%" height="15" fill="rgb(243,32,47)"/><text x="3.0386%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="2.7886%" y="1781" width="0.0558%" height="15" fill="rgb(247,202,23)"/><text x="3.0386%" y="1791.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="2.7886%" y="1765" width="0.0558%" height="15" fill="rgb(219,102,11)"/><text x="3.0386%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="2.7886%" y="1749" width="0.0558%" height="15" fill="rgb(243,110,44)"/><text x="3.0386%" y="1759.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="2.7886%" y="1733" width="0.0558%" height="15" fill="rgb(222,74,54)"/><text x="3.0386%" y="1743.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="2.7886%" y="1717" width="0.0558%" height="15" fill="rgb(216,99,12)"/><text x="3.0386%" y="1727.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="2.7886%" y="1701" width="0.0558%" height="15" fill="rgb(226,22,26)"/><text x="3.0386%" y="1711.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="2.8444%" y="1797" width="0.0558%" height="15" fill="rgb(217,163,10)"/><text x="3.0944%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="2.8444%" y="1781" width="0.0558%" height="15" fill="rgb(213,25,53)"/><text x="3.0944%" y="1791.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="3.2348%" y="1749" width="0.0558%" height="15" fill="rgb(252,105,26)"/><text x="3.4848%" y="1759.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.45%)</title><rect x="2.9002%" y="1781" width="0.4462%" height="15" fill="rgb(220,39,43)"/><text x="3.1502%" y="1791.50"></text></g><g><title>_int_malloc (6 samples, 0.33%)</title><rect x="3.0117%" y="1765" width="0.3346%" height="15" fill="rgb(229,68,48)"/><text x="3.2617%" y="1775.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="3.2906%" y="1749" width="0.0558%" height="15" fill="rgb(252,8,32)"/><text x="3.5406%" y="1759.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_keyword (5 samples, 0.28%)</title><rect x="3.3463%" y="1781" width="0.2789%" height="15" fill="rgb(223,20,43)"/><text x="3.5963%" y="1791.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.22%)</title><rect x="3.4021%" y="1765" width="0.2231%" height="15" fill="rgb(229,81,49)"/><text x="3.6521%" y="1775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.22%)</title><rect x="3.4021%" y="1749" width="0.2231%" height="15" fill="rgb(236,28,36)"/><text x="3.6521%" y="1759.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.22%)</title><rect x="3.4021%" y="1733" width="0.2231%" height="15" fill="rgb(249,185,26)"/><text x="3.6521%" y="1743.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.22%)</title><rect x="3.4021%" y="1717" width="0.2231%" height="15" fill="rgb(249,174,33)"/><text x="3.6521%" y="1727.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.11%)</title><rect x="3.5137%" y="1701" width="0.1115%" height="15" fill="rgb(233,201,37)"/><text x="3.7637%" y="1711.50"></text></g><g><title>tt::buffer::Cursor::eof (3 samples, 0.17%)</title><rect x="3.6252%" y="1781" width="0.1673%" height="15" fill="rgb(221,78,26)"/><text x="3.8752%" y="1791.50"></text></g><g><title>tt::buffer::TokenBuffer::entry (1 samples, 0.06%)</title><rect x="3.7368%" y="1765" width="0.0558%" height="15" fill="rgb(250,127,30)"/><text x="3.9868%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.06%)</title><rect x="3.7368%" y="1749" width="0.0558%" height="15" fill="rgb(230,49,44)"/><text x="3.9868%" y="1759.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.06%)</title><rect x="3.7368%" y="1733" width="0.0558%" height="15" fill="rgb(229,67,23)"/><text x="3.9868%" y="1743.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="3.7368%" y="1717" width="0.0558%" height="15" fill="rgb(249,83,47)"/><text x="3.9868%" y="1727.50"></text></g><g><title>mbe::subtree_source::SubtreeTokenSource::new (20 samples, 1.12%)</title><rect x="2.9002%" y="1797" width="1.1154%" height="15" fill="rgb(215,43,3)"/><text x="3.1502%" y="1807.50"></text></g><g><title>tt::buffer::Cursor::token_tree (4 samples, 0.22%)</title><rect x="3.7925%" y="1781" width="0.2231%" height="15" fill="rgb(238,154,13)"/><text x="4.0425%" y="1791.50"></text></g><g><title>tt::buffer::Cursor::entry (1 samples, 0.06%)</title><rect x="3.9598%" y="1765" width="0.0558%" height="15" fill="rgb(219,56,2)"/><text x="4.2098%" y="1775.50"></text></g><g><title>tt::buffer::TokenBuffer::entry (1 samples, 0.06%)</title><rect x="3.9598%" y="1749" width="0.0558%" height="15" fill="rgb(233,0,4)"/><text x="4.2098%" y="1759.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.06%)</title><rect x="3.9598%" y="1733" width="0.0558%" height="15" fill="rgb(235,30,7)"/><text x="4.2098%" y="1743.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.06%)</title><rect x="3.9598%" y="1717" width="0.0558%" height="15" fill="rgb(250,79,13)"/><text x="4.2098%" y="1727.50"></text></g><g><title>parser::grammar::fragments::meta_item (1 samples, 0.06%)</title><rect x="4.0156%" y="1749" width="0.0558%" height="15" fill="rgb(211,146,34)"/><text x="4.2656%" y="1759.50"></text></g><g><title>parser::grammar::items::token_tree (1 samples, 0.06%)</title><rect x="4.0156%" y="1733" width="0.0558%" height="15" fill="rgb(228,22,38)"/><text x="4.2656%" y="1743.50"></text></g><g><title>parser::parser::Parser::expect (1 samples, 0.06%)</title><rect x="4.0156%" y="1717" width="0.0558%" height="15" fill="rgb(235,168,5)"/><text x="4.2656%" y="1727.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="4.0156%" y="1701" width="0.0558%" height="15" fill="rgb(221,155,16)"/><text x="4.2656%" y="1711.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="4.0156%" y="1685" width="0.0558%" height="15" fill="rgb(215,215,53)"/><text x="4.2656%" y="1695.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="4.0156%" y="1669" width="0.0558%" height="15" fill="rgb(223,4,10)"/><text x="4.2656%" y="1679.50"></text></g><g><title>&lt;parser::syntax_kind::generated::SyntaxKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.06%)</title><rect x="4.0156%" y="1653" width="0.0558%" height="15" fill="rgb(234,103,6)"/><text x="4.2656%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.11%)</title><rect x="4.0156%" y="1765" width="0.1115%" height="15" fill="rgb(227,97,0)"/><text x="4.2656%" y="1775.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="4.0714%" y="1749" width="0.0558%" height="15" fill="rgb(234,150,53)"/><text x="4.3214%" y="1759.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="4.0714%" y="1733" width="0.0558%" height="15" fill="rgb(228,201,54)"/><text x="4.3214%" y="1743.50"></text></g><g><title>parser::grammar::paths::type_path (1 samples, 0.06%)</title><rect x="4.0714%" y="1717" width="0.0558%" height="15" fill="rgb(222,22,37)"/><text x="4.3214%" y="1727.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="4.0714%" y="1701" width="0.0558%" height="15" fill="rgb(237,53,32)"/><text x="4.3214%" y="1711.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="4.0714%" y="1685" width="0.0558%" height="15" fill="rgb(233,25,53)"/><text x="4.3214%" y="1695.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="4.0714%" y="1669" width="0.0558%" height="15" fill="rgb(210,40,34)"/><text x="4.3214%" y="1679.50"></text></g><g><title>parser::parser::Parser::at_composite2 (1 samples, 0.06%)</title><rect x="4.0714%" y="1653" width="0.0558%" height="15" fill="rgb(241,220,44)"/><text x="4.3214%" y="1663.50"></text></g><g><title>&lt;mbe::subtree_source::SubtreeTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="4.0714%" y="1637" width="0.0558%" height="15" fill="rgb(235,28,35)"/><text x="4.3214%" y="1647.50"></text></g><g><title>&lt;mbe::tt_iter::TtIter::expect_fragment::OffsetTokenSink as parser::TreeSink&gt;::token (1 samples, 0.06%)</title><rect x="4.1272%" y="1749" width="0.0558%" height="15" fill="rgb(210,56,17)"/><text x="4.3772%" y="1759.50"></text></g><g><title>tt::buffer::Cursor::bump_subtree (1 samples, 0.06%)</title><rect x="4.1272%" y="1733" width="0.0558%" height="15" fill="rgb(224,130,29)"/><text x="4.3772%" y="1743.50"></text></g><g><title>tt::buffer::Cursor::entry (1 samples, 0.06%)</title><rect x="4.1272%" y="1717" width="0.0558%" height="15" fill="rgb(235,212,8)"/><text x="4.3772%" y="1727.50"></text></g><g><title>tt::buffer::TokenBuffer::entry (1 samples, 0.06%)</title><rect x="4.1272%" y="1701" width="0.0558%" height="15" fill="rgb(223,33,50)"/><text x="4.3772%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.06%)</title><rect x="4.1272%" y="1685" width="0.0558%" height="15" fill="rgb(219,149,13)"/><text x="4.3772%" y="1695.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.06%)</title><rect x="4.1272%" y="1669" width="0.0558%" height="15" fill="rgb(250,156,29)"/><text x="4.3772%" y="1679.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="4.1272%" y="1653" width="0.0558%" height="15" fill="rgb(216,193,19)"/><text x="4.3772%" y="1663.50"></text></g><g><title>parser::parse_fragment (4 samples, 0.22%)</title><rect x="4.0156%" y="1797" width="0.2231%" height="15" fill="rgb(216,135,14)"/><text x="4.2656%" y="1807.50"></text></g><g><title>parser::parse_from_tokens (4 samples, 0.22%)</title><rect x="4.0156%" y="1781" width="0.2231%" height="15" fill="rgb(241,47,5)"/><text x="4.2656%" y="1791.50"></text></g><g><title>parser::event::process (2 samples, 0.11%)</title><rect x="4.1272%" y="1765" width="0.1115%" height="15" fill="rgb(233,42,35)"/><text x="4.3772%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parser::event::Event&gt;&gt; (1 samples, 0.06%)</title><rect x="4.1829%" y="1749" width="0.0558%" height="15" fill="rgb(231,13,6)"/><text x="4.4329%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;parser::event::Event&gt;&gt; (1 samples, 0.06%)</title><rect x="4.1829%" y="1733" width="0.0558%" height="15" fill="rgb(207,181,40)"/><text x="4.4329%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="4.1829%" y="1717" width="0.0558%" height="15" fill="rgb(254,173,49)"/><text x="4.4329%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="4.1829%" y="1701" width="0.0558%" height="15" fill="rgb(221,1,38)"/><text x="4.4329%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="4.1829%" y="1685" width="0.0558%" height="15" fill="rgb(206,124,46)"/><text x="4.4329%" y="1695.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="4.1829%" y="1669" width="0.0558%" height="15" fill="rgb(249,21,11)"/><text x="4.4329%" y="1679.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="4.1829%" y="1653" width="0.0558%" height="15" fill="rgb(222,201,40)"/><text x="4.4329%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.17%)</title><rect x="4.2387%" y="1733" width="0.1673%" height="15" fill="rgb(235,61,29)"/><text x="4.4887%" y="1743.50"></text></g><g><title>core::ptr::write (1 samples, 0.06%)</title><rect x="4.3503%" y="1717" width="0.0558%" height="15" fill="rgb(219,207,3)"/><text x="4.6003%" y="1727.50"></text></g><g><title>&lt;&amp;[tt::TokenTree] as tt::buffer::TokenList&gt;::entries (4 samples, 0.22%)</title><rect x="4.2387%" y="1749" width="0.2231%" height="15" fill="rgb(222,56,46)"/><text x="4.4887%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.06%)</title><rect x="4.4060%" y="1733" width="0.0558%" height="15" fill="rgb(239,76,54)"/><text x="4.6560%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="4.4060%" y="1717" width="0.0558%" height="15" fill="rgb(231,124,27)"/><text x="4.6560%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="4.4060%" y="1701" width="0.0558%" height="15" fill="rgb(249,195,6)"/><text x="4.6560%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="4.4060%" y="1685" width="0.0558%" height="15" fill="rgb(237,174,47)"/><text x="4.6560%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="4.4060%" y="1669" width="0.0558%" height="15" fill="rgb(206,201,31)"/><text x="4.6560%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="4.4060%" y="1653" width="0.0558%" height="15" fill="rgb(231,57,52)"/><text x="4.6560%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="4.4060%" y="1637" width="0.0558%" height="15" fill="rgb(248,177,22)"/><text x="4.6560%" y="1647.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="4.4060%" y="1621" width="0.0558%" height="15" fill="rgb(215,211,37)"/><text x="4.6560%" y="1631.50"></text></g><g><title>&lt;&amp;[tt::TokenTree] as tt::buffer::TokenList&gt;::entries (1 samples, 0.06%)</title><rect x="4.4618%" y="1733" width="0.0558%" height="15" fill="rgb(241,128,51)"/><text x="4.7118%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.06%)</title><rect x="4.4618%" y="1717" width="0.0558%" height="15" fill="rgb(227,165,31)"/><text x="4.7118%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="4.4618%" y="1701" width="0.0558%" height="15" fill="rgb(228,167,24)"/><text x="4.7118%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="4.4618%" y="1685" width="0.0558%" height="15" fill="rgb(228,143,12)"/><text x="4.7118%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="4.4618%" y="1669" width="0.0558%" height="15" fill="rgb(249,149,8)"/><text x="4.7118%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="4.4618%" y="1653" width="0.0558%" height="15" fill="rgb(243,35,44)"/><text x="4.7118%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="4.4618%" y="1637" width="0.0558%" height="15" fill="rgb(246,89,9)"/><text x="4.7118%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="4.4618%" y="1621" width="0.0558%" height="15" fill="rgb(233,213,13)"/><text x="4.7118%" y="1631.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="4.4618%" y="1605" width="0.0558%" height="15" fill="rgb(233,141,41)"/><text x="4.7118%" y="1615.50"></text></g><g><title>mbe::expander::matcher::match_ (32 samples, 1.78%)</title><rect x="2.7886%" y="1845" width="1.7847%" height="15" fill="rgb(239,167,4)"/><text x="3.0386%" y="1855.50">m..</text></g><g><title>mbe::expander::matcher::match_loop_inner (32 samples, 1.78%)</title><rect x="2.7886%" y="1829" width="1.7847%" height="15" fill="rgb(209,217,16)"/><text x="3.0386%" y="1839.50">m..</text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (31 samples, 1.73%)</title><rect x="2.8444%" y="1813" width="1.7289%" height="15" fill="rgb(219,88,35)"/><text x="3.0944%" y="1823.50"></text></g><g><title>tt::buffer::TokenBuffer::from_tokens (6 samples, 0.33%)</title><rect x="4.2387%" y="1797" width="0.3346%" height="15" fill="rgb(220,193,23)"/><text x="4.4887%" y="1807.50"></text></g><g><title>tt::buffer::TokenBuffer::new (6 samples, 0.33%)</title><rect x="4.2387%" y="1781" width="0.3346%" height="15" fill="rgb(230,90,52)"/><text x="4.4887%" y="1791.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (6 samples, 0.33%)</title><rect x="4.2387%" y="1765" width="0.3346%" height="15" fill="rgb(252,106,19)"/><text x="4.4887%" y="1775.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (2 samples, 0.11%)</title><rect x="4.4618%" y="1749" width="0.1115%" height="15" fill="rgb(206,74,20)"/><text x="4.7118%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="4.5176%" y="1733" width="0.0558%" height="15" fill="rgb(230,138,44)"/><text x="4.7676%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="4.5176%" y="1717" width="0.0558%" height="15" fill="rgb(235,182,43)"/><text x="4.7676%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="4.5176%" y="1701" width="0.0558%" height="15" fill="rgb(242,16,51)"/><text x="4.7676%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="4.5176%" y="1685" width="0.0558%" height="15" fill="rgb(248,9,4)"/><text x="4.7676%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="4.5176%" y="1669" width="0.0558%" height="15" fill="rgb(210,31,22)"/><text x="4.7676%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="4.5176%" y="1653" width="0.0558%" height="15" fill="rgb(239,54,39)"/><text x="4.7676%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="4.5176%" y="1637" width="0.0558%" height="15" fill="rgb(230,99,41)"/><text x="4.7676%" y="1647.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="4.5176%" y="1621" width="0.0558%" height="15" fill="rgb(253,106,12)"/><text x="4.7676%" y="1631.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="4.5176%" y="1605" width="0.0558%" height="15" fill="rgb(213,46,41)"/><text x="4.7676%" y="1615.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="4.5176%" y="1589" width="0.0558%" height="15" fill="rgb(215,133,35)"/><text x="4.7676%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="4.5733%" y="1781" width="0.0558%" height="15" fill="rgb(213,28,5)"/><text x="4.8233%" y="1791.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.5733%" y="1765" width="0.0558%" height="15" fill="rgb(215,77,49)"/><text x="4.8233%" y="1775.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.5733%" y="1749" width="0.0558%" height="15" fill="rgb(248,100,22)"/><text x="4.8233%" y="1759.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="4.5733%" y="1733" width="0.0558%" height="15" fill="rgb(208,67,9)"/><text x="4.8233%" y="1743.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.5733%" y="1717" width="0.0558%" height="15" fill="rgb(219,133,21)"/><text x="4.8233%" y="1727.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="4.5733%" y="1701" width="0.0558%" height="15" fill="rgb(246,46,29)"/><text x="4.8233%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.5733%" y="1685" width="0.0558%" height="15" fill="rgb(246,185,52)"/><text x="4.8233%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.5733%" y="1669" width="0.0558%" height="15" fill="rgb(252,136,11)"/><text x="4.8233%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="4.5733%" y="1653" width="0.0558%" height="15" fill="rgb(219,138,53)"/><text x="4.8233%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="4.6291%" y="1669" width="0.0558%" height="15" fill="rgb(211,51,23)"/><text x="4.8791%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="4.6291%" y="1653" width="0.0558%" height="15" fill="rgb(247,221,28)"/><text x="4.8791%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="4.6291%" y="1637" width="0.0558%" height="15" fill="rgb(251,222,45)"/><text x="4.8791%" y="1647.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="4.6291%" y="1621" width="0.0558%" height="15" fill="rgb(217,162,53)"/><text x="4.8791%" y="1631.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="4.6291%" y="1605" width="0.0558%" height="15" fill="rgb(229,93,14)"/><text x="4.8791%" y="1615.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="4.6291%" y="1589" width="0.0558%" height="15" fill="rgb(209,67,49)"/><text x="4.8791%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (35 samples, 1.95%)</title><rect x="2.7886%" y="1893" width="1.9520%" height="15" fill="rgb(213,87,29)"/><text x="3.0386%" y="1903.50">c..</text></g><g><title>mbe::MacroDef::expand (35 samples, 1.95%)</title><rect x="2.7886%" y="1877" width="1.9520%" height="15" fill="rgb(205,151,52)"/><text x="3.0386%" y="1887.50">m..</text></g><g><title>mbe::expander::expand_rules (35 samples, 1.95%)</title><rect x="2.7886%" y="1861" width="1.9520%" height="15" fill="rgb(253,215,39)"/><text x="3.0386%" y="1871.50">m..</text></g><g><title>mbe::expander::transcriber::transcribe (3 samples, 0.17%)</title><rect x="4.5733%" y="1845" width="0.1673%" height="15" fill="rgb(221,220,41)"/><text x="4.8233%" y="1855.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="4.5733%" y="1829" width="0.1673%" height="15" fill="rgb(218,133,21)"/><text x="4.8233%" y="1839.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="4.5733%" y="1813" width="0.1673%" height="15" fill="rgb(221,193,43)"/><text x="4.8233%" y="1823.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="4.5733%" y="1797" width="0.1673%" height="15" fill="rgb(240,128,52)"/><text x="4.8233%" y="1807.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="4.6291%" y="1781" width="0.1115%" height="15" fill="rgb(253,114,12)"/><text x="4.8791%" y="1791.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="4.6291%" y="1765" width="0.1115%" height="15" fill="rgb(215,223,47)"/><text x="4.8791%" y="1775.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="4.6291%" y="1749" width="0.1115%" height="15" fill="rgb(248,225,23)"/><text x="4.8791%" y="1759.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="4.6291%" y="1733" width="0.1115%" height="15" fill="rgb(250,108,0)"/><text x="4.8791%" y="1743.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="4.6291%" y="1717" width="0.1115%" height="15" fill="rgb(228,208,7)"/><text x="4.8791%" y="1727.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="4.6291%" y="1701" width="0.1115%" height="15" fill="rgb(244,45,10)"/><text x="4.8791%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="4.6291%" y="1685" width="0.1115%" height="15" fill="rgb(207,125,25)"/><text x="4.8791%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="4.6849%" y="1669" width="0.0558%" height="15" fill="rgb(210,195,18)"/><text x="4.9349%" y="1679.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="4.7407%" y="1797" width="0.0558%" height="15" fill="rgb(249,80,12)"/><text x="4.9907%" y="1807.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="4.7964%" y="1797" width="0.0558%" height="15" fill="rgb(221,65,9)"/><text x="5.0464%" y="1807.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="4.7407%" y="1829" width="0.2231%" height="15" fill="rgb(235,49,36)"/><text x="4.9907%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="4.7407%" y="1813" width="0.2231%" height="15" fill="rgb(225,32,20)"/><text x="4.9907%" y="1823.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="4.8522%" y="1797" width="0.1115%" height="15" fill="rgb(215,141,46)"/><text x="5.1022%" y="1807.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="4.9637%" y="1813" width="0.0558%" height="15" fill="rgb(250,160,47)"/><text x="5.2137%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="5.0195%" y="1781" width="0.0558%" height="15" fill="rgb(216,222,40)"/><text x="5.2695%" y="1791.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="5.0195%" y="1765" width="0.0558%" height="15" fill="rgb(234,217,39)"/><text x="5.2695%" y="1775.50"></text></g><g><title>mbe::expander::matcher::&lt;impl mbe::expander::Bindings&gt;::push_nested (4 samples, 0.22%)</title><rect x="4.9637%" y="1829" width="0.2231%" height="15" fill="rgb(207,178,40)"/><text x="5.2137%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.17%)</title><rect x="5.0195%" y="1813" width="0.1673%" height="15" fill="rgb(221,136,13)"/><text x="5.2695%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="5.0195%" y="1797" width="0.1673%" height="15" fill="rgb(249,199,10)"/><text x="5.2695%" y="1807.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="5.0753%" y="1781" width="0.1115%" height="15" fill="rgb(249,222,13)"/><text x="5.3253%" y="1791.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="5.0753%" y="1765" width="0.1115%" height="15" fill="rgb(244,185,38)"/><text x="5.3253%" y="1775.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="5.0753%" y="1749" width="0.1115%" height="15" fill="rgb(236,202,9)"/><text x="5.3253%" y="1759.50"></text></g><g><title>mbe::expander::matcher::match_ (9 samples, 0.50%)</title><rect x="4.7407%" y="1861" width="0.5020%" height="15" fill="rgb(250,229,37)"/><text x="4.9907%" y="1871.50"></text></g><g><title>mbe::expander::matcher::match_loop_inner (9 samples, 0.50%)</title><rect x="4.7407%" y="1845" width="0.5020%" height="15" fill="rgb(206,174,23)"/><text x="4.9907%" y="1855.50"></text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (1 samples, 0.06%)</title><rect x="5.1868%" y="1829" width="0.0558%" height="15" fill="rgb(211,33,43)"/><text x="5.4368%" y="1839.50"></text></g><g><title>parser::parse_fragment (1 samples, 0.06%)</title><rect x="5.1868%" y="1813" width="0.0558%" height="15" fill="rgb(245,58,50)"/><text x="5.4368%" y="1823.50"></text></g><g><title>parser::parse_from_tokens (1 samples, 0.06%)</title><rect x="5.1868%" y="1797" width="0.0558%" height="15" fill="rgb(244,68,36)"/><text x="5.4368%" y="1807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.06%)</title><rect x="5.1868%" y="1781" width="0.0558%" height="15" fill="rgb(232,229,15)"/><text x="5.4368%" y="1791.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="5.1868%" y="1765" width="0.0558%" height="15" fill="rgb(254,30,23)"/><text x="5.4368%" y="1775.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="5.1868%" y="1749" width="0.0558%" height="15" fill="rgb(235,160,14)"/><text x="5.4368%" y="1759.50"></text></g><g><title>parser::grammar::paths::type_path (1 samples, 0.06%)</title><rect x="5.1868%" y="1733" width="0.0558%" height="15" fill="rgb(212,155,44)"/><text x="5.4368%" y="1743.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="5.1868%" y="1717" width="0.0558%" height="15" fill="rgb(226,2,50)"/><text x="5.4368%" y="1727.50"></text></g><g><title>parser::grammar::paths::path_segment (1 samples, 0.06%)</title><rect x="5.1868%" y="1701" width="0.0558%" height="15" fill="rgb(234,177,6)"/><text x="5.4368%" y="1711.50"></text></g><g><title>parser::grammar::name_ref (1 samples, 0.06%)</title><rect x="5.1868%" y="1685" width="0.0558%" height="15" fill="rgb(217,24,9)"/><text x="5.4368%" y="1695.50"></text></g><g><title>parser::parser::Parser::bump (1 samples, 0.06%)</title><rect x="5.1868%" y="1669" width="0.0558%" height="15" fill="rgb(220,13,46)"/><text x="5.4368%" y="1679.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="5.1868%" y="1653" width="0.0558%" height="15" fill="rgb(239,221,27)"/><text x="5.4368%" y="1663.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="5.1868%" y="1637" width="0.0558%" height="15" fill="rgb(222,198,25)"/><text x="5.4368%" y="1647.50"></text></g><g><title>parser::parser::Parser::push_event (1 samples, 0.06%)</title><rect x="5.1868%" y="1621" width="0.0558%" height="15" fill="rgb(211,99,13)"/><text x="5.4368%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="5.1868%" y="1605" width="0.0558%" height="15" fill="rgb(232,111,31)"/><text x="5.4368%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="5.1868%" y="1589" width="0.0558%" height="15" fill="rgb(245,82,37)"/><text x="5.4368%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="5.1868%" y="1573" width="0.0558%" height="15" fill="rgb(227,149,46)"/><text x="5.4368%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="5.1868%" y="1557" width="0.0558%" height="15" fill="rgb(218,36,50)"/><text x="5.4368%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="5.1868%" y="1541" width="0.0558%" height="15" fill="rgb(226,80,48)"/><text x="5.4368%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="5.1868%" y="1525" width="0.0558%" height="15" fill="rgb(238,224,15)"/><text x="5.4368%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="5.1868%" y="1509" width="0.0558%" height="15" fill="rgb(241,136,10)"/><text x="5.4368%" y="1519.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="5.1868%" y="1493" width="0.0558%" height="15" fill="rgb(208,32,45)"/><text x="5.4368%" y="1503.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="5.1868%" y="1477" width="0.0558%" height="15" fill="rgb(207,135,9)"/><text x="5.4368%" y="1487.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="5.1868%" y="1461" width="0.0558%" height="15" fill="rgb(206,86,44)"/><text x="5.4368%" y="1471.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="5.1868%" y="1445" width="0.0558%" height="15" fill="rgb(245,177,15)"/><text x="5.4368%" y="1455.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="5.1868%" y="1429" width="0.0558%" height="15" fill="rgb(206,64,50)"/><text x="5.4368%" y="1439.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (45 samples, 2.51%)</title><rect x="2.7886%" y="1909" width="2.5098%" height="15" fill="rgb(234,36,40)"/><text x="3.0386%" y="1919.50">mb..</text></g><g><title>mbe::MacroDef::expand (10 samples, 0.56%)</title><rect x="4.7407%" y="1893" width="0.5577%" height="15" fill="rgb(213,64,8)"/><text x="4.9907%" y="1903.50"></text></g><g><title>mbe::expander::expand_rules (10 samples, 0.56%)</title><rect x="4.7407%" y="1877" width="0.5577%" height="15" fill="rgb(210,75,36)"/><text x="4.9907%" y="1887.50"></text></g><g><title>mbe::expander::transcriber::transcribe (1 samples, 0.06%)</title><rect x="5.2426%" y="1861" width="0.0558%" height="15" fill="rgb(229,88,21)"/><text x="5.4926%" y="1871.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1845" width="0.0558%" height="15" fill="rgb(252,204,47)"/><text x="5.4926%" y="1855.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1829" width="0.0558%" height="15" fill="rgb(208,77,27)"/><text x="5.4926%" y="1839.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1813" width="0.0558%" height="15" fill="rgb(221,76,26)"/><text x="5.4926%" y="1823.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1797" width="0.0558%" height="15" fill="rgb(225,139,18)"/><text x="5.4926%" y="1807.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1781" width="0.0558%" height="15" fill="rgb(230,137,11)"/><text x="5.4926%" y="1791.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="5.2426%" y="1765" width="0.0558%" height="15" fill="rgb(212,28,1)"/><text x="5.4926%" y="1775.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1749" width="0.0558%" height="15" fill="rgb(248,164,17)"/><text x="5.4926%" y="1759.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="5.2426%" y="1733" width="0.0558%" height="15" fill="rgb(222,171,42)"/><text x="5.4926%" y="1743.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1717" width="0.0558%" height="15" fill="rgb(243,84,45)"/><text x="5.4926%" y="1727.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1701" width="0.0558%" height="15" fill="rgb(252,49,23)"/><text x="5.4926%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="5.2426%" y="1685" width="0.0558%" height="15" fill="rgb(215,19,7)"/><text x="5.4926%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="5.2426%" y="1669" width="0.0558%" height="15" fill="rgb(238,81,41)"/><text x="5.4926%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="5.2426%" y="1653" width="0.0558%" height="15" fill="rgb(210,199,37)"/><text x="5.4926%" y="1663.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="5.2426%" y="1637" width="0.0558%" height="15" fill="rgb(244,192,49)"/><text x="5.4926%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="5.2426%" y="1621" width="0.0558%" height="15" fill="rgb(226,211,11)"/><text x="5.4926%" y="1631.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="5.2426%" y="1605" width="0.0558%" height="15" fill="rgb(236,162,54)"/><text x="5.4926%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="5.2426%" y="1589" width="0.0558%" height="15" fill="rgb(220,229,9)"/><text x="5.4926%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="5.2426%" y="1573" width="0.0558%" height="15" fill="rgb(250,87,22)"/><text x="5.4926%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="5.2426%" y="1557" width="0.0558%" height="15" fill="rgb(239,43,17)"/><text x="5.4926%" y="1567.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="5.2426%" y="1541" width="0.0558%" height="15" fill="rgb(231,177,25)"/><text x="5.4926%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.45%)</title><rect x="8.5890%" y="1765" width="0.4462%" height="15" fill="rgb(219,179,1)"/><text x="8.8390%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.84%)</title><rect x="8.2543%" y="1781" width="0.8366%" height="15" fill="rgb(238,219,53)"/><text x="8.5043%" y="1791.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="9.0351%" y="1765" width="0.0558%" height="15" fill="rgb(232,167,36)"/><text x="9.2851%" y="1775.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="9.4813%" y="1749" width="0.1673%" height="15" fill="rgb(244,19,51)"/><text x="9.7313%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="9.5929%" y="1733" width="0.0558%" height="15" fill="rgb(224,6,22)"/><text x="9.8429%" y="1743.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (12 samples, 0.67%)</title><rect x="9.0909%" y="1781" width="0.6693%" height="15" fill="rgb(224,145,5)"/><text x="9.3409%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.45%)</title><rect x="9.3140%" y="1765" width="0.4462%" height="15" fill="rgb(234,130,49)"/><text x="9.5640%" y="1775.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="9.6486%" y="1749" width="0.1115%" height="15" fill="rgb(254,6,2)"/><text x="9.8986%" y="1759.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="9.7044%" y="1733" width="0.0558%" height="15" fill="rgb(208,96,46)"/><text x="9.9544%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 4.13%)</title><rect x="6.1907%" y="1797" width="4.1272%" height="15" fill="rgb(239,3,39)"/><text x="6.4407%" y="1807.50">&lt;T a..</text></g><g><title>__GI___libc_malloc (10 samples, 0.56%)</title><rect x="9.7602%" y="1781" width="0.5577%" height="15" fill="rgb(233,210,1)"/><text x="10.0102%" y="1791.50"></text></g><g><title>_int_malloc (6 samples, 0.33%)</title><rect x="9.9833%" y="1765" width="0.3346%" height="15" fill="rgb(244,137,37)"/><text x="10.2333%" y="1775.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (88 samples, 4.91%)</title><rect x="5.5215%" y="1813" width="4.9080%" height="15" fill="rgb(240,136,2)"/><text x="5.7715%" y="1823.50">core::..</text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="10.3179%" y="1797" width="0.1115%" height="15" fill="rgb(239,18,37)"/><text x="10.5679%" y="1807.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (96 samples, 5.35%)</title><rect x="5.2984%" y="1829" width="5.3542%" height="15" fill="rgb(218,185,22)"/><text x="5.5484%" y="1839.50">&lt;smallv..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (4 samples, 0.22%)</title><rect x="10.4294%" y="1813" width="0.2231%" height="15" fill="rgb(225,218,4)"/><text x="10.6794%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="10.5968%" y="1797" width="0.0558%" height="15" fill="rgb(230,182,32)"/><text x="10.8468%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 5.47%)</title><rect x="5.2984%" y="1845" width="5.4657%" height="15" fill="rgb(242,56,43)"/><text x="5.5484%" y="1855.50">&lt;alloc:..</text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="10.6525%" y="1829" width="0.1115%" height="15" fill="rgb(233,99,24)"/><text x="10.9025%" y="1839.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="10.6525%" y="1813" width="0.1115%" height="15" fill="rgb(234,209,42)"/><text x="10.9025%" y="1823.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="10.6525%" y="1797" width="0.1115%" height="15" fill="rgb(227,7,12)"/><text x="10.9025%" y="1807.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (15 samples, 0.84%)</title><rect x="16.5644%" y="1749" width="0.8366%" height="15" fill="rgb(245,203,43)"/><text x="16.8144%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91 samples, 5.08%)</title><rect x="12.7161%" y="1765" width="5.0753%" height="15" fill="rgb(238,205,33)"/><text x="12.9661%" y="1775.50">&lt;T as ..</text></g><g><title>__GI___libc_malloc (7 samples, 0.39%)</title><rect x="17.4010%" y="1749" width="0.3904%" height="15" fill="rgb(231,56,7)"/><text x="17.6510%" y="1759.50"></text></g><g><title>_int_malloc (4 samples, 0.22%)</title><rect x="17.5683%" y="1733" width="0.2231%" height="15" fill="rgb(244,186,29)"/><text x="17.8183%" y="1743.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.11%)</title><rect x="17.6799%" y="1717" width="0.1115%" height="15" fill="rgb(234,111,31)"/><text x="17.9299%" y="1727.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (5 samples, 0.28%)</title><rect x="17.7914%" y="1765" width="0.2789%" height="15" fill="rgb(241,149,10)"/><text x="18.0414%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.22%)</title><rect x="17.8472%" y="1749" width="0.2231%" height="15" fill="rgb(249,206,44)"/><text x="18.0972%" y="1759.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="17.9587%" y="1733" width="0.1115%" height="15" fill="rgb(251,153,30)"/><text x="18.2087%" y="1743.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="17.9587%" y="1717" width="0.1115%" height="15" fill="rgb(239,152,38)"/><text x="18.2087%" y="1727.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="18.0145%" y="1701" width="0.0558%" height="15" fill="rgb(249,139,47)"/><text x="18.2645%" y="1711.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.45%)</title><rect x="18.0703%" y="1765" width="0.4462%" height="15" fill="rgb(244,64,35)"/><text x="18.3203%" y="1775.50"></text></g><g><title>_int_malloc (6 samples, 0.33%)</title><rect x="18.1818%" y="1749" width="0.3346%" height="15" fill="rgb(216,46,15)"/><text x="18.4318%" y="1759.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (132 samples, 7.36%)</title><rect x="11.2103%" y="1797" width="7.3620%" height="15" fill="rgb(250,74,19)"/><text x="11.4603%" y="1807.50">core::opti..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (125 samples, 6.97%)</title><rect x="11.6007%" y="1781" width="6.9716%" height="15" fill="rgb(249,42,33)"/><text x="11.8507%" y="1791.50">&lt;T as all..</text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="18.5165%" y="1765" width="0.0558%" height="15" fill="rgb(242,149,17)"/><text x="18.7665%" y="1775.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (139 samples, 7.75%)</title><rect x="10.8756%" y="1813" width="7.7524%" height="15" fill="rgb(244,29,21)"/><text x="11.1256%" y="1823.50">&lt;smallvec::..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="18.5722%" y="1797" width="0.0558%" height="15" fill="rgb(220,130,37)"/><text x="18.8222%" y="1807.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="18.5722%" y="1781" width="0.0558%" height="15" fill="rgb(211,67,2)"/><text x="18.8222%" y="1791.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="18.5722%" y="1765" width="0.0558%" height="15" fill="rgb(235,68,52)"/><text x="18.8222%" y="1775.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="18.5722%" y="1749" width="0.0558%" height="15" fill="rgb(246,142,3)"/><text x="18.8222%" y="1759.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="18.6280%" y="1813" width="0.1115%" height="15" fill="rgb(241,25,7)"/><text x="18.8780%" y="1823.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="18.6280%" y="1797" width="0.1115%" height="15" fill="rgb(242,119,39)"/><text x="18.8780%" y="1807.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.22%)</title><rect x="18.7395%" y="1813" width="0.2231%" height="15" fill="rgb(241,98,45)"/><text x="18.9895%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 8.25%)</title><rect x="10.7641%" y="1829" width="8.2543%" height="15" fill="rgb(254,28,30)"/><text x="11.0141%" y="1839.50">&lt;alloc::vec..</text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="18.9626%" y="1813" width="0.0558%" height="15" fill="rgb(241,142,54)"/><text x="19.2126%" y="1823.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (4 samples, 0.22%)</title><rect x="19.0742%" y="1797" width="0.2231%" height="15" fill="rgb(222,85,15)"/><text x="19.3242%" y="1807.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.17%)</title><rect x="19.1299%" y="1781" width="0.1673%" height="15" fill="rgb(210,85,47)"/><text x="19.3799%" y="1791.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (252 samples, 14.05%)</title><rect x="5.2984%" y="1861" width="14.0547%" height="15" fill="rgb(224,206,25)"/><text x="5.5484%" y="1871.50">&lt;mbe::expander::match..</text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (154 samples, 8.59%)</title><rect x="10.7641%" y="1845" width="8.5890%" height="15" fill="rgb(243,201,19)"/><text x="11.0141%" y="1855.50">&lt;mbe::expand..</text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (6 samples, 0.33%)</title><rect x="19.0184%" y="1829" width="0.3346%" height="15" fill="rgb(236,59,4)"/><text x="19.2684%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.33%)</title><rect x="19.0184%" y="1813" width="0.3346%" height="15" fill="rgb(254,179,45)"/><text x="19.2684%" y="1823.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="19.2973%" y="1797" width="0.0558%" height="15" fill="rgb(226,14,10)"/><text x="19.5473%" y="1807.50"></text></g><g><title>parser::grammar::name_ref (1 samples, 0.06%)</title><rect x="19.3530%" y="1653" width="0.0558%" height="15" fill="rgb(244,27,41)"/><text x="19.6030%" y="1663.50"></text></g><g><title>parser::parser::Marker::complete (1 samples, 0.06%)</title><rect x="19.3530%" y="1637" width="0.0558%" height="15" fill="rgb(235,35,32)"/><text x="19.6030%" y="1647.50"></text></g><g><title>parser::grammar::paths::path_segment (2 samples, 0.11%)</title><rect x="19.3530%" y="1669" width="0.1115%" height="15" fill="rgb(218,68,31)"/><text x="19.6030%" y="1679.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="19.4088%" y="1653" width="0.0558%" height="15" fill="rgb(207,120,37)"/><text x="19.6588%" y="1663.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="19.4088%" y="1637" width="0.0558%" height="15" fill="rgb(227,98,0)"/><text x="19.6588%" y="1647.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="19.4646%" y="1493" width="0.0558%" height="15" fill="rgb(207,7,3)"/><text x="19.7146%" y="1503.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="19.4646%" y="1477" width="0.0558%" height="15" fill="rgb(206,98,19)"/><text x="19.7146%" y="1487.50"></text></g><g><title>parser::grammar::expressions::expr_with_attrs (4 samples, 0.22%)</title><rect x="19.3530%" y="1797" width="0.2231%" height="15" fill="rgb(217,5,26)"/><text x="19.6030%" y="1807.50"></text></g><g><title>parser::grammar::expressions::expr (4 samples, 0.22%)</title><rect x="19.3530%" y="1781" width="0.2231%" height="15" fill="rgb(235,190,38)"/><text x="19.6030%" y="1791.50"></text></g><g><title>parser::grammar::expressions::expr_bp (4 samples, 0.22%)</title><rect x="19.3530%" y="1765" width="0.2231%" height="15" fill="rgb(247,86,24)"/><text x="19.6030%" y="1775.50"></text></g><g><title>parser::grammar::expressions::lhs (4 samples, 0.22%)</title><rect x="19.3530%" y="1749" width="0.2231%" height="15" fill="rgb(205,101,16)"/><text x="19.6030%" y="1759.50"></text></g><g><title>parser::grammar::expressions::atom::atom_expr (4 samples, 0.22%)</title><rect x="19.3530%" y="1733" width="0.2231%" height="15" fill="rgb(246,168,33)"/><text x="19.6030%" y="1743.50"></text></g><g><title>parser::grammar::expressions::path_expr (4 samples, 0.22%)</title><rect x="19.3530%" y="1717" width="0.2231%" height="15" fill="rgb(231,114,1)"/><text x="19.6030%" y="1727.50"></text></g><g><title>parser::grammar::paths::expr_path (4 samples, 0.22%)</title><rect x="19.3530%" y="1701" width="0.2231%" height="15" fill="rgb(207,184,53)"/><text x="19.6030%" y="1711.50"></text></g><g><title>parser::grammar::paths::path (4 samples, 0.22%)</title><rect x="19.3530%" y="1685" width="0.2231%" height="15" fill="rgb(224,95,51)"/><text x="19.6030%" y="1695.50"></text></g><g><title>parser::parser::Marker::complete (2 samples, 0.11%)</title><rect x="19.4646%" y="1669" width="0.1115%" height="15" fill="rgb(212,188,45)"/><text x="19.7146%" y="1679.50"></text></g><g><title>parser::parser::Parser::push_event (2 samples, 0.11%)</title><rect x="19.4646%" y="1653" width="0.1115%" height="15" fill="rgb(223,154,38)"/><text x="19.7146%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.11%)</title><rect x="19.4646%" y="1637" width="0.1115%" height="15" fill="rgb(251,22,52)"/><text x="19.7146%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="19.4646%" y="1621" width="0.1115%" height="15" fill="rgb(229,209,22)"/><text x="19.7146%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="19.4646%" y="1605" width="0.1115%" height="15" fill="rgb(234,138,34)"/><text x="19.7146%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.11%)</title><rect x="19.4646%" y="1589" width="0.1115%" height="15" fill="rgb(212,95,11)"/><text x="19.7146%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.11%)</title><rect x="19.4646%" y="1573" width="0.1115%" height="15" fill="rgb(240,179,47)"/><text x="19.7146%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="19.4646%" y="1557" width="0.1115%" height="15" fill="rgb(240,163,11)"/><text x="19.7146%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.11%)</title><rect x="19.4646%" y="1541" width="0.1115%" height="15" fill="rgb(236,37,12)"/><text x="19.7146%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.11%)</title><rect x="19.4646%" y="1525" width="0.1115%" height="15" fill="rgb(232,164,16)"/><text x="19.7146%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.11%)</title><rect x="19.4646%" y="1509" width="0.1115%" height="15" fill="rgb(244,205,15)"/><text x="19.7146%" y="1519.50"></text></g><g><title>__rdl_realloc (1 samples, 0.06%)</title><rect x="19.5204%" y="1493" width="0.0558%" height="15" fill="rgb(223,117,47)"/><text x="19.7704%" y="1503.50"></text></g><g><title>parser::grammar::items::item_or_macro (1 samples, 0.06%)</title><rect x="19.5761%" y="1797" width="0.0558%" height="15" fill="rgb(244,107,35)"/><text x="19.8261%" y="1807.50"></text></g><g><title>parser::grammar::items::maybe_item (1 samples, 0.06%)</title><rect x="19.5761%" y="1781" width="0.0558%" height="15" fill="rgb(205,140,8)"/><text x="19.8261%" y="1791.50"></text></g><g><title>parser::grammar::items::fn_ (1 samples, 0.06%)</title><rect x="19.5761%" y="1765" width="0.0558%" height="15" fill="rgb(228,84,46)"/><text x="19.8261%" y="1775.50"></text></g><g><title>parser::grammar::name_r (1 samples, 0.06%)</title><rect x="19.5761%" y="1749" width="0.0558%" height="15" fill="rgb(254,188,9)"/><text x="19.8261%" y="1759.50"></text></g><g><title>parser::parser::Marker::complete (1 samples, 0.06%)</title><rect x="19.5761%" y="1733" width="0.0558%" height="15" fill="rgb(206,112,54)"/><text x="19.8261%" y="1743.50"></text></g><g><title>parser::parser::Parser::push_event (1 samples, 0.06%)</title><rect x="19.5761%" y="1717" width="0.0558%" height="15" fill="rgb(216,84,49)"/><text x="19.8261%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="19.5761%" y="1701" width="0.0558%" height="15" fill="rgb(214,194,35)"/><text x="19.8261%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="19.5761%" y="1685" width="0.0558%" height="15" fill="rgb(249,28,3)"/><text x="19.8261%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="19.5761%" y="1669" width="0.0558%" height="15" fill="rgb(222,56,52)"/><text x="19.8261%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="19.5761%" y="1653" width="0.0558%" height="15" fill="rgb(245,217,50)"/><text x="19.8261%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="19.5761%" y="1637" width="0.0558%" height="15" fill="rgb(213,201,24)"/><text x="19.8261%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="19.5761%" y="1621" width="0.0558%" height="15" fill="rgb(248,116,28)"/><text x="19.8261%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="19.5761%" y="1605" width="0.0558%" height="15" fill="rgb(219,72,43)"/><text x="19.8261%" y="1615.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="19.5761%" y="1589" width="0.0558%" height="15" fill="rgb(209,138,14)"/><text x="19.8261%" y="1599.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="19.5761%" y="1573" width="0.0558%" height="15" fill="rgb(222,18,33)"/><text x="19.8261%" y="1583.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="19.5761%" y="1557" width="0.0558%" height="15" fill="rgb(213,199,7)"/><text x="19.8261%" y="1567.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="19.5761%" y="1541" width="0.0558%" height="15" fill="rgb(250,110,10)"/><text x="19.8261%" y="1551.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="19.5761%" y="1525" width="0.0558%" height="15" fill="rgb(248,123,6)"/><text x="19.8261%" y="1535.50"></text></g><g><title>mbe::expander::expand_rules (258 samples, 14.39%)</title><rect x="5.2984%" y="1909" width="14.3893%" height="15" fill="rgb(206,91,31)"/><text x="5.5484%" y="1919.50">mbe::expander::expand_..</text></g><g><title>mbe::expander::matcher::match_ (258 samples, 14.39%)</title><rect x="5.2984%" y="1893" width="14.3893%" height="15" fill="rgb(211,154,13)"/><text x="5.5484%" y="1903.50">mbe::expander::matcher..</text></g><g><title>mbe::expander::matcher::match_loop_inner (258 samples, 14.39%)</title><rect x="5.2984%" y="1877" width="14.3893%" height="15" fill="rgb(225,148,7)"/><text x="5.5484%" y="1887.50">mbe::expander::matcher..</text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (6 samples, 0.33%)</title><rect x="19.3530%" y="1861" width="0.3346%" height="15" fill="rgb(220,160,43)"/><text x="19.6030%" y="1871.50"></text></g><g><title>parser::parse_fragment (6 samples, 0.33%)</title><rect x="19.3530%" y="1845" width="0.3346%" height="15" fill="rgb(213,52,39)"/><text x="19.6030%" y="1855.50"></text></g><g><title>parser::parse_from_tokens (6 samples, 0.33%)</title><rect x="19.3530%" y="1829" width="0.3346%" height="15" fill="rgb(243,137,7)"/><text x="19.6030%" y="1839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.33%)</title><rect x="19.3530%" y="1813" width="0.3346%" height="15" fill="rgb(230,79,13)"/><text x="19.6030%" y="1823.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="19.6319%" y="1797" width="0.0558%" height="15" fill="rgb(247,105,23)"/><text x="19.8819%" y="1807.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="19.6319%" y="1781" width="0.0558%" height="15" fill="rgb(223,179,41)"/><text x="19.8819%" y="1791.50"></text></g><g><title>parser::grammar::paths::type_path (1 samples, 0.06%)</title><rect x="19.6319%" y="1765" width="0.0558%" height="15" fill="rgb(218,9,34)"/><text x="19.8819%" y="1775.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="19.6319%" y="1749" width="0.0558%" height="15" fill="rgb(222,106,8)"/><text x="19.8819%" y="1759.50"></text></g><g><title>parser::grammar::paths::path_segment (1 samples, 0.06%)</title><rect x="19.6319%" y="1733" width="0.0558%" height="15" fill="rgb(211,220,0)"/><text x="19.8819%" y="1743.50"></text></g><g><title>parser::grammar::name_ref (1 samples, 0.06%)</title><rect x="19.6319%" y="1717" width="0.0558%" height="15" fill="rgb(229,52,16)"/><text x="19.8819%" y="1727.50"></text></g><g><title>parser::parser::Parser::bump (1 samples, 0.06%)</title><rect x="19.6319%" y="1701" width="0.0558%" height="15" fill="rgb(212,155,18)"/><text x="19.8819%" y="1711.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="19.6319%" y="1685" width="0.0558%" height="15" fill="rgb(242,21,14)"/><text x="19.8819%" y="1695.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="19.6319%" y="1669" width="0.0558%" height="15" fill="rgb(222,19,48)"/><text x="19.8819%" y="1679.50"></text></g><g><title>parser::parser::Parser::push_event (1 samples, 0.06%)</title><rect x="19.6319%" y="1653" width="0.0558%" height="15" fill="rgb(232,45,27)"/><text x="19.8819%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="19.6319%" y="1637" width="0.0558%" height="15" fill="rgb(249,103,42)"/><text x="19.8819%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="19.6319%" y="1621" width="0.0558%" height="15" fill="rgb(246,81,33)"/><text x="19.8819%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="19.6319%" y="1605" width="0.0558%" height="15" fill="rgb(252,33,42)"/><text x="19.8819%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="19.6319%" y="1589" width="0.0558%" height="15" fill="rgb(209,212,41)"/><text x="19.8819%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="19.6319%" y="1573" width="0.0558%" height="15" fill="rgb(207,154,6)"/><text x="19.8819%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="19.6319%" y="1557" width="0.0558%" height="15" fill="rgb(223,64,47)"/><text x="19.8819%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="19.6319%" y="1541" width="0.0558%" height="15" fill="rgb(211,161,38)"/><text x="19.8819%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="19.6319%" y="1525" width="0.0558%" height="15" fill="rgb(219,138,40)"/><text x="19.8819%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="19.6319%" y="1509" width="0.0558%" height="15" fill="rgb(241,228,46)"/><text x="19.8819%" y="1519.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="19.6319%" y="1493" width="0.0558%" height="15" fill="rgb(223,209,38)"/><text x="19.8819%" y="1503.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="19.6319%" y="1477" width="0.0558%" height="15" fill="rgb(236,164,45)"/><text x="19.8819%" y="1487.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="19.6319%" y="1461" width="0.0558%" height="15" fill="rgb(231,15,5)"/><text x="19.8819%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.28%)</title><rect x="19.7434%" y="1765" width="0.2789%" height="15" fill="rgb(252,35,15)"/><text x="19.9934%" y="1775.50"></text></g><g><title>mbe::expander::matcher::match_ (7 samples, 0.39%)</title><rect x="19.6877%" y="1909" width="0.3904%" height="15" fill="rgb(248,181,18)"/><text x="19.9377%" y="1919.50"></text></g><g><title>mbe::expander::matcher::match_loop_inner (7 samples, 0.39%)</title><rect x="19.6877%" y="1893" width="0.3904%" height="15" fill="rgb(233,39,42)"/><text x="19.9377%" y="1903.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (7 samples, 0.39%)</title><rect x="19.6877%" y="1877" width="0.3904%" height="15" fill="rgb(238,110,33)"/><text x="19.9377%" y="1887.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (7 samples, 0.39%)</title><rect x="19.6877%" y="1861" width="0.3904%" height="15" fill="rgb(233,195,10)"/><text x="19.9377%" y="1871.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (7 samples, 0.39%)</title><rect x="19.6877%" y="1845" width="0.3904%" height="15" fill="rgb(254,105,3)"/><text x="19.9377%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.39%)</title><rect x="19.6877%" y="1829" width="0.3904%" height="15" fill="rgb(221,225,9)"/><text x="19.9377%" y="1839.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (7 samples, 0.39%)</title><rect x="19.6877%" y="1813" width="0.3904%" height="15" fill="rgb(224,227,45)"/><text x="19.9377%" y="1823.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (7 samples, 0.39%)</title><rect x="19.6877%" y="1797" width="0.3904%" height="15" fill="rgb(229,198,43)"/><text x="19.9377%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.39%)</title><rect x="19.6877%" y="1781" width="0.3904%" height="15" fill="rgb(206,209,35)"/><text x="19.9377%" y="1791.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="20.0223%" y="1765" width="0.0558%" height="15" fill="rgb(245,195,53)"/><text x="20.2723%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="20.0223%" y="1749" width="0.0558%" height="15" fill="rgb(240,92,26)"/><text x="20.2723%" y="1759.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="20.0223%" y="1733" width="0.0558%" height="15" fill="rgb(207,40,23)"/><text x="20.2723%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1541" width="0.0558%" height="15" fill="rgb(223,111,35)"/><text x="20.3281%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="20.0781%" y="1525" width="0.0558%" height="15" fill="rgb(229,147,28)"/><text x="20.3281%" y="1535.50"></text></g><g><title>mbe::MacroRules::parse (1 samples, 0.06%)</title><rect x="20.0781%" y="1509" width="0.0558%" height="15" fill="rgb(211,29,28)"/><text x="20.3281%" y="1519.50"></text></g><g><title>mbe::Rule::parse (1 samples, 0.06%)</title><rect x="20.0781%" y="1493" width="0.0558%" height="15" fill="rgb(228,72,33)"/><text x="20.3281%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1477" width="0.0558%" height="15" fill="rgb(205,214,31)"/><text x="20.3281%" y="1487.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.0781%" y="1461" width="0.0558%" height="15" fill="rgb(224,111,15)"/><text x="20.3281%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1445" width="0.0558%" height="15" fill="rgb(253,21,26)"/><text x="20.3281%" y="1455.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.0781%" y="1429" width="0.0558%" height="15" fill="rgb(245,139,43)"/><text x="20.3281%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1413" width="0.0558%" height="15" fill="rgb(252,170,7)"/><text x="20.3281%" y="1423.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.0781%" y="1397" width="0.0558%" height="15" fill="rgb(231,118,14)"/><text x="20.3281%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1381" width="0.0558%" height="15" fill="rgb(238,83,0)"/><text x="20.3281%" y="1391.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.0781%" y="1365" width="0.0558%" height="15" fill="rgb(221,39,39)"/><text x="20.3281%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1349" width="0.0558%" height="15" fill="rgb(222,119,46)"/><text x="20.3281%" y="1359.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.0781%" y="1333" width="0.0558%" height="15" fill="rgb(222,165,49)"/><text x="20.3281%" y="1343.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="20.0781%" y="1317" width="0.0558%" height="15" fill="rgb(219,113,52)"/><text x="20.3281%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.0781%" y="1301" width="0.0558%" height="15" fill="rgb(214,7,15)"/><text x="20.3281%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="20.0781%" y="1285" width="0.0558%" height="15" fill="rgb(235,32,4)"/><text x="20.3281%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="20.1339%" y="1413" width="0.0558%" height="15" fill="rgb(238,90,54)"/><text x="20.3839%" y="1423.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="20.1339%" y="1397" width="0.0558%" height="15" fill="rgb(213,208,19)"/><text x="20.3839%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="20.1339%" y="1381" width="0.0558%" height="15" fill="rgb(233,156,4)"/><text x="20.3839%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="20.1896%" y="1413" width="0.0558%" height="15" fill="rgb(207,194,5)"/><text x="20.4396%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="20.1896%" y="1397" width="0.0558%" height="15" fill="rgb(206,111,30)"/><text x="20.4396%" y="1407.50"></text></g><g><title>mbe::expander::matcher::match_ (3 samples, 0.17%)</title><rect x="20.1339%" y="1493" width="0.1673%" height="15" fill="rgb(243,70,54)"/><text x="20.3839%" y="1503.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.17%)</title><rect x="20.1339%" y="1477" width="0.1673%" height="15" fill="rgb(242,28,8)"/><text x="20.3839%" y="1487.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.17%)</title><rect x="20.1339%" y="1461" width="0.1673%" height="15" fill="rgb(219,106,18)"/><text x="20.3839%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.17%)</title><rect x="20.1339%" y="1445" width="0.1673%" height="15" fill="rgb(244,222,10)"/><text x="20.3839%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.17%)</title><rect x="20.1339%" y="1429" width="0.1673%" height="15" fill="rgb(236,179,52)"/><text x="20.3839%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="20.2454%" y="1413" width="0.0558%" height="15" fill="rgb(213,23,39)"/><text x="20.4954%" y="1423.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="20.2454%" y="1397" width="0.0558%" height="15" fill="rgb(238,48,10)"/><text x="20.4954%" y="1407.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="20.2454%" y="1381" width="0.0558%" height="15" fill="rgb(251,196,23)"/><text x="20.4954%" y="1391.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="20.3012%" y="1461" width="0.1115%" height="15" fill="rgb(250,152,24)"/><text x="20.5512%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.3012%" y="1445" width="0.1115%" height="15" fill="rgb(209,150,17)"/><text x="20.5512%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.3012%" y="1429" width="0.1115%" height="15" fill="rgb(234,202,34)"/><text x="20.5512%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.3012%" y="1413" width="0.1115%" height="15" fill="rgb(253,148,53)"/><text x="20.5512%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.3012%" y="1397" width="0.1115%" height="15" fill="rgb(218,129,16)"/><text x="20.5512%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.3012%" y="1381" width="0.1115%" height="15" fill="rgb(216,85,19)"/><text x="20.5512%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="20.3569%" y="1365" width="0.0558%" height="15" fill="rgb(235,228,7)"/><text x="20.6069%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (6 samples, 0.33%)</title><rect x="20.1339%" y="1541" width="0.3346%" height="15" fill="rgb(245,175,0)"/><text x="20.3839%" y="1551.50"></text></g><g><title>mbe::MacroDef::expand (6 samples, 0.33%)</title><rect x="20.1339%" y="1525" width="0.3346%" height="15" fill="rgb(208,168,36)"/><text x="20.3839%" y="1535.50"></text></g><g><title>mbe::expander::expand_rules (6 samples, 0.33%)</title><rect x="20.1339%" y="1509" width="0.3346%" height="15" fill="rgb(246,171,24)"/><text x="20.3839%" y="1519.50"></text></g><g><title>mbe::expander::transcriber::transcribe (3 samples, 0.17%)</title><rect x="20.3012%" y="1493" width="0.1673%" height="15" fill="rgb(215,142,24)"/><text x="20.5512%" y="1503.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.3012%" y="1477" width="0.1673%" height="15" fill="rgb(250,187,7)"/><text x="20.5512%" y="1487.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.4127%" y="1461" width="0.0558%" height="15" fill="rgb(228,66,33)"/><text x="20.6627%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.4127%" y="1445" width="0.0558%" height="15" fill="rgb(234,215,21)"/><text x="20.6627%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.4127%" y="1429" width="0.0558%" height="15" fill="rgb(222,191,20)"/><text x="20.6627%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.4127%" y="1413" width="0.0558%" height="15" fill="rgb(245,79,54)"/><text x="20.6627%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.4127%" y="1397" width="0.0558%" height="15" fill="rgb(240,10,37)"/><text x="20.6627%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.4127%" y="1381" width="0.0558%" height="15" fill="rgb(214,192,32)"/><text x="20.6627%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.4685%" y="1381" width="0.0558%" height="15" fill="rgb(209,36,54)"/><text x="20.7185%" y="1391.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="20.4685%" y="1365" width="0.0558%" height="15" fill="rgb(220,10,11)"/><text x="20.7185%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="20.4685%" y="1349" width="0.0558%" height="15" fill="rgb(221,106,17)"/><text x="20.7185%" y="1359.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="20.4685%" y="1333" width="0.0558%" height="15" fill="rgb(251,142,44)"/><text x="20.7185%" y="1343.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="20.4685%" y="1477" width="0.1673%" height="15" fill="rgb(238,13,15)"/><text x="20.7185%" y="1487.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.4685%" y="1461" width="0.1673%" height="15" fill="rgb(208,107,27)"/><text x="20.7185%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.4685%" y="1445" width="0.1673%" height="15" fill="rgb(205,136,37)"/><text x="20.7185%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.4685%" y="1429" width="0.1673%" height="15" fill="rgb(250,205,27)"/><text x="20.7185%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.4685%" y="1413" width="0.1673%" height="15" fill="rgb(210,80,43)"/><text x="20.7185%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="20.4685%" y="1397" width="0.1673%" height="15" fill="rgb(247,160,36)"/><text x="20.7185%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.5243%" y="1381" width="0.1115%" height="15" fill="rgb(234,13,49)"/><text x="20.7743%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="20.5800%" y="1365" width="0.0558%" height="15" fill="rgb(234,122,0)"/><text x="20.8300%" y="1375.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.6358%" y="1429" width="0.0558%" height="15" fill="rgb(207,146,38)"/><text x="20.8858%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6358%" y="1413" width="0.0558%" height="15" fill="rgb(207,177,25)"/><text x="20.8858%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6358%" y="1397" width="0.0558%" height="15" fill="rgb(211,178,42)"/><text x="20.8858%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6358%" y="1381" width="0.0558%" height="15" fill="rgb(230,69,54)"/><text x="20.8858%" y="1391.50"></text></g><g><title>start_thread (12 samples, 0.67%)</title><rect x="20.0781%" y="1909" width="0.6693%" height="15" fill="rgb(214,135,41)"/><text x="20.3281%" y="1919.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.67%)</title><rect x="20.0781%" y="1893" width="0.6693%" height="15" fill="rgb(237,67,25)"/><text x="20.3281%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1877" width="0.6693%" height="15" fill="rgb(222,189,50)"/><text x="20.3281%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1861" width="0.6693%" height="15" fill="rgb(245,148,34)"/><text x="20.3281%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (12 samples, 0.67%)</title><rect x="20.0781%" y="1845" width="0.6693%" height="15" fill="rgb(222,29,6)"/><text x="20.3281%" y="1855.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (12 samples, 0.67%)</title><rect x="20.0781%" y="1829" width="0.6693%" height="15" fill="rgb(221,189,43)"/><text x="20.3281%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.67%)</title><rect x="20.0781%" y="1813" width="0.6693%" height="15" fill="rgb(207,36,27)"/><text x="20.3281%" y="1823.50"></text></g><g><title>std::panicking::try (12 samples, 0.67%)</title><rect x="20.0781%" y="1797" width="0.6693%" height="15" fill="rgb(217,90,24)"/><text x="20.3281%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.67%)</title><rect x="20.0781%" y="1781" width="0.6693%" height="15" fill="rgb(224,66,35)"/><text x="20.3281%" y="1791.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1765" width="0.6693%" height="15" fill="rgb(221,13,50)"/><text x="20.3281%" y="1775.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12 samples, 0.67%)</title><rect x="20.0781%" y="1749" width="0.6693%" height="15" fill="rgb(236,68,49)"/><text x="20.3281%" y="1759.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.67%)</title><rect x="20.0781%" y="1733" width="0.6693%" height="15" fill="rgb(229,146,28)"/><text x="20.3281%" y="1743.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (12 samples, 0.67%)</title><rect x="20.0781%" y="1717" width="0.6693%" height="15" fill="rgb(225,31,38)"/><text x="20.3281%" y="1727.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (12 samples, 0.67%)</title><rect x="20.0781%" y="1701" width="0.6693%" height="15" fill="rgb(250,208,3)"/><text x="20.3281%" y="1711.50"></text></g><g><title>test::run_test_in_process (12 samples, 0.67%)</title><rect x="20.0781%" y="1685" width="0.6693%" height="15" fill="rgb(246,54,23)"/><text x="20.3281%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.67%)</title><rect x="20.0781%" y="1669" width="0.6693%" height="15" fill="rgb(243,76,11)"/><text x="20.3281%" y="1679.50"></text></g><g><title>std::panicking::try (12 samples, 0.67%)</title><rect x="20.0781%" y="1653" width="0.6693%" height="15" fill="rgb(245,21,50)"/><text x="20.3281%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.67%)</title><rect x="20.0781%" y="1637" width="0.6693%" height="15" fill="rgb(228,9,43)"/><text x="20.3281%" y="1647.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1621" width="0.6693%" height="15" fill="rgb(208,100,47)"/><text x="20.3281%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1605" width="0.6693%" height="15" fill="rgb(232,26,8)"/><text x="20.3281%" y="1615.50"></text></g><g><title>test::__rust_begin_short_backtrace (12 samples, 0.67%)</title><rect x="20.0781%" y="1589" width="0.6693%" height="15" fill="rgb(216,166,38)"/><text x="20.3281%" y="1599.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.67%)</title><rect x="20.0781%" y="1573" width="0.6693%" height="15" fill="rgb(251,202,51)"/><text x="20.3281%" y="1583.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (12 samples, 0.67%)</title><rect x="20.0781%" y="1557" width="0.6693%" height="15" fill="rgb(254,216,34)"/><text x="20.3281%" y="1567.50"></text></g><g><title>mbe::MacroDef::expand (5 samples, 0.28%)</title><rect x="20.4685%" y="1541" width="0.2789%" height="15" fill="rgb(251,32,27)"/><text x="20.7185%" y="1551.50"></text></g><g><title>mbe::expander::expand_rules (5 samples, 0.28%)</title><rect x="20.4685%" y="1525" width="0.2789%" height="15" fill="rgb(208,127,28)"/><text x="20.7185%" y="1535.50"></text></g><g><title>mbe::expander::transcriber::transcribe (5 samples, 0.28%)</title><rect x="20.4685%" y="1509" width="0.2789%" height="15" fill="rgb(224,137,22)"/><text x="20.7185%" y="1519.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (5 samples, 0.28%)</title><rect x="20.4685%" y="1493" width="0.2789%" height="15" fill="rgb(254,70,32)"/><text x="20.7185%" y="1503.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.6358%" y="1477" width="0.1115%" height="15" fill="rgb(229,75,37)"/><text x="20.8858%" y="1487.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.6358%" y="1461" width="0.1115%" height="15" fill="rgb(252,64,23)"/><text x="20.8858%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.6358%" y="1445" width="0.1115%" height="15" fill="rgb(232,162,48)"/><text x="20.8858%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6916%" y="1429" width="0.0558%" height="15" fill="rgb(246,160,12)"/><text x="20.9416%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6916%" y="1413" width="0.0558%" height="15" fill="rgb(247,166,0)"/><text x="20.9416%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.6916%" y="1397" width="0.0558%" height="15" fill="rgb(249,219,21)"/><text x="20.9416%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.6916%" y="1381" width="0.0558%" height="15" fill="rgb(205,209,3)"/><text x="20.9416%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1557" width="0.0558%" height="15" fill="rgb(243,44,1)"/><text x="20.9974%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="20.7474%" y="1541" width="0.0558%" height="15" fill="rgb(206,159,16)"/><text x="20.9974%" y="1551.50"></text></g><g><title>mbe::MacroRules::parse (1 samples, 0.06%)</title><rect x="20.7474%" y="1525" width="0.0558%" height="15" fill="rgb(244,77,30)"/><text x="20.9974%" y="1535.50"></text></g><g><title>mbe::Rule::parse (1 samples, 0.06%)</title><rect x="20.7474%" y="1509" width="0.0558%" height="15" fill="rgb(218,69,12)"/><text x="20.9974%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1493" width="0.0558%" height="15" fill="rgb(212,87,7)"/><text x="20.9974%" y="1503.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1477" width="0.0558%" height="15" fill="rgb(245,114,25)"/><text x="20.9974%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1461" width="0.0558%" height="15" fill="rgb(210,61,42)"/><text x="20.9974%" y="1471.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1445" width="0.0558%" height="15" fill="rgb(211,52,33)"/><text x="20.9974%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1429" width="0.0558%" height="15" fill="rgb(234,58,33)"/><text x="20.9974%" y="1439.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1413" width="0.0558%" height="15" fill="rgb(220,115,36)"/><text x="20.9974%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1397" width="0.0558%" height="15" fill="rgb(243,153,54)"/><text x="20.9974%" y="1407.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1381" width="0.0558%" height="15" fill="rgb(251,47,18)"/><text x="20.9974%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1365" width="0.0558%" height="15" fill="rgb(242,102,42)"/><text x="20.9974%" y="1375.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1349" width="0.0558%" height="15" fill="rgb(234,31,38)"/><text x="20.9974%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1333" width="0.0558%" height="15" fill="rgb(221,117,51)"/><text x="20.9974%" y="1343.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="20.7474%" y="1317" width="0.0558%" height="15" fill="rgb(212,20,18)"/><text x="20.9974%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="20.7474%" y="1301" width="0.0558%" height="15" fill="rgb(245,133,36)"/><text x="20.9974%" y="1311.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.17%)</title><rect x="20.7474%" y="1909" width="0.1673%" height="15" fill="rgb(212,6,19)"/><text x="20.9974%" y="1919.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1893" width="0.1673%" height="15" fill="rgb(218,1,36)"/><text x="20.9974%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1877" width="0.1673%" height="15" fill="rgb(246,84,54)"/><text x="20.9974%" y="1887.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.17%)</title><rect x="20.7474%" y="1861" width="0.1673%" height="15" fill="rgb(242,110,6)"/><text x="20.9974%" y="1871.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3 samples, 0.17%)</title><rect x="20.7474%" y="1845" width="0.1673%" height="15" fill="rgb(214,47,5)"/><text x="20.9974%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.17%)</title><rect x="20.7474%" y="1829" width="0.1673%" height="15" fill="rgb(218,159,25)"/><text x="20.9974%" y="1839.50"></text></g><g><title>std::panicking::try (3 samples, 0.17%)</title><rect x="20.7474%" y="1813" width="0.1673%" height="15" fill="rgb(215,211,28)"/><text x="20.9974%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.17%)</title><rect x="20.7474%" y="1797" width="0.1673%" height="15" fill="rgb(238,59,32)"/><text x="20.9974%" y="1807.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1781" width="0.1673%" height="15" fill="rgb(226,82,3)"/><text x="20.9974%" y="1791.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3 samples, 0.17%)</title><rect x="20.7474%" y="1765" width="0.1673%" height="15" fill="rgb(240,164,32)"/><text x="20.9974%" y="1775.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.17%)</title><rect x="20.7474%" y="1749" width="0.1673%" height="15" fill="rgb(232,46,7)"/><text x="20.9974%" y="1759.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.17%)</title><rect x="20.7474%" y="1733" width="0.1673%" height="15" fill="rgb(229,129,53)"/><text x="20.9974%" y="1743.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.17%)</title><rect x="20.7474%" y="1717" width="0.1673%" height="15" fill="rgb(234,188,29)"/><text x="20.9974%" y="1727.50"></text></g><g><title>test::run_test_in_process (3 samples, 0.17%)</title><rect x="20.7474%" y="1701" width="0.1673%" height="15" fill="rgb(246,141,4)"/><text x="20.9974%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.17%)</title><rect x="20.7474%" y="1685" width="0.1673%" height="15" fill="rgb(229,23,39)"/><text x="20.9974%" y="1695.50"></text></g><g><title>std::panicking::try (3 samples, 0.17%)</title><rect x="20.7474%" y="1669" width="0.1673%" height="15" fill="rgb(206,12,3)"/><text x="20.9974%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.17%)</title><rect x="20.7474%" y="1653" width="0.1673%" height="15" fill="rgb(252,226,20)"/><text x="20.9974%" y="1663.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1637" width="0.1673%" height="15" fill="rgb(216,123,35)"/><text x="20.9974%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1621" width="0.1673%" height="15" fill="rgb(212,68,40)"/><text x="20.9974%" y="1631.50"></text></g><g><title>test::__rust_begin_short_backtrace (3 samples, 0.17%)</title><rect x="20.7474%" y="1605" width="0.1673%" height="15" fill="rgb(254,125,32)"/><text x="20.9974%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.17%)</title><rect x="20.7474%" y="1589" width="0.1673%" height="15" fill="rgb(253,97,22)"/><text x="20.9974%" y="1599.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (3 samples, 0.17%)</title><rect x="20.7474%" y="1573" width="0.1673%" height="15" fill="rgb(241,101,14)"/><text x="20.9974%" y="1583.50"></text></g><g><title>mbe::MacroDef::expand (2 samples, 0.11%)</title><rect x="20.8031%" y="1557" width="0.1115%" height="15" fill="rgb(238,103,29)"/><text x="21.0531%" y="1567.50"></text></g><g><title>mbe::expander::expand_rules (2 samples, 0.11%)</title><rect x="20.8031%" y="1541" width="0.1115%" height="15" fill="rgb(233,195,47)"/><text x="21.0531%" y="1551.50"></text></g><g><title>mbe::expander::matcher::match_ (2 samples, 0.11%)</title><rect x="20.8031%" y="1525" width="0.1115%" height="15" fill="rgb(246,218,30)"/><text x="21.0531%" y="1535.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="20.8031%" y="1509" width="0.1115%" height="15" fill="rgb(219,145,47)"/><text x="21.0531%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="20.8031%" y="1493" width="0.1115%" height="15" fill="rgb(243,12,26)"/><text x="21.0531%" y="1503.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.11%)</title><rect x="20.8031%" y="1477" width="0.1115%" height="15" fill="rgb(214,87,16)"/><text x="21.0531%" y="1487.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.9147%" y="1605" width="0.0558%" height="15" fill="rgb(208,99,42)"/><text x="21.1647%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9147%" y="1589" width="0.0558%" height="15" fill="rgb(253,99,2)"/><text x="21.1647%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9147%" y="1573" width="0.0558%" height="15" fill="rgb(220,168,23)"/><text x="21.1647%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.9147%" y="1557" width="0.0558%" height="15" fill="rgb(242,38,24)"/><text x="21.1647%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9147%" y="1541" width="0.0558%" height="15" fill="rgb(225,182,9)"/><text x="21.1647%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="20.9147%" y="1525" width="0.0558%" height="15" fill="rgb(243,178,37)"/><text x="21.1647%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.11%)</title><rect x="20.9147%" y="1717" width="0.1115%" height="15" fill="rgb(232,139,19)"/><text x="21.1647%" y="1727.50"></text></g><g><title>mbe::MacroDef::expand (2 samples, 0.11%)</title><rect x="20.9147%" y="1701" width="0.1115%" height="15" fill="rgb(225,201,24)"/><text x="21.1647%" y="1711.50"></text></g><g><title>mbe::expander::expand_rules (2 samples, 0.11%)</title><rect x="20.9147%" y="1685" width="0.1115%" height="15" fill="rgb(221,47,46)"/><text x="21.1647%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::transcribe (2 samples, 0.11%)</title><rect x="20.9147%" y="1669" width="0.1115%" height="15" fill="rgb(249,23,13)"/><text x="21.1647%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.9147%" y="1653" width="0.1115%" height="15" fill="rgb(219,9,5)"/><text x="21.1647%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="20.9147%" y="1637" width="0.1115%" height="15" fill="rgb(254,171,16)"/><text x="21.1647%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="20.9147%" y="1621" width="0.1115%" height="15" fill="rgb(230,171,20)"/><text x="21.1647%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9704%" y="1605" width="0.0558%" height="15" fill="rgb(210,71,41)"/><text x="21.2204%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9704%" y="1589" width="0.0558%" height="15" fill="rgb(206,173,20)"/><text x="21.2204%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9704%" y="1573" width="0.0558%" height="15" fill="rgb(233,88,34)"/><text x="21.2204%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="20.9704%" y="1557" width="0.0558%" height="15" fill="rgb(223,209,46)"/><text x="21.2204%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="20.9704%" y="1541" width="0.0558%" height="15" fill="rgb(250,43,18)"/><text x="21.2204%" y="1551.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="20.9704%" y="1525" width="0.0558%" height="15" fill="rgb(208,13,10)"/><text x="21.2204%" y="1535.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="21.0262%" y="1605" width="0.0558%" height="15" fill="rgb(212,200,36)"/><text x="21.2762%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0262%" y="1589" width="0.0558%" height="15" fill="rgb(225,90,30)"/><text x="21.2762%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0262%" y="1573" width="0.0558%" height="15" fill="rgb(236,182,39)"/><text x="21.2762%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="21.0262%" y="1557" width="0.0558%" height="15" fill="rgb(212,144,35)"/><text x="21.2762%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0262%" y="1541" width="0.0558%" height="15" fill="rgb(228,63,44)"/><text x="21.2762%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="21.0262%" y="1525" width="0.0558%" height="15" fill="rgb(228,109,6)"/><text x="21.2762%" y="1535.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="21.0262%" y="1509" width="0.0558%" height="15" fill="rgb(238,117,24)"/><text x="21.2762%" y="1519.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.22%)</title><rect x="20.9147%" y="1909" width="0.2231%" height="15" fill="rgb(242,26,26)"/><text x="21.1647%" y="1919.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (4 samples, 0.22%)</title><rect x="20.9147%" y="1893" width="0.2231%" height="15" fill="rgb(221,92,48)"/><text x="21.1647%" y="1903.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (4 samples, 0.22%)</title><rect x="20.9147%" y="1877" width="0.2231%" height="15" fill="rgb(209,209,32)"/><text x="21.1647%" y="1887.50"></text></g><g><title>test::run_test_in_process (4 samples, 0.22%)</title><rect x="20.9147%" y="1861" width="0.2231%" height="15" fill="rgb(221,70,22)"/><text x="21.1647%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.22%)</title><rect x="20.9147%" y="1845" width="0.2231%" height="15" fill="rgb(248,145,5)"/><text x="21.1647%" y="1855.50"></text></g><g><title>std::panicking::try (4 samples, 0.22%)</title><rect x="20.9147%" y="1829" width="0.2231%" height="15" fill="rgb(226,116,26)"/><text x="21.1647%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.22%)</title><rect x="20.9147%" y="1813" width="0.2231%" height="15" fill="rgb(244,5,17)"/><text x="21.1647%" y="1823.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.22%)</title><rect x="20.9147%" y="1797" width="0.2231%" height="15" fill="rgb(252,159,33)"/><text x="21.1647%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.22%)</title><rect x="20.9147%" y="1781" width="0.2231%" height="15" fill="rgb(206,71,0)"/><text x="21.1647%" y="1791.50"></text></g><g><title>test::__rust_begin_short_backtrace (4 samples, 0.22%)</title><rect x="20.9147%" y="1765" width="0.2231%" height="15" fill="rgb(233,118,54)"/><text x="21.1647%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.22%)</title><rect x="20.9147%" y="1749" width="0.2231%" height="15" fill="rgb(234,83,48)"/><text x="21.1647%" y="1759.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (4 samples, 0.22%)</title><rect x="20.9147%" y="1733" width="0.2231%" height="15" fill="rgb(228,3,54)"/><text x="21.1647%" y="1743.50"></text></g><g><title>mbe::MacroDef::expand (2 samples, 0.11%)</title><rect x="21.0262%" y="1717" width="0.1115%" height="15" fill="rgb(226,155,13)"/><text x="21.2762%" y="1727.50"></text></g><g><title>mbe::expander::expand_rules (2 samples, 0.11%)</title><rect x="21.0262%" y="1701" width="0.1115%" height="15" fill="rgb(241,28,37)"/><text x="21.2762%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::transcribe (2 samples, 0.11%)</title><rect x="21.0262%" y="1685" width="0.1115%" height="15" fill="rgb(233,93,10)"/><text x="21.2762%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="21.0262%" y="1669" width="0.1115%" height="15" fill="rgb(225,113,19)"/><text x="21.2762%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="21.0262%" y="1653" width="0.1115%" height="15" fill="rgb(241,2,18)"/><text x="21.2762%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="21.0262%" y="1637" width="0.1115%" height="15" fill="rgb(228,207,21)"/><text x="21.2762%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="21.0262%" y="1621" width="0.1115%" height="15" fill="rgb(213,211,35)"/><text x="21.2762%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0820%" y="1605" width="0.0558%" height="15" fill="rgb(209,83,10)"/><text x="21.3320%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0820%" y="1589" width="0.0558%" height="15" fill="rgb(209,164,1)"/><text x="21.3320%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="21.0820%" y="1573" width="0.0558%" height="15" fill="rgb(213,184,43)"/><text x="21.3320%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="21.0820%" y="1557" width="0.0558%" height="15" fill="rgb(231,61,34)"/><text x="21.3320%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="21.0820%" y="1541" width="0.0558%" height="15" fill="rgb(235,75,3)"/><text x="21.3320%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="21.0820%" y="1525" width="0.0558%" height="15" fill="rgb(220,106,47)"/><text x="21.3320%" y="1535.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="21.0820%" y="1509" width="0.0558%" height="15" fill="rgb(210,196,33)"/><text x="21.3320%" y="1519.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="21.0820%" y="1493" width="0.0558%" height="15" fill="rgb(229,154,42)"/><text x="21.3320%" y="1503.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="21.0820%" y="1477" width="0.0558%" height="15" fill="rgb(228,114,26)"/><text x="21.3320%" y="1487.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.06%)</title><rect x="22.1417%" y="1749" width="0.0558%" height="15" fill="rgb(208,144,1)"/><text x="22.3917%" y="1759.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_char (1 samples, 0.06%)</title><rect x="22.1974%" y="1749" width="0.0558%" height="15" fill="rgb(239,112,37)"/><text x="22.4474%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (21 samples, 1.17%)</title><rect x="21.1378%" y="1861" width="1.1712%" height="15" fill="rgb(210,96,50)"/><text x="21.3878%" y="1871.50"></text></g><g><title>mbe::MacroDef::expand (21 samples, 1.17%)</title><rect x="21.1378%" y="1845" width="1.1712%" height="15" fill="rgb(222,178,2)"/><text x="21.3878%" y="1855.50"></text></g><g><title>mbe::expander::expand_rules (21 samples, 1.17%)</title><rect x="21.1378%" y="1829" width="1.1712%" height="15" fill="rgb(226,74,18)"/><text x="21.3878%" y="1839.50"></text></g><g><title>mbe::expander::matcher::match_ (21 samples, 1.17%)</title><rect x="21.1378%" y="1813" width="1.1712%" height="15" fill="rgb(225,67,54)"/><text x="21.3878%" y="1823.50"></text></g><g><title>mbe::expander::matcher::match_loop_inner (21 samples, 1.17%)</title><rect x="21.1378%" y="1797" width="1.1712%" height="15" fill="rgb(251,92,32)"/><text x="21.3878%" y="1807.50"></text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (21 samples, 1.17%)</title><rect x="21.1378%" y="1781" width="1.1712%" height="15" fill="rgb(228,149,22)"/><text x="21.3878%" y="1791.50"></text></g><g><title>mbe::subtree_source::SubtreeTokenSource::new (21 samples, 1.17%)</title><rect x="21.1378%" y="1765" width="1.1712%" height="15" fill="rgb(243,54,13)"/><text x="21.3878%" y="1775.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_keyword (1 samples, 0.06%)</title><rect x="22.2532%" y="1749" width="0.0558%" height="15" fill="rgb(243,180,28)"/><text x="22.5032%" y="1759.50"></text></g><g><title>test::__rust_begin_short_backtrace (22 samples, 1.23%)</title><rect x="21.1378%" y="1909" width="1.2270%" height="15" fill="rgb(208,167,24)"/><text x="21.3878%" y="1919.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 1.23%)</title><rect x="21.1378%" y="1893" width="1.2270%" height="15" fill="rgb(245,73,45)"/><text x="21.3878%" y="1903.50"></text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (22 samples, 1.23%)</title><rect x="21.1378%" y="1877" width="1.2270%" height="15" fill="rgb(237,203,48)"/><text x="21.3878%" y="1887.50"></text></g><g><title>mbe::MacroDef::expand (1 samples, 0.06%)</title><rect x="22.3090%" y="1861" width="0.0558%" height="15" fill="rgb(211,197,16)"/><text x="22.5590%" y="1871.50"></text></g><g><title>mbe::expander::expand_rules (1 samples, 0.06%)</title><rect x="22.3090%" y="1845" width="0.0558%" height="15" fill="rgb(243,99,51)"/><text x="22.5590%" y="1855.50"></text></g><g><title>mbe::expander::matcher::match_ (1 samples, 0.06%)</title><rect x="22.3090%" y="1829" width="0.0558%" height="15" fill="rgb(215,123,29)"/><text x="22.5590%" y="1839.50"></text></g><g><title>mbe::expander::matcher::match_loop_inner (1 samples, 0.06%)</title><rect x="22.3090%" y="1813" width="0.0558%" height="15" fill="rgb(239,186,37)"/><text x="22.5590%" y="1823.50"></text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (1 samples, 0.06%)</title><rect x="22.3090%" y="1797" width="0.0558%" height="15" fill="rgb(252,136,39)"/><text x="22.5590%" y="1807.50"></text></g><g><title>parser::parse_fragment (1 samples, 0.06%)</title><rect x="22.3090%" y="1781" width="0.0558%" height="15" fill="rgb(223,213,32)"/><text x="22.5590%" y="1791.50"></text></g><g><title>parser::parse_from_tokens (1 samples, 0.06%)</title><rect x="22.3090%" y="1765" width="0.0558%" height="15" fill="rgb(233,115,5)"/><text x="22.5590%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.06%)</title><rect x="22.3090%" y="1749" width="0.0558%" height="15" fill="rgb(207,226,44)"/><text x="22.5590%" y="1759.50"></text></g><g><title>parser::grammar::expressions::expr_with_attrs (1 samples, 0.06%)</title><rect x="22.3090%" y="1733" width="0.0558%" height="15" fill="rgb(208,126,0)"/><text x="22.5590%" y="1743.50"></text></g><g><title>parser::grammar::expressions::expr (1 samples, 0.06%)</title><rect x="22.3090%" y="1717" width="0.0558%" height="15" fill="rgb(244,66,21)"/><text x="22.5590%" y="1727.50"></text></g><g><title>parser::grammar::expressions::expr_bp (1 samples, 0.06%)</title><rect x="22.3090%" y="1701" width="0.0558%" height="15" fill="rgb(222,97,12)"/><text x="22.5590%" y="1711.50"></text></g><g><title>parser::grammar::expressions::lhs (1 samples, 0.06%)</title><rect x="22.3090%" y="1685" width="0.0558%" height="15" fill="rgb(219,213,19)"/><text x="22.5590%" y="1695.50"></text></g><g><title>parser::grammar::expressions::atom::atom_expr (1 samples, 0.06%)</title><rect x="22.3090%" y="1669" width="0.0558%" height="15" fill="rgb(252,169,30)"/><text x="22.5590%" y="1679.50"></text></g><g><title>parser::grammar::expressions::atom::literal (1 samples, 0.06%)</title><rect x="22.3090%" y="1653" width="0.0558%" height="15" fill="rgb(206,32,51)"/><text x="22.5590%" y="1663.50"></text></g><g><title>parser::parser::Parser::at_ts (1 samples, 0.06%)</title><rect x="22.3090%" y="1637" width="0.0558%" height="15" fill="rgb(250,172,42)"/><text x="22.5590%" y="1647.50"></text></g><g><title>parser::parser::Parser::current (1 samples, 0.06%)</title><rect x="22.3090%" y="1621" width="0.0558%" height="15" fill="rgb(209,34,43)"/><text x="22.5590%" y="1631.50"></text></g><g><title>parser::parser::Parser::nth (1 samples, 0.06%)</title><rect x="22.3090%" y="1605" width="0.0558%" height="15" fill="rgb(223,11,35)"/><text x="22.5590%" y="1615.50"></text></g><g><title>&lt;mbe::subtree_source::SubtreeTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="22.3090%" y="1589" width="0.0558%" height="15" fill="rgb(251,219,26)"/><text x="22.5590%" y="1599.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="22.3648%" y="1685" width="0.1673%" height="15" fill="rgb(231,119,3)"/><text x="22.6148%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="22.3648%" y="1669" width="0.1673%" height="15" fill="rgb(216,97,11)"/><text x="22.6148%" y="1679.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.17%)</title><rect x="22.3648%" y="1653" width="0.1673%" height="15" fill="rgb(223,59,9)"/><text x="22.6148%" y="1663.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.11%)</title><rect x="22.4205%" y="1637" width="0.1115%" height="15" fill="rgb(233,93,31)"/><text x="22.6705%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="22.4763%" y="1621" width="0.0558%" height="15" fill="rgb(239,81,33)"/><text x="22.7263%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="22.4763%" y="1605" width="0.0558%" height="15" fill="rgb(213,120,34)"/><text x="22.7263%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="22.4763%" y="1589" width="0.0558%" height="15" fill="rgb(243,49,53)"/><text x="22.7263%" y="1599.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="23.1456%" y="1669" width="0.1673%" height="15" fill="rgb(247,216,33)"/><text x="23.3956%" y="1679.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="23.2571%" y="1653" width="0.0558%" height="15" fill="rgb(226,26,14)"/><text x="23.5071%" y="1663.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (10 samples, 0.56%)</title><rect x="23.5917%" y="1653" width="0.5577%" height="15" fill="rgb(215,49,53)"/><text x="23.8417%" y="1663.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="23.9822%" y="1637" width="0.1673%" height="15" fill="rgb(245,162,40)"/><text x="24.2322%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="24.0379%" y="1621" width="0.1115%" height="15" fill="rgb(229,68,17)"/><text x="24.2879%" y="1631.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (16 samples, 0.89%)</title><rect x="23.3129%" y="1669" width="0.8924%" height="15" fill="rgb(213,182,10)"/><text x="23.5629%" y="1679.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="24.1495%" y="1653" width="0.0558%" height="15" fill="rgb(245,125,30)"/><text x="24.3995%" y="1663.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="24.2052%" y="1653" width="0.1115%" height="15" fill="rgb(232,202,2)"/><text x="24.4552%" y="1663.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="24.2052%" y="1637" width="0.1115%" height="15" fill="rgb(237,140,51)"/><text x="24.4552%" y="1647.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="24.2610%" y="1621" width="0.0558%" height="15" fill="rgb(236,157,25)"/><text x="24.5110%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (2 samples, 0.11%)</title><rect x="24.3168%" y="1653" width="0.1115%" height="15" fill="rgb(219,209,0)"/><text x="24.5668%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="24.3168%" y="1637" width="0.1115%" height="15" fill="rgb(240,116,54)"/><text x="24.5668%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="24.3726%" y="1621" width="0.0558%" height="15" fill="rgb(216,10,36)"/><text x="24.6226%" y="1631.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.33%)</title><rect x="24.2052%" y="1669" width="0.3346%" height="15" fill="rgb(222,72,44)"/><text x="24.4552%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="24.4283%" y="1653" width="0.1115%" height="15" fill="rgb(232,159,9)"/><text x="24.6783%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="24.4283%" y="1637" width="0.1115%" height="15" fill="rgb(210,39,32)"/><text x="24.6783%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="24.4841%" y="1621" width="0.0558%" height="15" fill="rgb(216,194,45)"/><text x="24.7341%" y="1631.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="24.5399%" y="1669" width="0.1673%" height="15" fill="rgb(218,18,35)"/><text x="24.7899%" y="1679.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="24.5956%" y="1653" width="0.1115%" height="15" fill="rgb(207,83,51)"/><text x="24.8456%" y="1663.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="24.7072%" y="1669" width="0.0558%" height="15" fill="rgb(225,63,43)"/><text x="24.9572%" y="1679.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.11%)</title><rect x="24.7630%" y="1669" width="0.1115%" height="15" fill="rgb(207,57,36)"/><text x="25.0130%" y="1679.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 1.12%)</title><rect x="24.8745%" y="1669" width="1.1154%" height="15" fill="rgb(216,99,33)"/><text x="25.1245%" y="1679.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="25.9900%" y="1669" width="0.0558%" height="15" fill="rgb(225,42,16)"/><text x="26.2400%" y="1679.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="26.2688%" y="1605" width="0.0558%" height="15" fill="rgb(220,201,45)"/><text x="26.5188%" y="1615.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.33%)</title><rect x="26.0457%" y="1637" width="0.3346%" height="15" fill="rgb(225,33,4)"/><text x="26.2957%" y="1647.50"></text></g><g><title>_int_malloc (5 samples, 0.28%)</title><rect x="26.1015%" y="1621" width="0.2789%" height="15" fill="rgb(224,33,50)"/><text x="26.3515%" y="1631.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="26.3246%" y="1605" width="0.0558%" height="15" fill="rgb(246,198,51)"/><text x="26.5746%" y="1615.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="26.3804%" y="1605" width="0.0558%" height="15" fill="rgb(205,22,4)"/><text x="26.6304%" y="1615.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.28%)</title><rect x="26.3804%" y="1637" width="0.2789%" height="15" fill="rgb(206,3,8)"/><text x="26.6304%" y="1647.50"></text></g><g><title>_int_realloc (5 samples, 0.28%)</title><rect x="26.3804%" y="1621" width="0.2789%" height="15" fill="rgb(251,23,15)"/><text x="26.6304%" y="1631.50"></text></g><g><title>_int_malloc (4 samples, 0.22%)</title><rect x="26.4361%" y="1605" width="0.2231%" height="15" fill="rgb(252,88,28)"/><text x="26.6861%" y="1615.50"></text></g><g><title>malloc_consolidate (3 samples, 0.17%)</title><rect x="26.4919%" y="1589" width="0.1673%" height="15" fill="rgb(212,127,14)"/><text x="26.7419%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.67%)</title><rect x="26.0457%" y="1669" width="0.6693%" height="15" fill="rgb(247,145,37)"/><text x="26.2957%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.67%)</title><rect x="26.0457%" y="1653" width="0.6693%" height="15" fill="rgb(209,117,53)"/><text x="26.2957%" y="1663.50"></text></g><g><title>__rust_realloc (1 samples, 0.06%)</title><rect x="26.6592%" y="1637" width="0.0558%" height="15" fill="rgb(212,90,42)"/><text x="26.9092%" y="1647.50"></text></g><g><title>__GI___libc_free (4 samples, 0.22%)</title><rect x="26.8265%" y="1637" width="0.2231%" height="15" fill="rgb(218,164,37)"/><text x="27.0765%" y="1647.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="26.9381%" y="1621" width="0.1115%" height="15" fill="rgb(246,65,34)"/><text x="27.1881%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (3 samples, 0.17%)</title><rect x="27.0496%" y="1637" width="0.1673%" height="15" fill="rgb(231,100,33)"/><text x="27.2996%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="27.1054%" y="1621" width="0.1115%" height="15" fill="rgb(228,126,14)"/><text x="27.3554%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="27.1612%" y="1605" width="0.0558%" height="15" fill="rgb(215,173,21)"/><text x="27.4112%" y="1615.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="27.3285%" y="1621" width="0.1673%" height="15" fill="rgb(210,6,40)"/><text x="27.5785%" y="1631.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="27.3843%" y="1605" width="0.1115%" height="15" fill="rgb(212,48,18)"/><text x="27.6343%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="27.6074%" y="1605" width="0.1673%" height="15" fill="rgb(230,214,11)"/><text x="27.8574%" y="1615.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.06%)</title><rect x="26.7708%" y="1653" width="1.0597%" height="15" fill="rgb(254,105,39)"/><text x="27.0208%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (11 samples, 0.61%)</title><rect x="27.2170%" y="1637" width="0.6135%" height="15" fill="rgb(245,158,5)"/><text x="27.4670%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (6 samples, 0.33%)</title><rect x="27.4958%" y="1621" width="0.3346%" height="15" fill="rgb(249,208,11)"/><text x="27.7458%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="27.7747%" y="1605" width="0.0558%" height="15" fill="rgb(210,39,28)"/><text x="28.0247%" y="1615.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="27.8305%" y="1653" width="0.0558%" height="15" fill="rgb(211,56,53)"/><text x="28.0805%" y="1663.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="27.8305%" y="1637" width="0.0558%" height="15" fill="rgb(226,201,30)"/><text x="28.0805%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (1 samples, 0.06%)</title><rect x="27.9420%" y="1621" width="0.0558%" height="15" fill="rgb(239,101,34)"/><text x="28.1920%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="27.9420%" y="1605" width="0.0558%" height="15" fill="rgb(226,209,5)"/><text x="28.1920%" y="1615.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="27.9978%" y="1605" width="0.1115%" height="15" fill="rgb(250,105,47)"/><text x="28.2478%" y="1615.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="28.0535%" y="1589" width="0.0558%" height="15" fill="rgb(230,72,3)"/><text x="28.3035%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="28.1093%" y="1589" width="0.1673%" height="15" fill="rgb(232,218,39)"/><text x="28.3593%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (29 samples, 1.62%)</title><rect x="26.7150%" y="1669" width="1.6174%" height="15" fill="rgb(248,166,6)"/><text x="26.9650%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (8 samples, 0.45%)</title><rect x="27.8862%" y="1653" width="0.4462%" height="15" fill="rgb(247,89,20)"/><text x="28.1362%" y="1663.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.39%)</title><rect x="27.9420%" y="1637" width="0.3904%" height="15" fill="rgb(248,130,54)"/><text x="28.1920%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (6 samples, 0.33%)</title><rect x="27.9978%" y="1621" width="0.3346%" height="15" fill="rgb(234,196,4)"/><text x="28.2478%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (4 samples, 0.22%)</title><rect x="28.1093%" y="1605" width="0.2231%" height="15" fill="rgb(250,143,31)"/><text x="28.3593%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="28.2766%" y="1589" width="0.0558%" height="15" fill="rgb(211,110,34)"/><text x="28.5266%" y="1599.50"></text></g><g><title>mbe::expander::matcher::&lt;impl mbe::expander::Bindings&gt;::push_empty (1 samples, 0.06%)</title><rect x="28.3324%" y="1669" width="0.0558%" height="15" fill="rgb(215,124,48)"/><text x="28.5824%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="28.3882%" y="1653" width="0.0558%" height="15" fill="rgb(216,46,13)"/><text x="28.6382%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="28.3882%" y="1637" width="0.0558%" height="15" fill="rgb(205,184,25)"/><text x="28.6382%" y="1647.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="28.3882%" y="1621" width="0.0558%" height="15" fill="rgb(228,1,10)"/><text x="28.6382%" y="1631.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="28.3882%" y="1605" width="0.0558%" height="15" fill="rgb(213,116,27)"/><text x="28.6382%" y="1615.50"></text></g><g><title>mbe::expander::matcher::collect_vars (2 samples, 0.11%)</title><rect x="28.3882%" y="1669" width="0.1115%" height="15" fill="rgb(241,95,50)"/><text x="28.6382%" y="1679.50"></text></g><g><title>mbe::expander::matcher::collect_vars (1 samples, 0.06%)</title><rect x="28.4439%" y="1653" width="0.0558%" height="15" fill="rgb(238,48,32)"/><text x="28.6939%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="28.4439%" y="1637" width="0.0558%" height="15" fill="rgb(235,113,49)"/><text x="28.6939%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="28.4439%" y="1621" width="0.0558%" height="15" fill="rgb(205,127,43)"/><text x="28.6939%" y="1631.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="28.4439%" y="1605" width="0.0558%" height="15" fill="rgb(250,162,2)"/><text x="28.6939%" y="1615.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="28.4439%" y="1589" width="0.0558%" height="15" fill="rgb(220,13,41)"/><text x="28.6939%" y="1599.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="28.6113%" y="1653" width="0.0558%" height="15" fill="rgb(249,221,25)"/><text x="28.8613%" y="1663.50"></text></g><g><title>parser::grammar::expressions::expr_with_attrs (1 samples, 0.06%)</title><rect x="28.6670%" y="1605" width="0.0558%" height="15" fill="rgb(215,208,19)"/><text x="28.9170%" y="1615.50"></text></g><g><title>parser::parser::Parser::start (1 samples, 0.06%)</title><rect x="28.6670%" y="1589" width="0.0558%" height="15" fill="rgb(236,175,2)"/><text x="28.9170%" y="1599.50"></text></g><g><title>parser::parser::Marker::new (1 samples, 0.06%)</title><rect x="28.6670%" y="1573" width="0.0558%" height="15" fill="rgb(241,52,2)"/><text x="28.9170%" y="1583.50"></text></g><g><title>drop_bomb::DropBomb::new (1 samples, 0.06%)</title><rect x="28.6670%" y="1557" width="0.0558%" height="15" fill="rgb(248,140,14)"/><text x="28.9170%" y="1567.50"></text></g><g><title>drop_bomb::RealBomb::new (1 samples, 0.06%)</title><rect x="28.6670%" y="1541" width="0.0558%" height="15" fill="rgb(253,22,42)"/><text x="28.9170%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.11%)</title><rect x="28.6670%" y="1621" width="0.1115%" height="15" fill="rgb(234,61,47)"/><text x="28.9170%" y="1631.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="28.7228%" y="1605" width="0.0558%" height="15" fill="rgb(208,226,15)"/><text x="28.9728%" y="1615.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="28.7228%" y="1589" width="0.0558%" height="15" fill="rgb(217,221,4)"/><text x="28.9728%" y="1599.50"></text></g><g><title>parser::parse_fragment (4 samples, 0.22%)</title><rect x="28.6670%" y="1653" width="0.2231%" height="15" fill="rgb(212,174,34)"/><text x="28.9170%" y="1663.50"></text></g><g><title>parser::parse_from_tokens (4 samples, 0.22%)</title><rect x="28.6670%" y="1637" width="0.2231%" height="15" fill="rgb(253,83,4)"/><text x="28.9170%" y="1647.50"></text></g><g><title>parser::event::process (2 samples, 0.11%)</title><rect x="28.7786%" y="1621" width="0.1115%" height="15" fill="rgb(250,195,49)"/><text x="29.0286%" y="1631.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.06%)</title><rect x="28.8344%" y="1605" width="0.0558%" height="15" fill="rgb(241,192,25)"/><text x="29.0844%" y="1615.50"></text></g><g><title>tt::buffer::Cursor::is_root (1 samples, 0.06%)</title><rect x="28.8901%" y="1653" width="0.0558%" height="15" fill="rgb(208,124,10)"/><text x="29.1401%" y="1663.50"></text></g><g><title>mbe::expander::matcher::match_ (120 samples, 6.69%)</title><rect x="22.3648%" y="1701" width="6.6927%" height="15" fill="rgb(222,33,0)"/><text x="22.6148%" y="1711.50">mbe::expa..</text></g><g><title>mbe::expander::matcher::match_loop_inner (117 samples, 6.53%)</title><rect x="22.5321%" y="1685" width="6.5254%" height="15" fill="rgb(234,209,28)"/><text x="22.7821%" y="1695.50">mbe::expa..</text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (10 samples, 0.56%)</title><rect x="28.4997%" y="1669" width="0.5577%" height="15" fill="rgb(224,11,23)"/><text x="28.7497%" y="1679.50"></text></g><g><title>tt::buffer::TokenBuffer::from_tokens (2 samples, 0.11%)</title><rect x="28.9459%" y="1653" width="0.1115%" height="15" fill="rgb(232,99,1)"/><text x="29.1959%" y="1663.50"></text></g><g><title>tt::buffer::TokenBuffer::new (2 samples, 0.11%)</title><rect x="28.9459%" y="1637" width="0.1115%" height="15" fill="rgb(237,95,45)"/><text x="29.1959%" y="1647.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (2 samples, 0.11%)</title><rect x="28.9459%" y="1621" width="0.1115%" height="15" fill="rgb(208,109,11)"/><text x="29.1959%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="29.0017%" y="1605" width="0.0558%" height="15" fill="rgb(216,190,48)"/><text x="29.2517%" y="1615.50"></text></g><g><title>core::ptr::write (1 samples, 0.06%)</title><rect x="29.0017%" y="1589" width="0.0558%" height="15" fill="rgb(251,171,36)"/><text x="29.2517%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="29.0574%" y="1621" width="0.0558%" height="15" fill="rgb(230,62,22)"/><text x="29.3074%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.0574%" y="1605" width="0.0558%" height="15" fill="rgb(225,114,35)"/><text x="29.3074%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.0574%" y="1589" width="0.0558%" height="15" fill="rgb(215,118,42)"/><text x="29.3074%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.0574%" y="1573" width="0.0558%" height="15" fill="rgb(243,119,21)"/><text x="29.3074%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="29.0574%" y="1557" width="0.0558%" height="15" fill="rgb(252,177,53)"/><text x="29.3074%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.0574%" y="1541" width="0.0558%" height="15" fill="rgb(237,209,29)"/><text x="29.3074%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="29.0574%" y="1669" width="0.1673%" height="15" fill="rgb(212,65,23)"/><text x="29.3074%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="29.0574%" y="1653" width="0.1673%" height="15" fill="rgb(230,222,46)"/><text x="29.3074%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="29.0574%" y="1637" width="0.1673%" height="15" fill="rgb(215,135,32)"/><text x="29.3074%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.1132%" y="1621" width="0.1115%" height="15" fill="rgb(246,101,22)"/><text x="29.3632%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.1132%" y="1605" width="0.1115%" height="15" fill="rgb(206,107,13)"/><text x="29.3632%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.1132%" y="1589" width="0.1115%" height="15" fill="rgb(250,100,44)"/><text x="29.3632%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="29.1132%" y="1573" width="0.1115%" height="15" fill="rgb(231,147,38)"/><text x="29.3632%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.1132%" y="1557" width="0.1115%" height="15" fill="rgb(229,8,40)"/><text x="29.3632%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.1690%" y="1541" width="0.0558%" height="15" fill="rgb(221,135,30)"/><text x="29.4190%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="29.2248%" y="1653" width="0.0558%" height="15" fill="rgb(249,193,18)"/><text x="29.4748%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.2248%" y="1637" width="0.0558%" height="15" fill="rgb(209,133,39)"/><text x="29.4748%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.2248%" y="1621" width="0.0558%" height="15" fill="rgb(232,100,14)"/><text x="29.4748%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.2248%" y="1605" width="0.0558%" height="15" fill="rgb(224,185,1)"/><text x="29.4748%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.2248%" y="1589" width="0.0558%" height="15" fill="rgb(223,139,8)"/><text x="29.4748%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.2248%" y="1573" width="0.0558%" height="15" fill="rgb(232,213,38)"/><text x="29.4748%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="29.2248%" y="1557" width="0.0558%" height="15" fill="rgb(207,94,22)"/><text x="29.4748%" y="1567.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="29.2805%" y="1525" width="0.0558%" height="15" fill="rgb(219,183,54)"/><text x="29.5305%" y="1535.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="29.2805%" y="1509" width="0.0558%" height="15" fill="rgb(216,185,54)"/><text x="29.5305%" y="1519.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="29.2805%" y="1493" width="0.0558%" height="15" fill="rgb(254,217,39)"/><text x="29.5305%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="29.2805%" y="1477" width="0.0558%" height="15" fill="rgb(240,178,23)"/><text x="29.5305%" y="1487.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="29.2805%" y="1461" width="0.0558%" height="15" fill="rgb(218,11,47)"/><text x="29.5305%" y="1471.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="29.2805%" y="1445" width="0.0558%" height="15" fill="rgb(218,51,51)"/><text x="29.5305%" y="1455.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="29.2805%" y="1429" width="0.0558%" height="15" fill="rgb(238,126,27)"/><text x="29.5305%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="29.2805%" y="1637" width="0.1115%" height="15" fill="rgb(249,202,22)"/><text x="29.5305%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.2805%" y="1621" width="0.1115%" height="15" fill="rgb(254,195,49)"/><text x="29.5305%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="29.2805%" y="1605" width="0.1115%" height="15" fill="rgb(208,123,14)"/><text x="29.5305%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.2805%" y="1589" width="0.1115%" height="15" fill="rgb(224,200,8)"/><text x="29.5305%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.2805%" y="1573" width="0.1115%" height="15" fill="rgb(217,61,36)"/><text x="29.5305%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="29.2805%" y="1557" width="0.1115%" height="15" fill="rgb(206,35,45)"/><text x="29.5305%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="29.2805%" y="1541" width="0.1115%" height="15" fill="rgb(217,65,33)"/><text x="29.5305%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="29.3363%" y="1525" width="0.0558%" height="15" fill="rgb(222,158,48)"/><text x="29.5863%" y="1535.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="29.4479%" y="1541" width="0.0558%" height="15" fill="rgb(254,2,54)"/><text x="29.6979%" y="1551.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="29.3921%" y="1621" width="0.1673%" height="15" fill="rgb(250,143,38)"/><text x="29.6421%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="29.3921%" y="1605" width="0.1673%" height="15" fill="rgb(248,25,0)"/><text x="29.6421%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="29.3921%" y="1589" width="0.1673%" height="15" fill="rgb(206,152,27)"/><text x="29.6421%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="29.3921%" y="1573" width="0.1673%" height="15" fill="rgb(240,77,30)"/><text x="29.6421%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="29.3921%" y="1557" width="0.1673%" height="15" fill="rgb(231,5,3)"/><text x="29.6421%" y="1567.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.5036%" y="1541" width="0.0558%" height="15" fill="rgb(207,226,32)"/><text x="29.7536%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (130 samples, 7.25%)</title><rect x="22.3648%" y="1749" width="7.2504%" height="15" fill="rgb(222,207,47)"/><text x="22.6148%" y="1759.50">core::iter..</text></g><g><title>mbe::MacroDef::expand (130 samples, 7.25%)</title><rect x="22.3648%" y="1733" width="7.2504%" height="15" fill="rgb(229,115,45)"/><text x="22.6148%" y="1743.50">mbe::Macro..</text></g><g><title>mbe::expander::expand_rules (130 samples, 7.25%)</title><rect x="22.3648%" y="1717" width="7.2504%" height="15" fill="rgb(224,191,6)"/><text x="22.6148%" y="1727.50">mbe::expan..</text></g><g><title>mbe::expander::transcriber::transcribe (10 samples, 0.56%)</title><rect x="29.0574%" y="1701" width="0.5577%" height="15" fill="rgb(230,227,24)"/><text x="29.3074%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (10 samples, 0.56%)</title><rect x="29.0574%" y="1685" width="0.5577%" height="15" fill="rgb(228,80,19)"/><text x="29.3074%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (7 samples, 0.39%)</title><rect x="29.2248%" y="1669" width="0.3904%" height="15" fill="rgb(247,229,0)"/><text x="29.4748%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (6 samples, 0.33%)</title><rect x="29.2805%" y="1653" width="0.3346%" height="15" fill="rgb(237,194,15)"/><text x="29.5305%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (4 samples, 0.22%)</title><rect x="29.3921%" y="1637" width="0.2231%" height="15" fill="rgb(219,203,20)"/><text x="29.6421%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.5594%" y="1621" width="0.0558%" height="15" fill="rgb(234,128,8)"/><text x="29.8094%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="29.5594%" y="1605" width="0.0558%" height="15" fill="rgb(248,202,8)"/><text x="29.8094%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.5594%" y="1589" width="0.0558%" height="15" fill="rgb(206,104,37)"/><text x="29.8094%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="29.5594%" y="1573" width="0.0558%" height="15" fill="rgb(223,8,27)"/><text x="29.8094%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="29.5594%" y="1557" width="0.0558%" height="15" fill="rgb(216,217,28)"/><text x="29.8094%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="29.5594%" y="1541" width="0.0558%" height="15" fill="rgb(249,199,1)"/><text x="29.8094%" y="1551.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="29.5594%" y="1525" width="0.0558%" height="15" fill="rgb(240,85,17)"/><text x="29.8094%" y="1535.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="29.5594%" y="1509" width="0.0558%" height="15" fill="rgb(206,108,45)"/><text x="29.8094%" y="1519.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="29.6152%" y="1701" width="0.0558%" height="15" fill="rgb(245,210,41)"/><text x="29.8652%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="29.6152%" y="1685" width="0.0558%" height="15" fill="rgb(206,13,37)"/><text x="29.8652%" y="1695.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="29.6152%" y="1669" width="0.0558%" height="15" fill="rgb(250,61,18)"/><text x="29.8652%" y="1679.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.06%)</title><rect x="29.6152%" y="1653" width="0.0558%" height="15" fill="rgb(235,172,48)"/><text x="29.8652%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="29.6152%" y="1637" width="0.0558%" height="15" fill="rgb(249,201,17)"/><text x="29.8652%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="29.6152%" y="1621" width="0.0558%" height="15" fill="rgb(219,208,6)"/><text x="29.8652%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="29.6152%" y="1605" width="0.0558%" height="15" fill="rgb(248,31,23)"/><text x="29.8652%" y="1615.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="30.7306%" y="1685" width="0.1115%" height="15" fill="rgb(245,15,42)"/><text x="30.9806%" y="1695.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="30.7306%" y="1669" width="0.1115%" height="15" fill="rgb(222,217,39)"/><text x="30.9806%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.22%)</title><rect x="31.2883%" y="1653" width="0.2231%" height="15" fill="rgb(210,219,27)"/><text x="31.5383%" y="1663.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="31.3999%" y="1637" width="0.1115%" height="15" fill="rgb(252,166,36)"/><text x="31.6499%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="31.4557%" y="1621" width="0.0558%" height="15" fill="rgb(245,132,34)"/><text x="31.7057%" y="1631.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="31.4557%" y="1605" width="0.0558%" height="15" fill="rgb(236,54,3)"/><text x="31.7057%" y="1615.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (16 samples, 0.89%)</title><rect x="30.8422%" y="1685" width="0.8924%" height="15" fill="rgb(241,173,43)"/><text x="31.0922%" y="1695.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (11 samples, 0.61%)</title><rect x="31.1210%" y="1669" width="0.6135%" height="15" fill="rgb(215,190,9)"/><text x="31.3710%" y="1679.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="31.5114%" y="1653" width="0.2231%" height="15" fill="rgb(242,101,16)"/><text x="31.7614%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="31.6230%" y="1637" width="0.1115%" height="15" fill="rgb(223,190,21)"/><text x="31.8730%" y="1647.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="31.6788%" y="1621" width="0.0558%" height="15" fill="rgb(215,228,25)"/><text x="31.9288%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="31.6788%" y="1605" width="0.0558%" height="15" fill="rgb(225,36,22)"/><text x="31.9288%" y="1615.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="31.8461%" y="1669" width="0.1115%" height="15" fill="rgb(251,106,46)"/><text x="32.0961%" y="1679.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="31.8461%" y="1653" width="0.1115%" height="15" fill="rgb(208,90,1)"/><text x="32.0961%" y="1663.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="31.7345%" y="1685" width="0.4462%" height="15" fill="rgb(243,10,4)"/><text x="31.9845%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (4 samples, 0.22%)</title><rect x="31.9576%" y="1669" width="0.2231%" height="15" fill="rgb(212,137,27)"/><text x="32.2076%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (2 samples, 0.11%)</title><rect x="32.0692%" y="1653" width="0.1115%" height="15" fill="rgb(231,220,49)"/><text x="32.3192%" y="1663.50"></text></g><g><title>&lt;tt::Leaf as core::convert::From&lt;tt::Ident&gt;&gt;::from (1 samples, 0.06%)</title><rect x="32.1807%" y="1685" width="0.0558%" height="15" fill="rgb(237,96,20)"/><text x="32.4307%" y="1695.50"></text></g><g><title>__GI___libc_free (4 samples, 0.22%)</title><rect x="32.2365%" y="1685" width="0.2231%" height="15" fill="rgb(239,229,30)"/><text x="32.4865%" y="1695.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="32.3480%" y="1669" width="0.1115%" height="15" fill="rgb(219,65,33)"/><text x="32.5980%" y="1679.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="32.4596%" y="1685" width="0.0558%" height="15" fill="rgb(243,134,7)"/><text x="32.7096%" y="1695.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="32.5153%" y="1685" width="0.0558%" height="15" fill="rgb(216,177,54)"/><text x="32.7653%" y="1695.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 1.34%)</title><rect x="32.5711%" y="1685" width="1.3385%" height="15" fill="rgb(211,160,20)"/><text x="32.8211%" y="1695.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="33.9096%" y="1685" width="0.0558%" height="15" fill="rgb(239,85,39)"/><text x="34.1596%" y="1695.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="34.0212%" y="1653" width="0.0558%" height="15" fill="rgb(232,125,22)"/><text x="34.2712%" y="1663.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="34.0212%" y="1637" width="0.0558%" height="15" fill="rgb(244,57,34)"/><text x="34.2712%" y="1647.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="34.0770%" y="1621" width="0.1115%" height="15" fill="rgb(214,203,32)"/><text x="34.3270%" y="1631.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="34.1885%" y="1621" width="0.0558%" height="15" fill="rgb(207,58,43)"/><text x="34.4385%" y="1631.50"></text></g><g><title>alloc_perturb (1 samples, 0.06%)</title><rect x="34.4116%" y="1605" width="0.0558%" height="15" fill="rgb(215,193,15)"/><text x="34.6616%" y="1615.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="34.4674%" y="1605" width="0.1115%" height="15" fill="rgb(232,15,44)"/><text x="34.7174%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.67%)</title><rect x="33.9654%" y="1685" width="0.6693%" height="15" fill="rgb(212,3,48)"/><text x="34.2154%" y="1695.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.61%)</title><rect x="34.0212%" y="1669" width="0.6135%" height="15" fill="rgb(218,128,7)"/><text x="34.2712%" y="1679.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.56%)</title><rect x="34.0770%" y="1653" width="0.5577%" height="15" fill="rgb(226,216,39)"/><text x="34.3270%" y="1663.50"></text></g><g><title>_int_realloc (10 samples, 0.56%)</title><rect x="34.0770%" y="1637" width="0.5577%" height="15" fill="rgb(243,47,51)"/><text x="34.3270%" y="1647.50"></text></g><g><title>_int_malloc (7 samples, 0.39%)</title><rect x="34.2443%" y="1621" width="0.3904%" height="15" fill="rgb(241,183,40)"/><text x="34.4943%" y="1631.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="34.5789%" y="1605" width="0.0558%" height="15" fill="rgb(231,217,32)"/><text x="34.8289%" y="1615.50"></text></g><g><title>__GI___libc_free (7 samples, 0.39%)</title><rect x="34.7462%" y="1653" width="0.3904%" height="15" fill="rgb(229,61,38)"/><text x="34.9962%" y="1663.50"></text></g><g><title>_int_free (5 samples, 0.28%)</title><rect x="34.8578%" y="1637" width="0.2789%" height="15" fill="rgb(225,210,5)"/><text x="35.1078%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="35.1366%" y="1637" width="0.0558%" height="15" fill="rgb(231,79,45)"/><text x="35.3866%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="35.1366%" y="1621" width="0.0558%" height="15" fill="rgb(224,100,7)"/><text x="35.3866%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (3 samples, 0.17%)</title><rect x="35.1366%" y="1653" width="0.1673%" height="15" fill="rgb(241,198,18)"/><text x="35.3866%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (2 samples, 0.11%)</title><rect x="35.1924%" y="1637" width="0.1115%" height="15" fill="rgb(252,97,53)"/><text x="35.4424%" y="1647.50"></text></g><g><title>__GI___libc_free (4 samples, 0.22%)</title><rect x="35.3597%" y="1637" width="0.2231%" height="15" fill="rgb(220,88,7)"/><text x="35.6097%" y="1647.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="35.5270%" y="1621" width="0.0558%" height="15" fill="rgb(213,176,14)"/><text x="35.7770%" y="1631.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.12%)</title><rect x="34.6905%" y="1669" width="1.1154%" height="15" fill="rgb(246,73,7)"/><text x="34.9405%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (9 samples, 0.50%)</title><rect x="35.3040%" y="1653" width="0.5020%" height="15" fill="rgb(245,64,36)"/><text x="35.5540%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (4 samples, 0.22%)</title><rect x="35.5828%" y="1637" width="0.2231%" height="15" fill="rgb(245,80,10)"/><text x="35.8328%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (2 samples, 0.11%)</title><rect x="35.6944%" y="1621" width="0.1115%" height="15" fill="rgb(232,107,50)"/><text x="35.9444%" y="1631.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="35.8059%" y="1669" width="0.1115%" height="15" fill="rgb(253,3,0)"/><text x="36.0559%" y="1679.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="35.8059%" y="1653" width="0.1115%" height="15" fill="rgb(212,99,53)"/><text x="36.0559%" y="1663.50"></text></g><g><title>__rust_dealloc (1 samples, 0.06%)</title><rect x="35.9175%" y="1669" width="0.0558%" height="15" fill="rgb(249,111,54)"/><text x="36.1675%" y="1679.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="36.0290%" y="1621" width="0.0558%" height="15" fill="rgb(249,55,30)"/><text x="36.2790%" y="1631.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="36.0290%" y="1605" width="0.0558%" height="15" fill="rgb(237,47,42)"/><text x="36.2790%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="36.1405%" y="1605" width="0.0558%" height="15" fill="rgb(211,20,18)"/><text x="36.3905%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (29 samples, 1.62%)</title><rect x="34.6347%" y="1685" width="1.6174%" height="15" fill="rgb(231,203,46)"/><text x="34.8847%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (5 samples, 0.28%)</title><rect x="35.9732%" y="1669" width="0.2789%" height="15" fill="rgb(237,142,3)"/><text x="36.2232%" y="1679.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.28%)</title><rect x="35.9732%" y="1653" width="0.2789%" height="15" fill="rgb(241,107,1)"/><text x="36.2232%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (5 samples, 0.28%)</title><rect x="35.9732%" y="1637" width="0.2789%" height="15" fill="rgb(229,83,13)"/><text x="36.2232%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="36.0848%" y="1621" width="0.1673%" height="15" fill="rgb(241,91,40)"/><text x="36.3348%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="36.1963%" y="1605" width="0.0558%" height="15" fill="rgb(225,3,45)"/><text x="36.4463%" y="1615.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="36.6983%" y="1669" width="0.0558%" height="15" fill="rgb(244,223,14)"/><text x="36.9483%" y="1679.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (5 samples, 0.28%)</title><rect x="36.7540%" y="1669" width="0.2789%" height="15" fill="rgb(224,124,37)"/><text x="37.0040%" y="1679.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.28%)</title><rect x="36.7540%" y="1653" width="0.2789%" height="15" fill="rgb(251,171,30)"/><text x="37.0040%" y="1663.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.28%)</title><rect x="36.7540%" y="1637" width="0.2789%" height="15" fill="rgb(236,46,54)"/><text x="37.0040%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.28%)</title><rect x="36.7540%" y="1621" width="0.2789%" height="15" fill="rgb(245,213,5)"/><text x="37.0040%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.28%)</title><rect x="36.7540%" y="1605" width="0.2789%" height="15" fill="rgb(230,144,27)"/><text x="37.0040%" y="1615.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.28%)</title><rect x="36.7540%" y="1589" width="0.2789%" height="15" fill="rgb(220,86,6)"/><text x="37.0040%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.22%)</title><rect x="36.8098%" y="1573" width="0.2231%" height="15" fill="rgb(240,20,13)"/><text x="37.0598%" y="1583.50"></text></g><g><title>&lt;smol_str::SmolStr as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="37.0329%" y="1669" width="0.0558%" height="15" fill="rgb(217,89,34)"/><text x="37.2829%" y="1679.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="37.0329%" y="1653" width="0.0558%" height="15" fill="rgb(229,13,5)"/><text x="37.2829%" y="1663.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="37.0329%" y="1637" width="0.0558%" height="15" fill="rgb(244,67,35)"/><text x="37.2829%" y="1647.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="37.0887%" y="1669" width="0.0558%" height="15" fill="rgb(221,40,2)"/><text x="37.3387%" y="1679.50"></text></g><g><title>mbe::expander::matcher::&lt;impl mbe::expander::Bindings&gt;::push_nested (24 samples, 1.34%)</title><rect x="36.2521%" y="1685" width="1.3385%" height="15" fill="rgb(237,157,21)"/><text x="36.5021%" y="1695.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.45%)</title><rect x="37.1445%" y="1669" width="0.4462%" height="15" fill="rgb(222,94,11)"/><text x="37.3945%" y="1679.50"></text></g><g><title>mbe::expander::matcher::collect_vars (2 samples, 0.11%)</title><rect x="37.5906%" y="1685" width="0.1115%" height="15" fill="rgb(249,113,6)"/><text x="37.8406%" y="1695.50"></text></g><g><title>__GI___libc_free (5 samples, 0.28%)</title><rect x="37.8695%" y="1669" width="0.2789%" height="15" fill="rgb(238,137,36)"/><text x="38.1195%" y="1679.50"></text></g><g><title>_int_free (3 samples, 0.17%)</title><rect x="37.9810%" y="1653" width="0.1673%" height="15" fill="rgb(210,102,26)"/><text x="38.2310%" y="1663.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="38.1484%" y="1669" width="0.0558%" height="15" fill="rgb(218,30,30)"/><text x="38.3984%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="38.1484%" y="1653" width="0.0558%" height="15" fill="rgb(214,67,26)"/><text x="38.3984%" y="1663.50"></text></g><g><title>&lt;smol_str::SmolStr as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="39.3196%" y="1653" width="0.0558%" height="15" fill="rgb(251,9,53)"/><text x="39.5696%" y="1663.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="39.3196%" y="1637" width="0.0558%" height="15" fill="rgb(228,204,25)"/><text x="39.5696%" y="1647.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="39.3196%" y="1621" width="0.0558%" height="15" fill="rgb(207,153,8)"/><text x="39.5696%" y="1631.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.45%)</title><rect x="39.3753%" y="1653" width="0.4462%" height="15" fill="rgb(242,9,16)"/><text x="39.6253%" y="1663.50"></text></g><g><title>_int_malloc (8 samples, 0.45%)</title><rect x="39.3753%" y="1637" width="0.4462%" height="15" fill="rgb(217,211,10)"/><text x="39.6253%" y="1647.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="39.7658%" y="1621" width="0.0558%" height="15" fill="rgb(219,228,52)"/><text x="40.0158%" y="1631.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="39.8215%" y="1653" width="0.0558%" height="15" fill="rgb(231,92,29)"/><text x="40.0715%" y="1663.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.06%)</title><rect x="39.8773%" y="1653" width="0.0558%" height="15" fill="rgb(232,8,23)"/><text x="40.1273%" y="1663.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="39.9331%" y="1653" width="0.0558%" height="15" fill="rgb(216,211,34)"/><text x="40.1831%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="39.9888%" y="1653" width="0.0558%" height="15" fill="rgb(236,151,0)"/><text x="40.2388%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="39.9888%" y="1637" width="0.0558%" height="15" fill="rgb(209,168,3)"/><text x="40.2388%" y="1647.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="39.9888%" y="1621" width="0.0558%" height="15" fill="rgb(208,129,28)"/><text x="40.2388%" y="1631.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="39.9888%" y="1605" width="0.0558%" height="15" fill="rgb(229,78,22)"/><text x="40.2388%" y="1615.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="39.9888%" y="1589" width="0.0558%" height="15" fill="rgb(228,187,13)"/><text x="40.2388%" y="1599.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_char (1 samples, 0.06%)</title><rect x="40.0446%" y="1653" width="0.0558%" height="15" fill="rgb(240,119,24)"/><text x="40.2946%" y="1663.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_keyword (10 samples, 0.56%)</title><rect x="40.1004%" y="1653" width="0.5577%" height="15" fill="rgb(209,194,42)"/><text x="40.3504%" y="1663.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.33%)</title><rect x="40.3235%" y="1637" width="0.3346%" height="15" fill="rgb(247,200,46)"/><text x="40.5735%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.33%)</title><rect x="40.3235%" y="1621" width="0.3346%" height="15" fill="rgb(218,76,16)"/><text x="40.5735%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.33%)</title><rect x="40.3235%" y="1605" width="0.3346%" height="15" fill="rgb(225,21,48)"/><text x="40.5735%" y="1615.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.33%)</title><rect x="40.3235%" y="1589" width="0.3346%" height="15" fill="rgb(239,223,50)"/><text x="40.5735%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.33%)</title><rect x="40.3235%" y="1573" width="0.3346%" height="15" fill="rgb(244,45,21)"/><text x="40.5735%" y="1583.50"></text></g><g><title>tt::buffer::Cursor::end (1 samples, 0.06%)</title><rect x="40.6581%" y="1653" width="0.0558%" height="15" fill="rgb(232,33,43)"/><text x="40.9081%" y="1663.50"></text></g><g><title>tt::buffer::Cursor::eof (3 samples, 0.17%)</title><rect x="40.7139%" y="1653" width="0.1673%" height="15" fill="rgb(209,8,3)"/><text x="40.9639%" y="1663.50"></text></g><g><title>mbe::subtree_source::SubtreeTokenSource::new (52 samples, 2.90%)</title><rect x="38.2041%" y="1669" width="2.9002%" height="15" fill="rgb(214,25,53)"/><text x="38.4541%" y="1679.50">mb..</text></g><g><title>tt::buffer::Cursor::token_tree (4 samples, 0.22%)</title><rect x="40.8812%" y="1653" width="0.2231%" height="15" fill="rgb(254,186,54)"/><text x="41.1312%" y="1663.50"></text></g><g><title>parser::grammar::expressions::expr_with_attrs (1 samples, 0.06%)</title><rect x="41.1043%" y="1621" width="0.0558%" height="15" fill="rgb(208,174,49)"/><text x="41.3543%" y="1631.50"></text></g><g><title>parser::grammar::expressions::expr (1 samples, 0.06%)</title><rect x="41.1043%" y="1605" width="0.0558%" height="15" fill="rgb(233,191,51)"/><text x="41.3543%" y="1615.50"></text></g><g><title>parser::grammar::expressions::expr_bp (1 samples, 0.06%)</title><rect x="41.1043%" y="1589" width="0.0558%" height="15" fill="rgb(222,134,10)"/><text x="41.3543%" y="1599.50"></text></g><g><title>parser::grammar::expressions::lhs (1 samples, 0.06%)</title><rect x="41.1043%" y="1573" width="0.0558%" height="15" fill="rgb(230,226,20)"/><text x="41.3543%" y="1583.50"></text></g><g><title>parser::grammar::fragments::meta_item (1 samples, 0.06%)</title><rect x="41.1601%" y="1621" width="0.0558%" height="15" fill="rgb(251,111,25)"/><text x="41.4101%" y="1631.50"></text></g><g><title>parser::grammar::items::token_tree (1 samples, 0.06%)</title><rect x="41.1601%" y="1605" width="0.0558%" height="15" fill="rgb(224,40,46)"/><text x="41.4101%" y="1615.50"></text></g><g><title>parser::parser::Parser::start (1 samples, 0.06%)</title><rect x="41.1601%" y="1589" width="0.0558%" height="15" fill="rgb(236,108,47)"/><text x="41.4101%" y="1599.50"></text></g><g><title>parser::parser::Marker::new (1 samples, 0.06%)</title><rect x="41.1601%" y="1573" width="0.0558%" height="15" fill="rgb(234,93,0)"/><text x="41.4101%" y="1583.50"></text></g><g><title>drop_bomb::DropBomb::new (1 samples, 0.06%)</title><rect x="41.1601%" y="1557" width="0.0558%" height="15" fill="rgb(224,213,32)"/><text x="41.4101%" y="1567.50"></text></g><g><title>drop_bomb::RealBomb::new (1 samples, 0.06%)</title><rect x="41.1601%" y="1541" width="0.0558%" height="15" fill="rgb(251,11,48)"/><text x="41.4101%" y="1551.50"></text></g><g><title>parser::grammar::patterns::pattern_single_r (1 samples, 0.06%)</title><rect x="41.2158%" y="1621" width="0.0558%" height="15" fill="rgb(236,173,5)"/><text x="41.4658%" y="1631.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="41.2158%" y="1605" width="0.0558%" height="15" fill="rgb(230,95,12)"/><text x="41.4658%" y="1615.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="41.2158%" y="1589" width="0.0558%" height="15" fill="rgb(232,209,1)"/><text x="41.4658%" y="1599.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.22%)</title><rect x="41.1043%" y="1637" width="0.2231%" height="15" fill="rgb(232,6,1)"/><text x="41.3543%" y="1647.50"></text></g><g><title>parser::grammar::types::type_with_bounds_cond (1 samples, 0.06%)</title><rect x="41.2716%" y="1621" width="0.0558%" height="15" fill="rgb(210,224,50)"/><text x="41.5216%" y="1631.50"></text></g><g><title>parser::grammar::types::path_or_macro_type_ (1 samples, 0.06%)</title><rect x="41.2716%" y="1605" width="0.0558%" height="15" fill="rgb(228,127,35)"/><text x="41.5216%" y="1615.50"></text></g><g><title>parser::grammar::paths::type_path (1 samples, 0.06%)</title><rect x="41.2716%" y="1589" width="0.0558%" height="15" fill="rgb(245,102,45)"/><text x="41.5216%" y="1599.50"></text></g><g><title>parser::grammar::paths::path (1 samples, 0.06%)</title><rect x="41.2716%" y="1573" width="0.0558%" height="15" fill="rgb(214,1,49)"/><text x="41.5216%" y="1583.50"></text></g><g><title>parser::grammar::paths::path_segment (1 samples, 0.06%)</title><rect x="41.2716%" y="1557" width="0.0558%" height="15" fill="rgb(226,163,40)"/><text x="41.5216%" y="1567.50"></text></g><g><title>core::mem::replace (2 samples, 0.11%)</title><rect x="41.3274%" y="1621" width="0.1115%" height="15" fill="rgb(239,212,28)"/><text x="41.5774%" y="1631.50"></text></g><g><title>core::mem::swap (2 samples, 0.11%)</title><rect x="41.3274%" y="1605" width="0.1115%" height="15" fill="rgb(220,20,13)"/><text x="41.5774%" y="1615.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.11%)</title><rect x="41.3274%" y="1589" width="0.1115%" height="15" fill="rgb(210,164,35)"/><text x="41.5774%" y="1599.50"></text></g><g><title>core::ptr::read (1 samples, 0.06%)</title><rect x="41.3832%" y="1573" width="0.0558%" height="15" fill="rgb(248,109,41)"/><text x="41.6332%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parser::event::Event&gt;&gt; (1 samples, 0.06%)</title><rect x="41.4389%" y="1621" width="0.0558%" height="15" fill="rgb(238,23,50)"/><text x="41.6889%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;parser::event::Event&gt;&gt; (1 samples, 0.06%)</title><rect x="41.4389%" y="1605" width="0.0558%" height="15" fill="rgb(211,48,49)"/><text x="41.6889%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="41.4389%" y="1589" width="0.0558%" height="15" fill="rgb(223,36,21)"/><text x="41.6889%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="41.4389%" y="1573" width="0.0558%" height="15" fill="rgb(207,123,46)"/><text x="41.6889%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="41.4389%" y="1557" width="0.0558%" height="15" fill="rgb(240,218,32)"/><text x="41.6889%" y="1567.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="41.4389%" y="1541" width="0.0558%" height="15" fill="rgb(252,5,43)"/><text x="41.6889%" y="1551.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="41.4389%" y="1525" width="0.0558%" height="15" fill="rgb(252,84,19)"/><text x="41.6889%" y="1535.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="41.4947%" y="1541" width="0.0558%" height="15" fill="rgb(243,152,39)"/><text x="41.7447%" y="1551.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="41.4947%" y="1525" width="0.0558%" height="15" fill="rgb(234,160,15)"/><text x="41.7447%" y="1535.50"></text></g><g><title>parser::parse_fragment (9 samples, 0.50%)</title><rect x="41.1043%" y="1669" width="0.5020%" height="15" fill="rgb(237,34,20)"/><text x="41.3543%" y="1679.50"></text></g><g><title>parser::parse_from_tokens (9 samples, 0.50%)</title><rect x="41.1043%" y="1653" width="0.5020%" height="15" fill="rgb(229,97,13)"/><text x="41.3543%" y="1663.50"></text></g><g><title>parser::event::process (5 samples, 0.28%)</title><rect x="41.3274%" y="1637" width="0.2789%" height="15" fill="rgb(234,71,50)"/><text x="41.5774%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parser::syntax_kind::generated::SyntaxKind&gt;&gt; (2 samples, 0.11%)</title><rect x="41.4947%" y="1621" width="0.1115%" height="15" fill="rgb(253,155,4)"/><text x="41.7447%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;parser::syntax_kind::generated::SyntaxKind&gt;&gt; (2 samples, 0.11%)</title><rect x="41.4947%" y="1605" width="0.1115%" height="15" fill="rgb(222,185,37)"/><text x="41.7447%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="41.4947%" y="1589" width="0.1115%" height="15" fill="rgb(251,177,13)"/><text x="41.7447%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.11%)</title><rect x="41.4947%" y="1573" width="0.1115%" height="15" fill="rgb(250,179,40)"/><text x="41.7447%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="41.4947%" y="1557" width="0.1115%" height="15" fill="rgb(242,44,2)"/><text x="41.7447%" y="1567.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.06%)</title><rect x="41.5505%" y="1541" width="0.0558%" height="15" fill="rgb(216,177,13)"/><text x="41.8005%" y="1551.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.06%)</title><rect x="41.5505%" y="1525" width="0.0558%" height="15" fill="rgb(216,106,43)"/><text x="41.8005%" y="1535.50"></text></g><g><title>tt::buffer::Cursor::token_tree (1 samples, 0.06%)</title><rect x="41.6062%" y="1669" width="0.0558%" height="15" fill="rgb(216,183,2)"/><text x="41.8562%" y="1679.50"></text></g><g><title>tt::buffer::TokenBuffer::begin (1 samples, 0.06%)</title><rect x="41.6620%" y="1669" width="0.0558%" height="15" fill="rgb(249,75,3)"/><text x="41.9120%" y="1679.50"></text></g><g><title>&lt;&amp;[tt::TokenTree] as tt::buffer::TokenList&gt;::entries (1 samples, 0.06%)</title><rect x="41.7178%" y="1621" width="0.0558%" height="15" fill="rgb(219,67,39)"/><text x="41.9678%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="41.7736%" y="1621" width="0.0558%" height="15" fill="rgb(253,228,2)"/><text x="42.0236%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="41.7736%" y="1605" width="0.0558%" height="15" fill="rgb(235,138,27)"/><text x="42.0236%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="41.7736%" y="1589" width="0.0558%" height="15" fill="rgb(236,97,51)"/><text x="42.0236%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.06%)</title><rect x="41.7736%" y="1573" width="0.0558%" height="15" fill="rgb(240,80,30)"/><text x="42.0236%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="41.7736%" y="1557" width="0.0558%" height="15" fill="rgb(230,178,19)"/><text x="42.0236%" y="1567.50"></text></g><g><title>core::cmp::max (1 samples, 0.06%)</title><rect x="41.7736%" y="1541" width="0.0558%" height="15" fill="rgb(210,190,27)"/><text x="42.0236%" y="1551.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.06%)</title><rect x="41.7736%" y="1525" width="0.0558%" height="15" fill="rgb(222,107,31)"/><text x="42.0236%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="41.7736%" y="1509" width="0.0558%" height="15" fill="rgb(216,127,34)"/><text x="42.0236%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="41.8293%" y="1589" width="0.0558%" height="15" fill="rgb(234,116,52)"/><text x="42.0793%" y="1599.50"></text></g><g><title>tt::buffer::TokenBuffer::from_tokens (4 samples, 0.22%)</title><rect x="41.7178%" y="1669" width="0.2231%" height="15" fill="rgb(222,124,15)"/><text x="41.9678%" y="1679.50"></text></g><g><title>tt::buffer::TokenBuffer::new (4 samples, 0.22%)</title><rect x="41.7178%" y="1653" width="0.2231%" height="15" fill="rgb(231,179,28)"/><text x="41.9678%" y="1663.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (4 samples, 0.22%)</title><rect x="41.7178%" y="1637" width="0.2231%" height="15" fill="rgb(226,93,45)"/><text x="41.9678%" y="1647.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (2 samples, 0.11%)</title><rect x="41.8293%" y="1621" width="0.1115%" height="15" fill="rgb(215,8,51)"/><text x="42.0793%" y="1631.50"></text></g><g><title>tt::buffer::TokenBuffer::new_inner (2 samples, 0.11%)</title><rect x="41.8293%" y="1605" width="0.1115%" height="15" fill="rgb(223,106,5)"/><text x="42.0793%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,(&amp;tt::Subtree,core::option::Option&lt;&amp;tt::TokenTree&gt;))&gt;&gt; (1 samples, 0.06%)</title><rect x="41.8851%" y="1589" width="0.0558%" height="15" fill="rgb(250,191,5)"/><text x="42.1351%" y="1599.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="41.8851%" y="1573" width="0.0558%" height="15" fill="rgb(242,132,44)"/><text x="42.1351%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,(&amp;tt::Subtree,core::option::Option&lt;&amp;tt::TokenTree&gt;)),alloc::alloc::Global&gt;&gt; (1 samples, 0.06%)</title><rect x="41.8851%" y="1557" width="0.0558%" height="15" fill="rgb(251,152,29)"/><text x="42.1351%" y="1567.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="41.8851%" y="1541" width="0.0558%" height="15" fill="rgb(218,179,5)"/><text x="42.1351%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,(&amp;tt::Subtree,core::option::Option&lt;&amp;tt::TokenTree&gt;))&gt;&gt; (1 samples, 0.06%)</title><rect x="41.8851%" y="1525" width="0.0558%" height="15" fill="rgb(227,67,19)"/><text x="42.1351%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="41.8851%" y="1509" width="0.0558%" height="15" fill="rgb(233,119,31)"/><text x="42.1351%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="41.8851%" y="1493" width="0.0558%" height="15" fill="rgb(241,120,22)"/><text x="42.1351%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="41.8851%" y="1477" width="0.0558%" height="15" fill="rgb(224,102,30)"/><text x="42.1351%" y="1487.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="41.8851%" y="1461" width="0.0558%" height="15" fill="rgb(210,164,37)"/><text x="42.1351%" y="1471.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="41.8851%" y="1445" width="0.0558%" height="15" fill="rgb(226,191,16)"/><text x="42.1351%" y="1455.50"></text></g><g><title>mbe::expander::matcher::match_ (222 samples, 12.38%)</title><rect x="29.6152%" y="1717" width="12.3815%" height="15" fill="rgb(214,40,45)"/><text x="29.8652%" y="1727.50">mbe::expander::mat..</text></g><g><title>mbe::expander::matcher::match_loop_inner (221 samples, 12.33%)</title><rect x="29.6709%" y="1701" width="12.3257%" height="15" fill="rgb(244,29,26)"/><text x="29.9209%" y="1711.50">mbe::expander::mat..</text></g><g><title>mbe::tt_iter::TtIter::expect_fragment (77 samples, 4.29%)</title><rect x="37.7022%" y="1685" width="4.2945%" height="15" fill="rgb(216,16,5)"/><text x="37.9522%" y="1695.50">mbe::..</text></g><g><title>tt::buffer::TokenTreeRef::cloned (1 samples, 0.06%)</title><rect x="41.9409%" y="1669" width="0.0558%" height="15" fill="rgb(249,76,35)"/><text x="42.1909%" y="1679.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="41.9409%" y="1653" width="0.0558%" height="15" fill="rgb(207,11,44)"/><text x="42.1909%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="41.9967%" y="1557" width="0.0558%" height="15" fill="rgb(228,190,49)"/><text x="42.2467%" y="1567.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="41.9967%" y="1541" width="0.0558%" height="15" fill="rgb(214,173,12)"/><text x="42.2467%" y="1551.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.06%)</title><rect x="41.9967%" y="1525" width="0.0558%" height="15" fill="rgb(218,26,35)"/><text x="42.2467%" y="1535.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="41.9967%" y="1509" width="0.0558%" height="15" fill="rgb(220,200,19)"/><text x="42.2467%" y="1519.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="41.9967%" y="1493" width="0.0558%" height="15" fill="rgb(239,95,49)"/><text x="42.2467%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="41.9967%" y="1477" width="0.0558%" height="15" fill="rgb(235,85,53)"/><text x="42.2467%" y="1487.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.06%)</title><rect x="41.9967%" y="1461" width="0.0558%" height="15" fill="rgb(233,133,31)"/><text x="42.2467%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="41.9967%" y="1445" width="0.0558%" height="15" fill="rgb(218,25,20)"/><text x="42.2467%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="41.9967%" y="1429" width="0.0558%" height="15" fill="rgb(252,210,38)"/><text x="42.2467%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="41.9967%" y="1413" width="0.0558%" height="15" fill="rgb(242,134,21)"/><text x="42.2467%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.06%)</title><rect x="41.9967%" y="1397" width="0.0558%" height="15" fill="rgb(213,28,48)"/><text x="42.2467%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="41.9967%" y="1637" width="0.1115%" height="15" fill="rgb(250,196,2)"/><text x="42.2467%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="41.9967%" y="1621" width="0.1115%" height="15" fill="rgb(227,5,17)"/><text x="42.2467%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="41.9967%" y="1605" width="0.1115%" height="15" fill="rgb(221,226,24)"/><text x="42.2467%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="41.9967%" y="1589" width="0.1115%" height="15" fill="rgb(211,5,48)"/><text x="42.2467%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="41.9967%" y="1573" width="0.1115%" height="15" fill="rgb(219,150,6)"/><text x="42.2467%" y="1583.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="42.0524%" y="1557" width="0.0558%" height="15" fill="rgb(251,46,16)"/><text x="42.3024%" y="1567.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="42.0524%" y="1541" width="0.0558%" height="15" fill="rgb(220,204,40)"/><text x="42.3024%" y="1551.50"></text></g><g><title>[unknown] (756 samples, 42.16%)</title><rect x="0.0000%" y="1925" width="42.1640%" height="15" fill="rgb(211,85,2)"/><text x="0.2500%" y="1935.50">[unknown]</text></g><g><title>test::run_test::run_test_inner::{{closure}} (355 samples, 19.80%)</title><rect x="22.3648%" y="1909" width="19.7992%" height="15" fill="rgb(229,17,7)"/><text x="22.6148%" y="1919.50">test::run_test::run_test_inner:..</text></g><g><title>test::run_test_in_process (355 samples, 19.80%)</title><rect x="22.3648%" y="1893" width="19.7992%" height="15" fill="rgb(239,72,28)"/><text x="22.6148%" y="1903.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (355 samples, 19.80%)</title><rect x="22.3648%" y="1877" width="19.7992%" height="15" fill="rgb(230,47,54)"/><text x="22.6148%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (355 samples, 19.80%)</title><rect x="22.3648%" y="1861" width="19.7992%" height="15" fill="rgb(214,50,8)"/><text x="22.6148%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (355 samples, 19.80%)</title><rect x="22.3648%" y="1845" width="19.7992%" height="15" fill="rgb(216,198,43)"/><text x="22.6148%" y="1855.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (355 samples, 19.80%)</title><rect x="22.3648%" y="1829" width="19.7992%" height="15" fill="rgb(234,20,35)"/><text x="22.6148%" y="1839.50">&lt;std::panic::AssertUnwindSafe&lt;F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (355 samples, 19.80%)</title><rect x="22.3648%" y="1813" width="19.7992%" height="15" fill="rgb(254,45,19)"/><text x="22.6148%" y="1823.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>test::__rust_begin_short_backtrace (355 samples, 19.80%)</title><rect x="22.3648%" y="1797" width="19.7992%" height="15" fill="rgb(219,14,44)"/><text x="22.6148%" y="1807.50">test::__rust_begin_short_backtr..</text></g><g><title>core::ops::function::FnOnce::call_once (355 samples, 19.80%)</title><rect x="22.3648%" y="1781" width="19.7992%" height="15" fill="rgb(217,220,26)"/><text x="22.6148%" y="1791.50">core::ops::function::FnOnce::ca..</text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (355 samples, 19.80%)</title><rect x="22.3648%" y="1765" width="19.7992%" height="15" fill="rgb(213,158,28)"/><text x="22.6148%" y="1775.50">mbe::benchmark::benchmark_expan..</text></g><g><title>mbe::MacroDef::expand (225 samples, 12.55%)</title><rect x="29.6152%" y="1749" width="12.5488%" height="15" fill="rgb(252,51,52)"/><text x="29.8652%" y="1759.50">mbe::MacroDef::expa..</text></g><g><title>mbe::expander::expand_rules (225 samples, 12.55%)</title><rect x="29.6152%" y="1733" width="12.5488%" height="15" fill="rgb(246,89,16)"/><text x="29.8652%" y="1743.50">mbe::expander::expa..</text></g><g><title>mbe::expander::transcriber::transcribe (3 samples, 0.17%)</title><rect x="41.9967%" y="1717" width="0.1673%" height="15" fill="rgb(216,158,49)"/><text x="42.2467%" y="1727.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="41.9967%" y="1701" width="0.1673%" height="15" fill="rgb(236,107,19)"/><text x="42.2467%" y="1711.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="41.9967%" y="1685" width="0.1673%" height="15" fill="rgb(228,185,30)"/><text x="42.2467%" y="1695.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="41.9967%" y="1669" width="0.1673%" height="15" fill="rgb(246,134,8)"/><text x="42.2467%" y="1679.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="41.9967%" y="1653" width="0.1673%" height="15" fill="rgb(214,143,50)"/><text x="42.2467%" y="1663.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="42.1082%" y="1637" width="0.0558%" height="15" fill="rgb(228,75,8)"/><text x="42.3582%" y="1647.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="42.1082%" y="1621" width="0.0558%" height="15" fill="rgb(207,175,4)"/><text x="42.3582%" y="1631.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="42.1082%" y="1605" width="0.0558%" height="15" fill="rgb(205,108,24)"/><text x="42.3582%" y="1615.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="42.1082%" y="1589" width="0.0558%" height="15" fill="rgb(244,120,49)"/><text x="42.3582%" y="1599.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="42.1082%" y="1573" width="0.0558%" height="15" fill="rgb(223,47,38)"/><text x="42.3582%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="42.1082%" y="1557" width="0.0558%" height="15" fill="rgb(229,179,11)"/><text x="42.3582%" y="1567.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="42.1082%" y="1541" width="0.0558%" height="15" fill="rgb(231,122,1)"/><text x="42.3582%" y="1551.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="42.1082%" y="1525" width="0.0558%" height="15" fill="rgb(245,119,9)"/><text x="42.3582%" y="1535.50"></text></g><g><title>std::io::stdio::set_output_capture (1 samples, 0.06%)</title><rect x="42.2197%" y="1669" width="0.0558%" height="15" fill="rgb(241,163,25)"/><text x="42.4697%" y="1679.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.06%)</title><rect x="42.2197%" y="1653" width="0.0558%" height="15" fill="rgb(217,214,3)"/><text x="42.4697%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="42.2755%" y="1541" width="0.0558%" height="15" fill="rgb(240,86,28)"/><text x="42.5255%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="42.2755%" y="1525" width="0.0558%" height="15" fill="rgb(215,47,9)"/><text x="42.5255%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="42.2755%" y="1509" width="0.0558%" height="15" fill="rgb(252,25,45)"/><text x="42.5255%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="42.2755%" y="1493" width="0.0558%" height="15" fill="rgb(251,164,9)"/><text x="42.5255%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="42.2755%" y="1477" width="0.0558%" height="15" fill="rgb(233,194,0)"/><text x="42.5255%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="42.2755%" y="1461" width="0.0558%" height="15" fill="rgb(249,111,24)"/><text x="42.5255%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="42.2755%" y="1445" width="0.0558%" height="15" fill="rgb(250,223,3)"/><text x="42.5255%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="42.2755%" y="1429" width="0.0558%" height="15" fill="rgb(236,178,37)"/><text x="42.5255%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="42.2755%" y="1413" width="0.0558%" height="15" fill="rgb(241,158,50)"/><text x="42.5255%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="42.2755%" y="1397" width="0.0558%" height="15" fill="rgb(213,121,41)"/><text x="42.5255%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="42.2755%" y="1381" width="0.0558%" height="15" fill="rgb(240,92,3)"/><text x="42.5255%" y="1391.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="42.2755%" y="1365" width="0.0558%" height="15" fill="rgb(205,123,3)"/><text x="42.5255%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="42.2755%" y="1349" width="0.0558%" height="15" fill="rgb(205,97,47)"/><text x="42.5255%" y="1359.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="42.4428%" y="1493" width="0.0558%" height="15" fill="rgb(247,152,14)"/><text x="42.6928%" y="1503.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="42.4428%" y="1477" width="0.0558%" height="15" fill="rgb(248,195,53)"/><text x="42.6928%" y="1487.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.50%)</title><rect x="42.3313%" y="1541" width="0.5020%" height="15" fill="rgb(226,201,16)"/><text x="42.5813%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::Rule&gt; (8 samples, 0.45%)</title><rect x="42.3871%" y="1525" width="0.4462%" height="15" fill="rgb(205,98,0)"/><text x="42.6371%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::parser::Op&gt; (8 samples, 0.45%)</title><rect x="42.3871%" y="1509" width="0.4462%" height="15" fill="rgb(214,191,48)"/><text x="42.6371%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::parser::Op&gt; (6 samples, 0.33%)</title><rect x="42.4986%" y="1493" width="0.3346%" height="15" fill="rgb(237,112,39)"/><text x="42.7486%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::parser::Op&gt; (4 samples, 0.22%)</title><rect x="42.6102%" y="1477" width="0.2231%" height="15" fill="rgb(247,203,27)"/><text x="42.8602%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::parser::Op&gt; (4 samples, 0.22%)</title><rect x="42.6102%" y="1461" width="0.2231%" height="15" fill="rgb(235,124,28)"/><text x="42.8602%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::parser::Op&gt; (2 samples, 0.11%)</title><rect x="42.7217%" y="1445" width="0.1115%" height="15" fill="rgb(208,207,46)"/><text x="42.9717%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="42.8890%" y="1509" width="0.0558%" height="15" fill="rgb(234,176,4)"/><text x="43.1390%" y="1519.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="42.9448%" y="1493" width="0.0558%" height="15" fill="rgb(230,133,28)"/><text x="43.1948%" y="1503.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="42.9448%" y="1477" width="0.0558%" height="15" fill="rgb(211,137,40)"/><text x="43.1948%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (2 samples, 0.11%)</title><rect x="42.9448%" y="1509" width="0.1115%" height="15" fill="rgb(254,35,13)"/><text x="43.1948%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="43.0006%" y="1493" width="0.0558%" height="15" fill="rgb(225,49,51)"/><text x="43.2506%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="43.0006%" y="1477" width="0.0558%" height="15" fill="rgb(251,10,15)"/><text x="43.2506%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="43.0006%" y="1461" width="0.0558%" height="15" fill="rgb(228,207,15)"/><text x="43.2506%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="43.0006%" y="1445" width="0.0558%" height="15" fill="rgb(241,99,19)"/><text x="43.2506%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="43.0006%" y="1429" width="0.0558%" height="15" fill="rgb(207,104,49)"/><text x="43.2506%" y="1439.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="43.0006%" y="1413" width="0.0558%" height="15" fill="rgb(234,99,18)"/><text x="43.2506%" y="1423.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="43.2236%" y="1413" width="0.0558%" height="15" fill="rgb(213,191,49)"/><text x="43.4736%" y="1423.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="43.2236%" y="1397" width="0.0558%" height="15" fill="rgb(210,226,19)"/><text x="43.4736%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="43.1679%" y="1461" width="0.1673%" height="15" fill="rgb(229,97,18)"/><text x="43.4179%" y="1471.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="43.1679%" y="1445" width="0.1673%" height="15" fill="rgb(211,167,15)"/><text x="43.4179%" y="1455.50"></text></g><g><title>_int_realloc (3 samples, 0.17%)</title><rect x="43.1679%" y="1429" width="0.1673%" height="15" fill="rgb(210,169,34)"/><text x="43.4179%" y="1439.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="43.2794%" y="1413" width="0.0558%" height="15" fill="rgb(241,121,31)"/><text x="43.5294%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="43.4467%" y="1429" width="0.1673%" height="15" fill="rgb(232,40,11)"/><text x="43.6967%" y="1439.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="43.4467%" y="1413" width="0.1673%" height="15" fill="rgb(205,86,26)"/><text x="43.6967%" y="1423.50"></text></g><g><title>_int_realloc (3 samples, 0.17%)</title><rect x="43.4467%" y="1397" width="0.1673%" height="15" fill="rgb(231,126,28)"/><text x="43.6967%" y="1407.50"></text></g><g><title>_int_malloc (3 samples, 0.17%)</title><rect x="43.4467%" y="1381" width="0.1673%" height="15" fill="rgb(219,221,18)"/><text x="43.6967%" y="1391.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="43.5025%" y="1365" width="0.1115%" height="15" fill="rgb(211,40,0)"/><text x="43.7525%" y="1375.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="43.7256%" y="1397" width="0.0558%" height="15" fill="rgb(239,85,43)"/><text x="43.9756%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="43.7814%" y="1397" width="0.0558%" height="15" fill="rgb(231,55,21)"/><text x="44.0314%" y="1407.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="43.7814%" y="1381" width="0.0558%" height="15" fill="rgb(225,184,43)"/><text x="44.0314%" y="1391.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="43.7814%" y="1365" width="0.0558%" height="15" fill="rgb(251,158,41)"/><text x="44.0314%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="43.7814%" y="1349" width="0.0558%" height="15" fill="rgb(234,159,37)"/><text x="44.0314%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="43.8929%" y="1365" width="0.1673%" height="15" fill="rgb(216,204,22)"/><text x="44.1429%" y="1375.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="43.8929%" y="1349" width="0.1673%" height="15" fill="rgb(214,17,3)"/><text x="44.1429%" y="1359.50"></text></g><g><title>_int_realloc (3 samples, 0.17%)</title><rect x="43.8929%" y="1333" width="0.1673%" height="15" fill="rgb(212,111,17)"/><text x="44.1429%" y="1343.50"></text></g><g><title>_int_malloc (3 samples, 0.17%)</title><rect x="43.8929%" y="1317" width="0.1673%" height="15" fill="rgb(221,157,24)"/><text x="44.1429%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="44.1160%" y="1333" width="0.1115%" height="15" fill="rgb(252,16,13)"/><text x="44.3660%" y="1343.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="44.1160%" y="1317" width="0.1115%" height="15" fill="rgb(221,62,2)"/><text x="44.3660%" y="1327.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="44.1718%" y="1301" width="0.0558%" height="15" fill="rgb(247,87,22)"/><text x="44.4218%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.17%)</title><rect x="44.1160%" y="1349" width="0.1673%" height="15" fill="rgb(215,73,9)"/><text x="44.3660%" y="1359.50"></text></g><g><title>mbe::parser::next_op (1 samples, 0.06%)</title><rect x="44.2276%" y="1333" width="0.0558%" height="15" fill="rgb(207,175,33)"/><text x="44.4776%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="44.2276%" y="1317" width="0.0558%" height="15" fill="rgb(243,129,54)"/><text x="44.4776%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.45%)</title><rect x="43.8929%" y="1381" width="0.4462%" height="15" fill="rgb(227,119,45)"/><text x="44.1429%" y="1391.50"></text></g><g><title>mbe::parser::next_op (5 samples, 0.28%)</title><rect x="44.0602%" y="1365" width="0.2789%" height="15" fill="rgb(205,109,36)"/><text x="44.3102%" y="1375.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="44.2833%" y="1349" width="0.0558%" height="15" fill="rgb(205,6,39)"/><text x="44.5333%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="44.2833%" y="1333" width="0.0558%" height="15" fill="rgb(221,32,16)"/><text x="44.5333%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="44.4506%" y="1349" width="0.1673%" height="15" fill="rgb(228,144,50)"/><text x="44.7006%" y="1359.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="44.6737%" y="1301" width="0.0558%" height="15" fill="rgb(229,201,53)"/><text x="44.9237%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.12%)</title><rect x="43.6698%" y="1413" width="1.1154%" height="15" fill="rgb(249,153,27)"/><text x="43.9198%" y="1423.50"></text></g><g><title>mbe::parser::next_op (17 samples, 0.95%)</title><rect x="43.8371%" y="1397" width="0.9481%" height="15" fill="rgb(227,106,25)"/><text x="44.0871%" y="1407.50"></text></g><g><title>core::iter::adapters::process_results (8 samples, 0.45%)</title><rect x="44.3391%" y="1381" width="0.4462%" height="15" fill="rgb(230,65,29)"/><text x="44.5891%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.39%)</title><rect x="44.3949%" y="1365" width="0.3904%" height="15" fill="rgb(221,57,46)"/><text x="44.6449%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="44.6180%" y="1349" width="0.1673%" height="15" fill="rgb(229,161,17)"/><text x="44.8680%" y="1359.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="44.6180%" y="1333" width="0.1673%" height="15" fill="rgb(222,213,11)"/><text x="44.8680%" y="1343.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="44.6737%" y="1317" width="0.1115%" height="15" fill="rgb(235,35,13)"/><text x="44.9237%" y="1327.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="44.7295%" y="1301" width="0.0558%" height="15" fill="rgb(233,158,34)"/><text x="44.9795%" y="1311.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="44.7295%" y="1285" width="0.0558%" height="15" fill="rgb(215,151,48)"/><text x="44.9795%" y="1295.50"></text></g><g><title>__GI___mprotect (1 samples, 0.06%)</title><rect x="44.7295%" y="1269" width="0.0558%" height="15" fill="rgb(229,84,14)"/><text x="44.9795%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1253" width="0.0558%" height="15" fill="rgb(229,68,14)"/><text x="44.9795%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1237" width="0.0558%" height="15" fill="rgb(243,106,26)"/><text x="44.9795%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1221" width="0.0558%" height="15" fill="rgb(206,45,38)"/><text x="44.9795%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1205" width="0.0558%" height="15" fill="rgb(226,6,15)"/><text x="44.9795%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1189" width="0.0558%" height="15" fill="rgb(232,22,54)"/><text x="44.9795%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1173" width="0.0558%" height="15" fill="rgb(229,222,32)"/><text x="44.9795%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1157" width="0.0558%" height="15" fill="rgb(228,62,29)"/><text x="44.9795%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1141" width="0.0558%" height="15" fill="rgb(251,103,34)"/><text x="44.9795%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1125" width="0.0558%" height="15" fill="rgb(233,12,30)"/><text x="44.9795%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1109" width="0.0558%" height="15" fill="rgb(238,52,0)"/><text x="44.9795%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="44.7295%" y="1093" width="0.0558%" height="15" fill="rgb(223,98,5)"/><text x="44.9795%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.22%)</title><rect x="44.8410%" y="1381" width="0.2231%" height="15" fill="rgb(228,75,37)"/><text x="45.0910%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 1.78%)</title><rect x="43.3352%" y="1445" width="1.7847%" height="15" fill="rgb(205,115,49)"/><text x="43.5852%" y="1455.50">&lt;..</text></g><g><title>mbe::parser::next_op (27 samples, 1.51%)</title><rect x="43.6141%" y="1429" width="1.5059%" height="15" fill="rgb(250,154,43)"/><text x="43.8641%" y="1439.50"></text></g><g><title>core::iter::adapters::process_results (6 samples, 0.33%)</title><rect x="44.7853%" y="1413" width="0.3346%" height="15" fill="rgb(226,43,29)"/><text x="45.0353%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.33%)</title><rect x="44.7853%" y="1397" width="0.3346%" height="15" fill="rgb(249,228,39)"/><text x="45.0353%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="45.0641%" y="1381" width="0.0558%" height="15" fill="rgb(216,79,43)"/><text x="45.3141%" y="1391.50"></text></g><g><title>__rdl_realloc (1 samples, 0.06%)</title><rect x="45.0641%" y="1365" width="0.0558%" height="15" fill="rgb(228,95,12)"/><text x="45.3141%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="45.1757%" y="1413" width="0.1673%" height="15" fill="rgb(249,221,15)"/><text x="45.4257%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 2.40%)</title><rect x="43.0563%" y="1477" width="2.3982%" height="15" fill="rgb(233,34,13)"/><text x="43.3063%" y="1487.50">&lt;a..</text></g><g><title>mbe::parser::next_op (38 samples, 2.12%)</title><rect x="43.3352%" y="1461" width="2.1194%" height="15" fill="rgb(214,103,39)"/><text x="43.5852%" y="1471.50">m..</text></g><g><title>core::iter::adapters::process_results (6 samples, 0.33%)</title><rect x="45.1199%" y="1445" width="0.3346%" height="15" fill="rgb(251,126,39)"/><text x="45.3699%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.33%)</title><rect x="45.1199%" y="1429" width="0.3346%" height="15" fill="rgb(214,216,36)"/><text x="45.3699%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="45.3430%" y="1413" width="0.1115%" height="15" fill="rgb(220,221,8)"/><text x="45.5930%" y="1423.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="45.3430%" y="1397" width="0.1115%" height="15" fill="rgb(240,216,3)"/><text x="45.5930%" y="1407.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="45.3430%" y="1381" width="0.1115%" height="15" fill="rgb(232,218,17)"/><text x="45.5930%" y="1391.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="45.3988%" y="1365" width="0.0558%" height="15" fill="rgb(229,163,45)"/><text x="45.6488%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="45.5103%" y="1445" width="0.1673%" height="15" fill="rgb(231,110,42)"/><text x="45.7603%" y="1455.50"></text></g><g><title>mbe::Rule::parse (48 samples, 2.68%)</title><rect x="43.0563%" y="1493" width="2.6771%" height="15" fill="rgb(208,170,48)"/><text x="43.3063%" y="1503.50">mb..</text></g><g><title>core::iter::adapters::process_results (5 samples, 0.28%)</title><rect x="45.4545%" y="1477" width="0.2789%" height="15" fill="rgb(239,116,25)"/><text x="45.7045%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.28%)</title><rect x="45.4545%" y="1461" width="0.2789%" height="15" fill="rgb(219,200,50)"/><text x="45.7045%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="45.6776%" y="1445" width="0.0558%" height="15" fill="rgb(245,200,0)"/><text x="45.9276%" y="1455.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="45.6776%" y="1429" width="0.0558%" height="15" fill="rgb(245,119,33)"/><text x="45.9276%" y="1439.50"></text></g><g><title>mbe::Shift::new::max_id (3 samples, 0.17%)</title><rect x="45.7334%" y="1493" width="0.1673%" height="15" fill="rgb(231,125,12)"/><text x="45.9834%" y="1503.50"></text></g><g><title>mbe::Shift::new::max_id (3 samples, 0.17%)</title><rect x="45.7334%" y="1477" width="0.1673%" height="15" fill="rgb(216,96,41)"/><text x="45.9834%" y="1487.50"></text></g><g><title>mbe::Shift::new::max_id (2 samples, 0.11%)</title><rect x="45.7892%" y="1461" width="0.1115%" height="15" fill="rgb(248,43,45)"/><text x="46.0392%" y="1471.50"></text></g><g><title>mbe::Shift::new::max_id (2 samples, 0.11%)</title><rect x="45.7892%" y="1445" width="0.1115%" height="15" fill="rgb(217,222,7)"/><text x="46.0392%" y="1455.50"></text></g><g><title>mbe::Shift::new::max_id (2 samples, 0.11%)</title><rect x="45.7892%" y="1429" width="0.1115%" height="15" fill="rgb(233,28,6)"/><text x="46.0392%" y="1439.50"></text></g><g><title>mbe::Shift::new::max_id (2 samples, 0.11%)</title><rect x="45.7892%" y="1413" width="0.1115%" height="15" fill="rgb(231,218,15)"/><text x="46.0392%" y="1423.50"></text></g><g><title>tt::TokenId::unspecified (1 samples, 0.06%)</title><rect x="45.8450%" y="1397" width="0.0558%" height="15" fill="rgb(226,171,48)"/><text x="46.0950%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 3.12%)</title><rect x="42.8332%" y="1525" width="3.1233%" height="15" fill="rgb(235,201,9)"/><text x="43.0832%" y="1535.50">&lt;co..</text></g><g><title>mbe::MacroRules::parse (52 samples, 2.90%)</title><rect x="43.0563%" y="1509" width="2.9002%" height="15" fill="rgb(217,80,15)"/><text x="43.3063%" y="1519.50">mb..</text></g><g><title>mbe::validate (1 samples, 0.06%)</title><rect x="45.9007%" y="1493" width="0.0558%" height="15" fill="rgb(219,152,8)"/><text x="46.1507%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 3.18%)</title><rect x="42.8332%" y="1541" width="3.1790%" height="15" fill="rgb(243,107,38)"/><text x="43.0832%" y="1551.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="45.9565%" y="1525" width="0.0558%" height="15" fill="rgb(231,17,5)"/><text x="46.2065%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (1 samples, 0.06%)</title><rect x="45.9565%" y="1509" width="0.0558%" height="15" fill="rgb(209,25,54)"/><text x="46.2065%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="45.9565%" y="1493" width="0.0558%" height="15" fill="rgb(219,0,2)"/><text x="46.2065%" y="1503.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="45.9565%" y="1477" width="0.0558%" height="15" fill="rgb(246,9,5)"/><text x="46.2065%" y="1487.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="45.9565%" y="1461" width="0.0558%" height="15" fill="rgb(226,159,4)"/><text x="46.2065%" y="1471.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="46.0123%" y="1541" width="0.0558%" height="15" fill="rgb(219,175,34)"/><text x="46.2623%" y="1551.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="46.0123%" y="1525" width="0.0558%" height="15" fill="rgb(236,10,46)"/><text x="46.2623%" y="1535.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="46.0680%" y="1525" width="0.1115%" height="15" fill="rgb(240,211,16)"/><text x="46.3180%" y="1535.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="46.0680%" y="1509" width="0.1115%" height="15" fill="rgb(205,3,43)"/><text x="46.3180%" y="1519.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="46.1238%" y="1493" width="0.0558%" height="15" fill="rgb(245,7,22)"/><text x="46.3738%" y="1503.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="46.2911%" y="1509" width="0.0558%" height="15" fill="rgb(239,132,32)"/><text x="46.5411%" y="1519.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="46.2911%" y="1493" width="0.0558%" height="15" fill="rgb(228,202,34)"/><text x="46.5411%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (5 samples, 0.28%)</title><rect x="46.1796%" y="1525" width="0.2789%" height="15" fill="rgb(254,200,22)"/><text x="46.4296%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="46.3469%" y="1509" width="0.1115%" height="15" fill="rgb(219,10,39)"/><text x="46.5969%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="46.3469%" y="1493" width="0.1115%" height="15" fill="rgb(226,210,39)"/><text x="46.5969%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.17%)</title><rect x="46.4584%" y="1509" width="0.1673%" height="15" fill="rgb(208,219,16)"/><text x="46.7084%" y="1519.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="46.4584%" y="1493" width="0.1673%" height="15" fill="rgb(216,158,51)"/><text x="46.7084%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="46.5142%" y="1477" width="0.1115%" height="15" fill="rgb(233,14,44)"/><text x="46.7642%" y="1487.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="46.5142%" y="1461" width="0.1115%" height="15" fill="rgb(237,97,39)"/><text x="46.7642%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="46.5700%" y="1445" width="0.0558%" height="15" fill="rgb(218,198,43)"/><text x="46.8200%" y="1455.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="46.5700%" y="1429" width="0.0558%" height="15" fill="rgb(231,104,20)"/><text x="46.8200%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="46.6258%" y="1509" width="0.0558%" height="15" fill="rgb(254,36,13)"/><text x="46.8758%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (1 samples, 0.06%)</title><rect x="46.7373%" y="1477" width="0.0558%" height="15" fill="rgb(248,14,50)"/><text x="46.9873%" y="1487.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.17%)</title><rect x="46.6815%" y="1493" width="0.1673%" height="15" fill="rgb(217,107,29)"/><text x="46.9315%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="46.7931%" y="1477" width="0.0558%" height="15" fill="rgb(251,169,33)"/><text x="47.0431%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="47.1835%" y="1477" width="0.1115%" height="15" fill="rgb(217,108,32)"/><text x="47.4335%" y="1487.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="47.2393%" y="1461" width="0.0558%" height="15" fill="rgb(219,66,42)"/><text x="47.4893%" y="1471.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.17%)</title><rect x="47.2950%" y="1477" width="0.1673%" height="15" fill="rgb(206,180,7)"/><text x="47.5450%" y="1487.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.17%)</title><rect x="47.2950%" y="1461" width="0.1673%" height="15" fill="rgb(208,226,31)"/><text x="47.5450%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="47.4066%" y="1445" width="0.0558%" height="15" fill="rgb(218,26,49)"/><text x="47.6566%" y="1455.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="47.4624%" y="1477" width="0.0558%" height="15" fill="rgb(233,197,48)"/><text x="47.7124%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (1 samples, 0.06%)</title><rect x="47.4624%" y="1461" width="0.0558%" height="15" fill="rgb(252,181,51)"/><text x="47.7124%" y="1471.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="47.4624%" y="1445" width="0.0558%" height="15" fill="rgb(253,90,19)"/><text x="47.7124%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="47.4624%" y="1429" width="0.0558%" height="15" fill="rgb(215,171,30)"/><text x="47.7124%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="47.5181%" y="1477" width="0.0558%" height="15" fill="rgb(214,222,9)"/><text x="47.7681%" y="1487.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.61%)</title><rect x="47.5739%" y="1477" width="0.6135%" height="15" fill="rgb(223,3,22)"/><text x="47.8239%" y="1487.50"></text></g><g><title>__rust_dealloc (1 samples, 0.06%)</title><rect x="48.1874%" y="1477" width="0.0558%" height="15" fill="rgb(225,196,46)"/><text x="48.4374%" y="1487.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="48.2432%" y="1477" width="0.0558%" height="15" fill="rgb(209,110,37)"/><text x="48.4932%" y="1487.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.06%)</title><rect x="48.2432%" y="1461" width="0.0558%" height="15" fill="rgb(249,89,12)"/><text x="48.4932%" y="1471.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="48.3547%" y="1445" width="0.1673%" height="15" fill="rgb(226,27,33)"/><text x="48.6047%" y="1455.50"></text></g><g><title>_int_free (3 samples, 0.17%)</title><rect x="48.3547%" y="1429" width="0.1673%" height="15" fill="rgb(213,82,22)"/><text x="48.6047%" y="1439.50"></text></g><g><title>__rust_dealloc (1 samples, 0.06%)</title><rect x="48.5220%" y="1445" width="0.0558%" height="15" fill="rgb(248,140,0)"/><text x="48.7720%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="48.6336%" y="1429" width="0.0558%" height="15" fill="rgb(228,106,3)"/><text x="48.8836%" y="1439.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="48.6336%" y="1413" width="0.0558%" height="15" fill="rgb(209,23,37)"/><text x="48.8836%" y="1423.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="48.2989%" y="1461" width="0.4462%" height="15" fill="rgb(241,93,50)"/><text x="48.5489%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (3 samples, 0.17%)</title><rect x="48.5778%" y="1445" width="0.1673%" height="15" fill="rgb(253,46,43)"/><text x="48.8278%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="48.6893%" y="1429" width="0.0558%" height="15" fill="rgb(226,206,43)"/><text x="48.9393%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="48.6893%" y="1413" width="0.0558%" height="15" fill="rgb(217,54,7)"/><text x="48.9393%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="48.6893%" y="1397" width="0.0558%" height="15" fill="rgb(223,5,52)"/><text x="48.9393%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (2 samples, 0.11%)</title><rect x="48.8567%" y="1429" width="0.1115%" height="15" fill="rgb(206,52,46)"/><text x="49.1067%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="48.9124%" y="1413" width="0.0558%" height="15" fill="rgb(253,136,11)"/><text x="49.1624%" y="1423.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.28%)</title><rect x="48.8009%" y="1445" width="0.2789%" height="15" fill="rgb(208,106,33)"/><text x="49.0509%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="48.9682%" y="1429" width="0.1115%" height="15" fill="rgb(206,54,4)"/><text x="49.2182%" y="1439.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="49.0240%" y="1413" width="0.0558%" height="15" fill="rgb(213,3,15)"/><text x="49.2740%" y="1423.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="49.0240%" y="1397" width="0.0558%" height="15" fill="rgb(252,211,39)"/><text x="49.2740%" y="1407.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="49.0798%" y="1445" width="0.1115%" height="15" fill="rgb(223,6,36)"/><text x="49.3298%" y="1455.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="49.0798%" y="1429" width="0.1115%" height="15" fill="rgb(252,169,45)"/><text x="49.3298%" y="1439.50"></text></g><g><title>__GI___libc_free (4 samples, 0.22%)</title><rect x="49.3028%" y="1397" width="0.2231%" height="15" fill="rgb(212,48,26)"/><text x="49.5528%" y="1407.50"></text></g><g><title>_int_free (4 samples, 0.22%)</title><rect x="49.3028%" y="1381" width="0.2231%" height="15" fill="rgb(251,102,48)"/><text x="49.5528%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="49.5259%" y="1381" width="0.1673%" height="15" fill="rgb(243,208,16)"/><text x="49.7759%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (26 samples, 1.45%)</title><rect x="48.2989%" y="1477" width="1.4501%" height="15" fill="rgb(219,96,24)"/><text x="48.5489%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (18 samples, 1.00%)</title><rect x="48.7451%" y="1461" width="1.0039%" height="15" fill="rgb(219,33,29)"/><text x="48.9951%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (10 samples, 0.56%)</title><rect x="49.1913%" y="1445" width="0.5577%" height="15" fill="rgb(223,176,5)"/><text x="49.4413%" y="1455.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.50%)</title><rect x="49.2471%" y="1429" width="0.5020%" height="15" fill="rgb(228,140,14)"/><text x="49.4971%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (8 samples, 0.45%)</title><rect x="49.3028%" y="1413" width="0.4462%" height="15" fill="rgb(217,179,31)"/><text x="49.5528%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (4 samples, 0.22%)</title><rect x="49.5259%" y="1397" width="0.2231%" height="15" fill="rgb(230,9,30)"/><text x="49.7759%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="49.6933%" y="1381" width="0.0558%" height="15" fill="rgb(230,136,20)"/><text x="49.9433%" y="1391.50"></text></g><g><title>mbe::expander::matcher::match_ (53 samples, 2.96%)</title><rect x="46.8489%" y="1493" width="2.9559%" height="15" fill="rgb(215,210,22)"/><text x="47.0989%" y="1503.50">mbe..</text></g><g><title>mbe::expander::matcher::match_::count (1 samples, 0.06%)</title><rect x="49.7490%" y="1477" width="0.0558%" height="15" fill="rgb(218,43,5)"/><text x="49.9990%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="49.9163%" y="1461" width="0.0558%" height="15" fill="rgb(216,11,5)"/><text x="50.1663%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="49.9163%" y="1445" width="0.0558%" height="15" fill="rgb(209,82,29)"/><text x="50.1663%" y="1455.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="49.9163%" y="1429" width="0.0558%" height="15" fill="rgb(244,115,12)"/><text x="50.1663%" y="1439.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="49.9163%" y="1413" width="0.0558%" height="15" fill="rgb(222,82,18)"/><text x="50.1663%" y="1423.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="50.0279%" y="1445" width="0.0558%" height="15" fill="rgb(249,227,8)"/><text x="50.2779%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="50.0837%" y="1445" width="0.0558%" height="15" fill="rgb(253,141,45)"/><text x="50.3337%" y="1455.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (2 samples, 0.11%)</title><rect x="50.3067%" y="1429" width="0.1115%" height="15" fill="rgb(234,184,4)"/><text x="50.5567%" y="1439.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="50.4183%" y="1349" width="0.0558%" height="15" fill="rgb(218,194,23)"/><text x="50.6683%" y="1359.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="50.4183%" y="1381" width="0.1115%" height="15" fill="rgb(235,66,41)"/><text x="50.6683%" y="1391.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="50.4183%" y="1365" width="0.1115%" height="15" fill="rgb(245,217,1)"/><text x="50.6683%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="50.4741%" y="1349" width="0.0558%" height="15" fill="rgb(229,91,1)"/><text x="50.7241%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.17%)</title><rect x="50.4183%" y="1413" width="0.1673%" height="15" fill="rgb(207,101,30)"/><text x="50.6683%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.17%)</title><rect x="50.4183%" y="1397" width="0.1673%" height="15" fill="rgb(223,82,49)"/><text x="50.6683%" y="1407.50"></text></g><g><title>__rdl_realloc (1 samples, 0.06%)</title><rect x="50.5298%" y="1381" width="0.0558%" height="15" fill="rgb(218,167,17)"/><text x="50.7798%" y="1391.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.06%)</title><rect x="50.5298%" y="1365" width="0.0558%" height="15" fill="rgb(208,103,14)"/><text x="50.7798%" y="1375.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (4 samples, 0.22%)</title><rect x="50.4183%" y="1429" width="0.2231%" height="15" fill="rgb(238,20,8)"/><text x="50.6683%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="50.5856%" y="1413" width="0.0558%" height="15" fill="rgb(218,80,54)"/><text x="50.8356%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="50.5856%" y="1397" width="0.0558%" height="15" fill="rgb(240,144,17)"/><text x="50.8356%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="50.5856%" y="1381" width="0.0558%" height="15" fill="rgb(245,27,50)"/><text x="50.8356%" y="1391.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="50.5856%" y="1365" width="0.0558%" height="15" fill="rgb(251,51,7)"/><text x="50.8356%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="50.5856%" y="1349" width="0.0558%" height="15" fill="rgb(245,217,29)"/><text x="50.8356%" y="1359.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="50.5856%" y="1333" width="0.0558%" height="15" fill="rgb(221,176,29)"/><text x="50.8356%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="50.5856%" y="1317" width="0.0558%" height="15" fill="rgb(212,180,24)"/><text x="50.8356%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="50.5856%" y="1301" width="0.0558%" height="15" fill="rgb(254,24,2)"/><text x="50.8356%" y="1311.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="50.5856%" y="1285" width="0.0558%" height="15" fill="rgb(230,100,2)"/><text x="50.8356%" y="1295.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="50.5856%" y="1269" width="0.0558%" height="15" fill="rgb(219,142,25)"/><text x="50.8356%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="50.8087%" y="1413" width="0.0558%" height="15" fill="rgb(240,73,43)"/><text x="51.0587%" y="1423.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="50.8087%" y="1397" width="0.0558%" height="15" fill="rgb(214,114,15)"/><text x="51.0587%" y="1407.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="50.8645%" y="1413" width="0.0558%" height="15" fill="rgb(207,130,4)"/><text x="51.1145%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="50.9202%" y="1413" width="0.1115%" height="15" fill="rgb(221,25,40)"/><text x="51.1702%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="50.9202%" y="1397" width="0.1115%" height="15" fill="rgb(241,184,7)"/><text x="51.1702%" y="1407.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="50.9760%" y="1381" width="0.0558%" height="15" fill="rgb(235,159,4)"/><text x="51.2260%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="51.2549%" y="1397" width="0.1115%" height="15" fill="rgb(214,87,48)"/><text x="51.5049%" y="1407.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (2 samples, 0.11%)</title><rect x="51.3664%" y="1397" width="0.1115%" height="15" fill="rgb(246,198,24)"/><text x="51.6164%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (30 samples, 1.67%)</title><rect x="49.9721%" y="1461" width="1.6732%" height="15" fill="rgb(209,66,40)"/><text x="50.2221%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (27 samples, 1.51%)</title><rect x="50.1394%" y="1445" width="1.5059%" height="15" fill="rgb(233,147,39)"/><text x="50.3894%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (18 samples, 1.00%)</title><rect x="50.6414%" y="1429" width="1.0039%" height="15" fill="rgb(231,145,52)"/><text x="50.8914%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (11 samples, 0.61%)</title><rect x="51.0318%" y="1413" width="0.6135%" height="15" fill="rgb(206,20,26)"/><text x="51.2818%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (3 samples, 0.17%)</title><rect x="51.4780%" y="1397" width="0.1673%" height="15" fill="rgb(238,220,4)"/><text x="51.7280%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="51.5895%" y="1381" width="0.0558%" height="15" fill="rgb(252,195,42)"/><text x="51.8395%" y="1391.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="51.5895%" y="1365" width="0.0558%" height="15" fill="rgb(209,10,6)"/><text x="51.8395%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.17%)</title><rect x="51.8126%" y="1445" width="0.1673%" height="15" fill="rgb(229,3,52)"/><text x="52.0626%" y="1455.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="51.8684%" y="1429" width="0.1115%" height="15" fill="rgb(253,49,37)"/><text x="52.1184%" y="1439.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="51.9241%" y="1413" width="0.0558%" height="15" fill="rgb(240,103,49)"/><text x="52.1741%" y="1423.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="51.9241%" y="1397" width="0.0558%" height="15" fill="rgb(250,182,30)"/><text x="52.1741%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="51.9799%" y="1445" width="0.0558%" height="15" fill="rgb(248,8,30)"/><text x="52.2299%" y="1455.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="51.9799%" y="1429" width="0.0558%" height="15" fill="rgb(237,120,30)"/><text x="52.2299%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="51.9799%" y="1413" width="0.0558%" height="15" fill="rgb(221,146,34)"/><text x="52.2299%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="51.9799%" y="1397" width="0.0558%" height="15" fill="rgb(242,55,13)"/><text x="52.2299%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="51.9799%" y="1381" width="0.0558%" height="15" fill="rgb(242,112,31)"/><text x="52.2299%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="51.9799%" y="1365" width="0.0558%" height="15" fill="rgb(249,192,27)"/><text x="52.2299%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="51.9799%" y="1349" width="0.0558%" height="15" fill="rgb(208,204,44)"/><text x="52.2299%" y="1359.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="51.9799%" y="1333" width="0.0558%" height="15" fill="rgb(208,93,54)"/><text x="52.2299%" y="1343.50"></text></g><g><title>&lt;smol_str::SmolStr as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="52.0357%" y="1413" width="0.0558%" height="15" fill="rgb(242,1,31)"/><text x="52.2857%" y="1423.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="52.0357%" y="1397" width="0.0558%" height="15" fill="rgb(241,83,25)"/><text x="52.2857%" y="1407.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="52.0357%" y="1381" width="0.0558%" height="15" fill="rgb(205,169,50)"/><text x="52.2857%" y="1391.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.06%)</title><rect x="52.0357%" y="1365" width="0.0558%" height="15" fill="rgb(239,186,37)"/><text x="52.2857%" y="1375.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.06%)</title><rect x="52.0357%" y="1349" width="0.0558%" height="15" fill="rgb(205,221,10)"/><text x="52.2857%" y="1359.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="52.0357%" y="1333" width="0.0558%" height="15" fill="rgb(218,196,15)"/><text x="52.2857%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="52.0357%" y="1317" width="0.0558%" height="15" fill="rgb(218,196,35)"/><text x="52.2857%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="52.0915%" y="1413" width="0.0558%" height="15" fill="rgb(233,63,24)"/><text x="52.3415%" y="1423.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="52.1472%" y="1397" width="0.0558%" height="15" fill="rgb(225,8,4)"/><text x="52.3972%" y="1407.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="52.1472%" y="1381" width="0.0558%" height="15" fill="rgb(234,105,35)"/><text x="52.3972%" y="1391.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="52.1472%" y="1365" width="0.0558%" height="15" fill="rgb(236,21,32)"/><text x="52.3972%" y="1375.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (4 samples, 0.22%)</title><rect x="52.0357%" y="1445" width="0.2231%" height="15" fill="rgb(228,109,6)"/><text x="52.2857%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (4 samples, 0.22%)</title><rect x="52.0357%" y="1429" width="0.2231%" height="15" fill="rgb(229,215,31)"/><text x="52.2857%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="52.1472%" y="1413" width="0.1115%" height="15" fill="rgb(221,52,54)"/><text x="52.3972%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="52.2030%" y="1397" width="0.0558%" height="15" fill="rgb(252,129,43)"/><text x="52.4530%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="52.2030%" y="1381" width="0.0558%" height="15" fill="rgb(248,183,27)"/><text x="52.4530%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="52.2030%" y="1365" width="0.0558%" height="15" fill="rgb(250,0,22)"/><text x="52.4530%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="52.5376%" y="1429" width="0.1115%" height="15" fill="rgb(213,166,10)"/><text x="52.7876%" y="1439.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="52.6492%" y="1429" width="0.0558%" height="15" fill="rgb(207,163,36)"/><text x="52.8992%" y="1439.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="52.6492%" y="1413" width="0.0558%" height="15" fill="rgb(208,122,22)"/><text x="52.8992%" y="1423.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="52.6492%" y="1397" width="0.0558%" height="15" fill="rgb(207,104,49)"/><text x="52.8992%" y="1407.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Subtree&gt;&gt;::from (1 samples, 0.06%)</title><rect x="52.7050%" y="1429" width="0.0558%" height="15" fill="rgb(248,211,50)"/><text x="52.9550%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="52.7607%" y="1429" width="0.0558%" height="15" fill="rgb(217,13,45)"/><text x="53.0107%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="52.7607%" y="1413" width="0.0558%" height="15" fill="rgb(211,216,49)"/><text x="53.0107%" y="1423.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="52.7607%" y="1397" width="0.0558%" height="15" fill="rgb(221,58,53)"/><text x="53.0107%" y="1407.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="52.7607%" y="1381" width="0.0558%" height="15" fill="rgb(220,112,41)"/><text x="53.0107%" y="1391.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="52.7607%" y="1365" width="0.0558%" height="15" fill="rgb(236,38,28)"/><text x="53.0107%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="52.8165%" y="1413" width="0.1115%" height="15" fill="rgb(227,195,22)"/><text x="53.0665%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="52.8723%" y="1397" width="0.0558%" height="15" fill="rgb(214,55,33)"/><text x="53.1223%" y="1407.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="52.8723%" y="1381" width="0.0558%" height="15" fill="rgb(248,80,13)"/><text x="53.1223%" y="1391.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="52.8723%" y="1365" width="0.0558%" height="15" fill="rgb(238,52,6)"/><text x="53.1223%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="52.8723%" y="1349" width="0.0558%" height="15" fill="rgb(224,198,47)"/><text x="53.1223%" y="1359.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="53.0396%" y="1397" width="0.0558%" height="15" fill="rgb(233,171,20)"/><text x="53.2896%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="53.0396%" y="1381" width="0.0558%" height="15" fill="rgb(241,30,25)"/><text x="53.2896%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="53.0396%" y="1365" width="0.0558%" height="15" fill="rgb(207,171,38)"/><text x="53.2896%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="53.0396%" y="1349" width="0.0558%" height="15" fill="rgb(234,70,1)"/><text x="53.2896%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="53.0396%" y="1333" width="0.0558%" height="15" fill="rgb(232,178,18)"/><text x="53.2896%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="53.0396%" y="1317" width="0.0558%" height="15" fill="rgb(241,78,40)"/><text x="53.2896%" y="1327.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="53.0396%" y="1301" width="0.0558%" height="15" fill="rgb(222,35,25)"/><text x="53.2896%" y="1311.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (6 samples, 0.33%)</title><rect x="52.8165%" y="1429" width="0.3346%" height="15" fill="rgb(207,92,16)"/><text x="53.0665%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (4 samples, 0.22%)</title><rect x="52.9281%" y="1413" width="0.2231%" height="15" fill="rgb(216,59,51)"/><text x="53.1781%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="53.0954%" y="1397" width="0.0558%" height="15" fill="rgb(213,80,28)"/><text x="53.3454%" y="1407.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="53.0954%" y="1381" width="0.0558%" height="15" fill="rgb(220,93,7)"/><text x="53.3454%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="53.2627%" y="1413" width="0.0558%" height="15" fill="rgb(225,24,44)"/><text x="53.5127%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="53.3185%" y="1413" width="0.0558%" height="15" fill="rgb(243,74,40)"/><text x="53.5685%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="53.3185%" y="1397" width="0.0558%" height="15" fill="rgb(228,39,7)"/><text x="53.5685%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="53.3185%" y="1381" width="0.0558%" height="15" fill="rgb(227,79,8)"/><text x="53.5685%" y="1391.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="53.3185%" y="1365" width="0.0558%" height="15" fill="rgb(236,58,11)"/><text x="53.5685%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="53.3185%" y="1349" width="0.0558%" height="15" fill="rgb(249,63,35)"/><text x="53.5685%" y="1359.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="53.3185%" y="1333" width="0.0558%" height="15" fill="rgb(252,114,16)"/><text x="53.5685%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="53.3185%" y="1317" width="0.0558%" height="15" fill="rgb(254,151,24)"/><text x="53.5685%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="53.3185%" y="1301" width="0.0558%" height="15" fill="rgb(253,54,39)"/><text x="53.5685%" y="1311.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="53.3185%" y="1285" width="0.0558%" height="15" fill="rgb(243,25,45)"/><text x="53.5685%" y="1295.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="53.3185%" y="1269" width="0.0558%" height="15" fill="rgb(234,134,9)"/><text x="53.5685%" y="1279.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (21 samples, 1.17%)</title><rect x="52.2588%" y="1445" width="1.1712%" height="15" fill="rgb(227,166,31)"/><text x="52.5088%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (5 samples, 0.28%)</title><rect x="53.1511%" y="1429" width="0.2789%" height="15" fill="rgb(245,143,41)"/><text x="53.4011%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="53.3742%" y="1413" width="0.0558%" height="15" fill="rgb(238,181,32)"/><text x="53.6242%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (33 samples, 1.84%)</title><rect x="51.6453%" y="1461" width="1.8405%" height="15" fill="rgb(224,113,18)"/><text x="51.8953%" y="1471.50">m..</text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="53.4300%" y="1445" width="0.0558%" height="15" fill="rgb(240,229,28)"/><text x="53.6800%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="53.4300%" y="1429" width="0.0558%" height="15" fill="rgb(250,185,3)"/><text x="53.6800%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="53.4300%" y="1413" width="0.0558%" height="15" fill="rgb(212,59,25)"/><text x="53.6800%" y="1423.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="53.4300%" y="1397" width="0.0558%" height="15" fill="rgb(221,87,20)"/><text x="53.6800%" y="1407.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="53.4300%" y="1381" width="0.0558%" height="15" fill="rgb(213,74,28)"/><text x="53.6800%" y="1391.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="53.4300%" y="1365" width="0.0558%" height="15" fill="rgb(224,132,34)"/><text x="53.6800%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (134 samples, 7.47%)</title><rect x="46.0680%" y="1541" width="7.4735%" height="15" fill="rgb(222,101,24)"/><text x="46.3180%" y="1551.50">core::iter..</text></g><g><title>mbe::MacroDef::expand (127 samples, 7.08%)</title><rect x="46.4584%" y="1525" width="7.0831%" height="15" fill="rgb(254,142,4)"/><text x="46.7084%" y="1535.50">mbe::Macro..</text></g><g><title>mbe::expander::expand_rules (123 samples, 6.86%)</title><rect x="46.6815%" y="1509" width="6.8600%" height="15" fill="rgb(230,229,49)"/><text x="46.9315%" y="1519.50">mbe::expa..</text></g><g><title>mbe::expander::transcriber::transcribe (67 samples, 3.74%)</title><rect x="49.8048%" y="1493" width="3.7368%" height="15" fill="rgb(238,70,47)"/><text x="50.0548%" y="1503.50">mbe:..</text></g><g><title>mbe::expander::transcriber::expand_subtree (66 samples, 3.68%)</title><rect x="49.8606%" y="1477" width="3.6810%" height="15" fill="rgb(231,160,17)"/><text x="50.1106%" y="1487.50">mbe:..</text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="53.4858%" y="1461" width="0.0558%" height="15" fill="rgb(218,68,53)"/><text x="53.7358%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="53.4858%" y="1445" width="0.0558%" height="15" fill="rgb(236,111,10)"/><text x="53.7358%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="53.4858%" y="1429" width="0.0558%" height="15" fill="rgb(224,34,41)"/><text x="53.7358%" y="1439.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="53.4858%" y="1413" width="0.0558%" height="15" fill="rgb(241,118,19)"/><text x="53.7358%" y="1423.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="53.4858%" y="1397" width="0.0558%" height="15" fill="rgb(238,129,25)"/><text x="53.7358%" y="1407.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="53.4858%" y="1381" width="0.0558%" height="15" fill="rgb(238,22,31)"/><text x="53.7358%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (4 samples, 0.22%)</title><rect x="53.5416%" y="1541" width="0.2231%" height="15" fill="rgb(222,174,48)"/><text x="53.7916%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (3 samples, 0.17%)</title><rect x="53.5973%" y="1525" width="0.1673%" height="15" fill="rgb(206,152,40)"/><text x="53.8473%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="53.6531%" y="1509" width="0.1115%" height="15" fill="rgb(218,99,54)"/><text x="53.9031%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="53.7646%" y="1525" width="0.1115%" height="15" fill="rgb(220,174,26)"/><text x="54.0146%" y="1535.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="53.7646%" y="1509" width="0.1115%" height="15" fill="rgb(245,116,9)"/><text x="54.0146%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="53.8204%" y="1493" width="0.0558%" height="15" fill="rgb(209,72,35)"/><text x="54.0704%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (3 samples, 0.17%)</title><rect x="53.8762%" y="1525" width="0.1673%" height="15" fill="rgb(226,126,21)"/><text x="54.1262%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (1 samples, 0.06%)</title><rect x="54.0435%" y="1493" width="0.0558%" height="15" fill="rgb(227,192,1)"/><text x="54.2935%" y="1503.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="54.0435%" y="1477" width="0.0558%" height="15" fill="rgb(237,180,29)"/><text x="54.2935%" y="1487.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="54.0435%" y="1461" width="0.0558%" height="15" fill="rgb(230,197,35)"/><text x="54.2935%" y="1471.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="54.0435%" y="1509" width="0.1115%" height="15" fill="rgb(246,193,31)"/><text x="54.2935%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="54.0993%" y="1493" width="0.0558%" height="15" fill="rgb(241,36,4)"/><text x="54.3493%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="54.0993%" y="1477" width="0.0558%" height="15" fill="rgb(241,130,17)"/><text x="54.3493%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="54.0993%" y="1461" width="0.0558%" height="15" fill="rgb(206,137,32)"/><text x="54.3493%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="54.3224%" y="1493" width="0.1115%" height="15" fill="rgb(237,228,51)"/><text x="54.5724%" y="1503.50"></text></g><g><title>&lt;mbe::expander::matcher::MatchState as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="54.4339%" y="1493" width="0.2231%" height="15" fill="rgb(243,6,42)"/><text x="54.6839%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.17%)</title><rect x="54.4897%" y="1477" width="0.1673%" height="15" fill="rgb(251,74,28)"/><text x="54.7397%" y="1487.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="54.5455%" y="1461" width="0.1115%" height="15" fill="rgb(218,20,49)"/><text x="54.7955%" y="1471.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="54.6570%" y="1493" width="0.0558%" height="15" fill="rgb(238,28,14)"/><text x="54.9070%" y="1503.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.06%)</title><rect x="54.6570%" y="1477" width="0.0558%" height="15" fill="rgb(229,40,46)"/><text x="54.9070%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="54.6570%" y="1461" width="0.0558%" height="15" fill="rgb(244,195,20)"/><text x="54.9070%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="54.6570%" y="1445" width="0.0558%" height="15" fill="rgb(253,56,35)"/><text x="54.9070%" y="1455.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="54.6570%" y="1429" width="0.0558%" height="15" fill="rgb(210,149,44)"/><text x="54.9070%" y="1439.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="54.7128%" y="1493" width="0.0558%" height="15" fill="rgb(240,135,12)"/><text x="54.9628%" y="1503.50"></text></g><g><title>__GI___libc_free (5 samples, 0.28%)</title><rect x="54.7685%" y="1493" width="0.2789%" height="15" fill="rgb(251,24,50)"/><text x="55.0185%" y="1503.50"></text></g><g><title>_int_free (4 samples, 0.22%)</title><rect x="54.8243%" y="1477" width="0.2231%" height="15" fill="rgb(243,200,47)"/><text x="55.0743%" y="1487.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.17%)</title><rect x="55.0474%" y="1493" width="0.1673%" height="15" fill="rgb(224,166,26)"/><text x="55.2974%" y="1503.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="55.2147%" y="1493" width="0.0558%" height="15" fill="rgb(233,0,47)"/><text x="55.4647%" y="1503.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="55.2705%" y="1493" width="0.0558%" height="15" fill="rgb(253,80,5)"/><text x="55.5205%" y="1503.50"></text></g><g><title>__rust_dealloc (1 samples, 0.06%)</title><rect x="55.3263%" y="1493" width="0.0558%" height="15" fill="rgb(214,133,25)"/><text x="55.5763%" y="1503.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.06%)</title><rect x="55.3820%" y="1477" width="0.0558%" height="15" fill="rgb(209,27,14)"/><text x="55.6320%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.06%)</title><rect x="55.3820%" y="1461" width="0.0558%" height="15" fill="rgb(219,102,51)"/><text x="55.6320%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="55.3820%" y="1445" width="0.0558%" height="15" fill="rgb(237,18,16)"/><text x="55.6320%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="55.3820%" y="1429" width="0.0558%" height="15" fill="rgb(241,85,17)"/><text x="55.6320%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="55.3820%" y="1413" width="0.0558%" height="15" fill="rgb(236,90,42)"/><text x="55.6320%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="55.3820%" y="1397" width="0.0558%" height="15" fill="rgb(249,57,21)"/><text x="55.6320%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="55.3820%" y="1381" width="0.0558%" height="15" fill="rgb(243,12,36)"/><text x="55.6320%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="55.3820%" y="1365" width="0.0558%" height="15" fill="rgb(253,128,47)"/><text x="55.6320%" y="1375.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="55.3820%" y="1349" width="0.0558%" height="15" fill="rgb(207,33,20)"/><text x="55.6320%" y="1359.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.17%)</title><rect x="55.3820%" y="1493" width="0.1673%" height="15" fill="rgb(233,215,35)"/><text x="55.6320%" y="1503.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.11%)</title><rect x="55.4378%" y="1477" width="0.1115%" height="15" fill="rgb(249,188,52)"/><text x="55.6878%" y="1487.50"></text></g><g><title>core::fmt::write (2 samples, 0.11%)</title><rect x="55.4378%" y="1461" width="0.1115%" height="15" fill="rgb(225,12,32)"/><text x="55.6878%" y="1471.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="55.4936%" y="1445" width="0.0558%" height="15" fill="rgb(247,98,14)"/><text x="55.7436%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="55.4936%" y="1429" width="0.0558%" height="15" fill="rgb(247,219,48)"/><text x="55.7436%" y="1439.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.06%)</title><rect x="55.4936%" y="1413" width="0.0558%" height="15" fill="rgb(253,60,48)"/><text x="55.7436%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="55.4936%" y="1397" width="0.0558%" height="15" fill="rgb(245,15,52)"/><text x="55.7436%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="55.4936%" y="1381" width="0.0558%" height="15" fill="rgb(220,133,28)"/><text x="55.7436%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="55.4936%" y="1365" width="0.0558%" height="15" fill="rgb(217,180,4)"/><text x="55.7436%" y="1375.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="55.4936%" y="1349" width="0.0558%" height="15" fill="rgb(251,24,1)"/><text x="55.7436%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::ExpandError&gt; (1 samples, 0.06%)</title><rect x="55.5494%" y="1493" width="0.0558%" height="15" fill="rgb(212,185,49)"/><text x="55.7994%" y="1503.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="55.6609%" y="1461" width="0.1673%" height="15" fill="rgb(215,175,22)"/><text x="55.9109%" y="1471.50"></text></g><g><title>_int_free (3 samples, 0.17%)</title><rect x="55.6609%" y="1445" width="0.1673%" height="15" fill="rgb(250,205,14)"/><text x="55.9109%" y="1455.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="55.8282%" y="1445" width="0.1673%" height="15" fill="rgb(225,211,22)"/><text x="56.0782%" y="1455.50"></text></g><g><title>_int_free (3 samples, 0.17%)</title><rect x="55.8282%" y="1429" width="0.1673%" height="15" fill="rgb(251,179,42)"/><text x="56.0782%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="55.9955%" y="1445" width="0.0558%" height="15" fill="rgb(208,216,51)"/><text x="56.2455%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (5 samples, 0.28%)</title><rect x="55.8282%" y="1461" width="0.2789%" height="15" fill="rgb(235,36,11)"/><text x="56.0782%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="56.0513%" y="1445" width="0.0558%" height="15" fill="rgb(213,189,28)"/><text x="56.3013%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="56.1629%" y="1429" width="0.0558%" height="15" fill="rgb(227,203,42)"/><text x="56.4129%" y="1439.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="56.1629%" y="1413" width="0.0558%" height="15" fill="rgb(244,72,36)"/><text x="56.4129%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="56.1071%" y="1445" width="0.1673%" height="15" fill="rgb(213,53,17)"/><text x="56.3571%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="56.2186%" y="1429" width="0.0558%" height="15" fill="rgb(207,167,3)"/><text x="56.4686%" y="1439.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.73%)</title><rect x="55.6051%" y="1477" width="0.7250%" height="15" fill="rgb(216,98,30)"/><text x="55.8551%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (4 samples, 0.22%)</title><rect x="56.1071%" y="1461" width="0.2231%" height="15" fill="rgb(236,123,15)"/><text x="56.3571%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="56.2744%" y="1445" width="0.0558%" height="15" fill="rgb(248,81,50)"/><text x="56.5244%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="56.3302%" y="1477" width="0.0558%" height="15" fill="rgb(214,120,4)"/><text x="56.5802%" y="1487.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="56.3302%" y="1461" width="0.0558%" height="15" fill="rgb(208,179,34)"/><text x="56.5802%" y="1471.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="56.4417%" y="1445" width="0.1115%" height="15" fill="rgb(227,140,7)"/><text x="56.6917%" y="1455.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="56.4417%" y="1429" width="0.1115%" height="15" fill="rgb(214,22,6)"/><text x="56.6917%" y="1439.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="56.4975%" y="1413" width="0.0558%" height="15" fill="rgb(207,137,27)"/><text x="56.7475%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="56.5533%" y="1429" width="0.1673%" height="15" fill="rgb(210,8,46)"/><text x="56.8033%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="56.6090%" y="1413" width="0.1115%" height="15" fill="rgb(240,16,54)"/><text x="56.8590%" y="1423.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.39%)</title><rect x="56.3859%" y="1461" width="0.3904%" height="15" fill="rgb(211,209,29)"/><text x="56.6359%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (4 samples, 0.22%)</title><rect x="56.5533%" y="1445" width="0.2231%" height="15" fill="rgb(226,228,24)"/><text x="56.8033%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="56.7206%" y="1429" width="0.0558%" height="15" fill="rgb(222,84,9)"/><text x="56.9706%" y="1439.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="56.7764%" y="1461" width="0.0558%" height="15" fill="rgb(234,203,30)"/><text x="57.0264%" y="1471.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="56.7764%" y="1445" width="0.0558%" height="15" fill="rgb(238,109,14)"/><text x="57.0264%" y="1455.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="56.8321%" y="1429" width="0.0558%" height="15" fill="rgb(233,206,34)"/><text x="57.0821%" y="1439.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="56.8321%" y="1413" width="0.0558%" height="15" fill="rgb(220,167,47)"/><text x="57.0821%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smol_str::SmolStr,mbe::expander::Binding)&gt; (1 samples, 0.06%)</title><rect x="56.8879%" y="1429" width="0.0558%" height="15" fill="rgb(238,105,10)"/><text x="57.1379%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="56.8879%" y="1413" width="0.0558%" height="15" fill="rgb(213,227,17)"/><text x="57.1379%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="56.8879%" y="1397" width="0.0558%" height="15" fill="rgb(217,132,38)"/><text x="57.1379%" y="1407.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="56.9437%" y="1413" width="0.0558%" height="15" fill="rgb(242,146,4)"/><text x="57.1937%" y="1423.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="56.9437%" y="1397" width="0.0558%" height="15" fill="rgb(212,61,9)"/><text x="57.1937%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (1 samples, 0.06%)</title><rect x="56.9994%" y="1397" width="0.0558%" height="15" fill="rgb(247,126,22)"/><text x="57.2494%" y="1407.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.28%)</title><rect x="56.8321%" y="1445" width="0.2789%" height="15" fill="rgb(220,196,2)"/><text x="57.0821%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (3 samples, 0.17%)</title><rect x="56.9437%" y="1429" width="0.1673%" height="15" fill="rgb(208,46,4)"/><text x="57.1937%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::Binding&gt; (2 samples, 0.11%)</title><rect x="56.9994%" y="1413" width="0.1115%" height="15" fill="rgb(252,104,46)"/><text x="57.2494%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (1 samples, 0.06%)</title><rect x="57.0552%" y="1397" width="0.0558%" height="15" fill="rgb(237,152,48)"/><text x="57.3052%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (28 samples, 1.56%)</title><rect x="55.6051%" y="1493" width="1.5616%" height="15" fill="rgb(221,59,37)"/><text x="55.8551%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (14 samples, 0.78%)</title><rect x="56.3859%" y="1477" width="0.7808%" height="15" fill="rgb(209,202,51)"/><text x="56.6359%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (6 samples, 0.33%)</title><rect x="56.8321%" y="1461" width="0.3346%" height="15" fill="rgb(228,81,30)"/><text x="57.0821%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;mbe::expander::matcher::MatchState&gt; (1 samples, 0.06%)</title><rect x="57.1110%" y="1445" width="0.0558%" height="15" fill="rgb(227,42,39)"/><text x="57.3610%" y="1455.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="57.1110%" y="1429" width="0.0558%" height="15" fill="rgb(221,26,2)"/><text x="57.3610%" y="1439.50"></text></g><g><title>mbe::expander::matcher::match_ (55 samples, 3.07%)</title><rect x="54.1550%" y="1509" width="3.0675%" height="15" fill="rgb(254,61,31)"/><text x="54.4050%" y="1519.50">mbe..</text></g><g><title>mbe::expander::matcher::match_loop_inner (1 samples, 0.06%)</title><rect x="57.1668%" y="1493" width="0.0558%" height="15" fill="rgb(222,173,38)"/><text x="57.4168%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="57.2225%" y="1477" width="0.0558%" height="15" fill="rgb(218,50,12)"/><text x="57.4725%" y="1487.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (2 samples, 0.11%)</title><rect x="57.2783%" y="1477" width="0.1115%" height="15" fill="rgb(223,88,40)"/><text x="57.5283%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="57.3898%" y="1461" width="0.0558%" height="15" fill="rgb(237,54,19)"/><text x="57.6398%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="57.3898%" y="1445" width="0.0558%" height="15" fill="rgb(251,129,25)"/><text x="57.6398%" y="1455.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="57.3898%" y="1429" width="0.0558%" height="15" fill="rgb(238,97,19)"/><text x="57.6398%" y="1439.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="57.3898%" y="1413" width="0.0558%" height="15" fill="rgb(240,169,18)"/><text x="57.6398%" y="1423.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="57.3898%" y="1397" width="0.0558%" height="15" fill="rgb(230,187,49)"/><text x="57.6398%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="57.5572%" y="1445" width="0.0558%" height="15" fill="rgb(209,44,26)"/><text x="57.8072%" y="1455.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="57.5572%" y="1429" width="0.0558%" height="15" fill="rgb(244,0,6)"/><text x="57.8072%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="57.5572%" y="1413" width="0.0558%" height="15" fill="rgb(248,18,21)"/><text x="57.8072%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.06%)</title><rect x="57.5572%" y="1397" width="0.0558%" height="15" fill="rgb(245,180,19)"/><text x="57.8072%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.06%)</title><rect x="57.5572%" y="1381" width="0.0558%" height="15" fill="rgb(252,118,36)"/><text x="57.8072%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.06%)</title><rect x="57.5572%" y="1365" width="0.0558%" height="15" fill="rgb(210,224,19)"/><text x="57.8072%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.06%)</title><rect x="57.5572%" y="1349" width="0.0558%" height="15" fill="rgb(218,30,24)"/><text x="57.8072%" y="1359.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="57.5572%" y="1333" width="0.0558%" height="15" fill="rgb(219,75,50)"/><text x="57.8072%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="57.6687%" y="1413" width="0.0558%" height="15" fill="rgb(234,72,50)"/><text x="57.9187%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="57.6687%" y="1397" width="0.0558%" height="15" fill="rgb(219,100,48)"/><text x="57.9187%" y="1407.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="57.6687%" y="1381" width="0.0558%" height="15" fill="rgb(253,5,41)"/><text x="57.9187%" y="1391.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="57.6687%" y="1365" width="0.0558%" height="15" fill="rgb(247,181,11)"/><text x="57.9187%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="57.6687%" y="1349" width="0.0558%" height="15" fill="rgb(222,223,25)"/><text x="57.9187%" y="1359.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="57.6687%" y="1333" width="0.0558%" height="15" fill="rgb(214,198,28)"/><text x="57.9187%" y="1343.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="57.6129%" y="1445" width="0.1673%" height="15" fill="rgb(230,46,43)"/><text x="57.8629%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="57.6687%" y="1429" width="0.1115%" height="15" fill="rgb(233,65,53)"/><text x="57.9187%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="57.7245%" y="1413" width="0.0558%" height="15" fill="rgb(221,121,27)"/><text x="57.9745%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="57.7245%" y="1397" width="0.0558%" height="15" fill="rgb(247,70,47)"/><text x="57.9745%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="57.9476%" y="1429" width="0.2231%" height="15" fill="rgb(228,85,35)"/><text x="58.1976%" y="1439.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="58.1149%" y="1413" width="0.0558%" height="15" fill="rgb(209,50,18)"/><text x="58.3649%" y="1423.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="58.1707%" y="1429" width="0.0558%" height="15" fill="rgb(250,19,35)"/><text x="58.4207%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (2 samples, 0.11%)</title><rect x="58.2264%" y="1429" width="0.1115%" height="15" fill="rgb(253,107,29)"/><text x="58.4764%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="58.2822%" y="1413" width="0.0558%" height="15" fill="rgb(252,179,29)"/><text x="58.5322%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="58.2822%" y="1397" width="0.0558%" height="15" fill="rgb(238,194,6)"/><text x="58.5322%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="58.2822%" y="1381" width="0.0558%" height="15" fill="rgb(238,164,29)"/><text x="58.5322%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="58.2822%" y="1365" width="0.0558%" height="15" fill="rgb(224,25,9)"/><text x="58.5322%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="58.7284%" y="1413" width="0.2231%" height="15" fill="rgb(244,153,23)"/><text x="58.9784%" y="1423.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="58.8399%" y="1397" width="0.1115%" height="15" fill="rgb(212,203,14)"/><text x="59.0899%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="58.8957%" y="1381" width="0.0558%" height="15" fill="rgb(220,164,20)"/><text x="59.1457%" y="1391.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="58.8957%" y="1365" width="0.0558%" height="15" fill="rgb(222,203,48)"/><text x="59.1457%" y="1375.50"></text></g><g><title>__GI___mprotect (1 samples, 0.06%)</title><rect x="58.8957%" y="1349" width="0.0558%" height="15" fill="rgb(215,159,22)"/><text x="59.1457%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1333" width="0.0558%" height="15" fill="rgb(216,183,47)"/><text x="59.1457%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1317" width="0.0558%" height="15" fill="rgb(229,195,25)"/><text x="59.1457%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1301" width="0.0558%" height="15" fill="rgb(224,132,51)"/><text x="59.1457%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1285" width="0.0558%" height="15" fill="rgb(240,63,7)"/><text x="59.1457%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1269" width="0.0558%" height="15" fill="rgb(249,182,41)"/><text x="59.1457%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1253" width="0.0558%" height="15" fill="rgb(243,47,26)"/><text x="59.1457%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1237" width="0.0558%" height="15" fill="rgb(233,48,2)"/><text x="59.1457%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1221" width="0.0558%" height="15" fill="rgb(244,165,34)"/><text x="59.1457%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1205" width="0.0558%" height="15" fill="rgb(207,89,7)"/><text x="59.1457%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="58.8957%" y="1189" width="0.0558%" height="15" fill="rgb(244,117,36)"/><text x="59.1457%" y="1199.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="58.9515%" y="1413" width="0.0558%" height="15" fill="rgb(226,144,34)"/><text x="59.2015%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="59.0073%" y="1413" width="0.0558%" height="15" fill="rgb(213,23,19)"/><text x="59.2573%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="59.0630%" y="1413" width="0.0558%" height="15" fill="rgb(217,75,12)"/><text x="59.3130%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="59.0630%" y="1397" width="0.0558%" height="15" fill="rgb(224,159,17)"/><text x="59.3130%" y="1407.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="59.0630%" y="1381" width="0.0558%" height="15" fill="rgb(217,118,1)"/><text x="59.3130%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="59.2303%" y="1397" width="0.2231%" height="15" fill="rgb(232,180,48)"/><text x="59.4803%" y="1407.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.17%)</title><rect x="59.2861%" y="1381" width="0.1673%" height="15" fill="rgb(230,27,33)"/><text x="59.5361%" y="1391.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="59.3977%" y="1365" width="0.0558%" height="15" fill="rgb(205,31,21)"/><text x="59.6477%" y="1375.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="59.4534%" y="1397" width="0.0558%" height="15" fill="rgb(253,59,4)"/><text x="59.7034%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="59.4534%" y="1381" width="0.0558%" height="15" fill="rgb(224,201,9)"/><text x="59.7034%" y="1391.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (40 samples, 2.23%)</title><rect x="57.3898%" y="1477" width="2.2309%" height="15" fill="rgb(229,206,30)"/><text x="57.6398%" y="1487.50">m..</text></g><g><title>mbe::expander::transcriber::expand_subtree (39 samples, 2.18%)</title><rect x="57.4456%" y="1461" width="2.1751%" height="15" fill="rgb(212,67,47)"/><text x="57.6956%" y="1471.50">m..</text></g><g><title>mbe::expander::transcriber::expand_subtree (33 samples, 1.84%)</title><rect x="57.7803%" y="1445" width="1.8405%" height="15" fill="rgb(211,96,50)"/><text x="58.0303%" y="1455.50">m..</text></g><g><title>mbe::expander::transcriber::expand_subtree (23 samples, 1.28%)</title><rect x="58.3380%" y="1429" width="1.2828%" height="15" fill="rgb(252,114,18)"/><text x="58.5880%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (9 samples, 0.50%)</title><rect x="59.1188%" y="1413" width="0.5020%" height="15" fill="rgb(223,58,37)"/><text x="59.3688%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="59.5092%" y="1397" width="0.1115%" height="15" fill="rgb(237,70,4)"/><text x="59.7592%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="59.5650%" y="1381" width="0.0558%" height="15" fill="rgb(244,85,46)"/><text x="59.8150%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="59.7323%" y="1461" width="0.0558%" height="15" fill="rgb(223,39,52)"/><text x="59.9823%" y="1471.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="59.7881%" y="1445" width="0.0558%" height="15" fill="rgb(218,200,14)"/><text x="60.0381%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="59.8438%" y="1429" width="0.0558%" height="15" fill="rgb(208,171,16)"/><text x="60.0938%" y="1439.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="59.8438%" y="1413" width="0.0558%" height="15" fill="rgb(234,200,18)"/><text x="60.0938%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="59.7881%" y="1461" width="0.1673%" height="15" fill="rgb(228,45,11)"/><text x="60.0381%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="59.8438%" y="1445" width="0.1115%" height="15" fill="rgb(237,182,11)"/><text x="60.0938%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="59.8996%" y="1429" width="0.0558%" height="15" fill="rgb(241,175,49)"/><text x="60.1496%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="59.8996%" y="1413" width="0.0558%" height="15" fill="rgb(247,38,35)"/><text x="60.1496%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="59.8996%" y="1397" width="0.0558%" height="15" fill="rgb(228,39,49)"/><text x="60.1496%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="59.8996%" y="1381" width="0.0558%" height="15" fill="rgb(226,101,26)"/><text x="60.1496%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.17%)</title><rect x="60.2900%" y="1445" width="0.1673%" height="15" fill="rgb(206,141,19)"/><text x="60.5400%" y="1455.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="60.4016%" y="1429" width="0.0558%" height="15" fill="rgb(211,200,13)"/><text x="60.6516%" y="1439.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Subtree&gt;&gt;::from (1 samples, 0.06%)</title><rect x="60.4573%" y="1445" width="0.0558%" height="15" fill="rgb(241,121,6)"/><text x="60.7073%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="60.5131%" y="1445" width="0.0558%" height="15" fill="rgb(234,221,29)"/><text x="60.7631%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="60.5131%" y="1429" width="0.0558%" height="15" fill="rgb(229,136,5)"/><text x="60.7631%" y="1439.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="60.5131%" y="1413" width="0.0558%" height="15" fill="rgb(238,36,11)"/><text x="60.7631%" y="1423.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="60.5131%" y="1397" width="0.0558%" height="15" fill="rgb(251,55,41)"/><text x="60.7631%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="60.5131%" y="1381" width="0.0558%" height="15" fill="rgb(242,34,40)"/><text x="60.7631%" y="1391.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="60.5689%" y="1429" width="0.0558%" height="15" fill="rgb(215,42,17)"/><text x="60.8189%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="60.6247%" y="1429" width="0.0558%" height="15" fill="rgb(207,44,46)"/><text x="60.8747%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="60.6247%" y="1413" width="0.0558%" height="15" fill="rgb(211,206,28)"/><text x="60.8747%" y="1423.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="60.6247%" y="1397" width="0.0558%" height="15" fill="rgb(237,167,16)"/><text x="60.8747%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (4 samples, 0.22%)</title><rect x="60.5689%" y="1445" width="0.2231%" height="15" fill="rgb(233,66,6)"/><text x="60.8189%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (2 samples, 0.11%)</title><rect x="60.6804%" y="1429" width="0.1115%" height="15" fill="rgb(246,123,29)"/><text x="60.9304%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="60.7362%" y="1413" width="0.0558%" height="15" fill="rgb(209,62,40)"/><text x="60.9862%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="60.7362%" y="1397" width="0.0558%" height="15" fill="rgb(218,4,25)"/><text x="60.9862%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="60.9593%" y="1429" width="0.1115%" height="15" fill="rgb(253,91,49)"/><text x="61.2093%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="61.0151%" y="1413" width="0.0558%" height="15" fill="rgb(228,155,29)"/><text x="61.2651%" y="1423.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="61.0151%" y="1397" width="0.0558%" height="15" fill="rgb(243,57,37)"/><text x="61.2651%" y="1407.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="61.1266%" y="1413" width="0.0558%" height="15" fill="rgb(244,167,17)"/><text x="61.3766%" y="1423.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="61.1266%" y="1397" width="0.0558%" height="15" fill="rgb(207,181,38)"/><text x="61.3766%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (3 samples, 0.17%)</title><rect x="61.0708%" y="1429" width="0.1673%" height="15" fill="rgb(211,8,23)"/><text x="61.3208%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="61.1824%" y="1413" width="0.0558%" height="15" fill="rgb(235,11,44)"/><text x="61.4324%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="61.1824%" y="1397" width="0.0558%" height="15" fill="rgb(248,18,52)"/><text x="61.4324%" y="1407.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="61.1824%" y="1381" width="0.0558%" height="15" fill="rgb(208,4,7)"/><text x="61.4324%" y="1391.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="61.1824%" y="1365" width="0.0558%" height="15" fill="rgb(240,17,39)"/><text x="61.4324%" y="1375.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="61.1824%" y="1349" width="0.0558%" height="15" fill="rgb(207,170,3)"/><text x="61.4324%" y="1359.50"></text></g><g><title>mbe::expander::transcriber::expand_repeat (1 samples, 0.06%)</title><rect x="61.3497%" y="1413" width="0.0558%" height="15" fill="rgb(236,100,52)"/><text x="61.5997%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="61.3497%" y="1397" width="0.0558%" height="15" fill="rgb(246,78,51)"/><text x="61.5997%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::&lt;impl mbe::expander::Bindings&gt;::get (1 samples, 0.06%)</title><rect x="61.3497%" y="1381" width="0.0558%" height="15" fill="rgb(211,17,15)"/><text x="61.5997%" y="1391.50"></text></g><g><title>&lt;smol_str::SmolStr as core::cmp::PartialEq&lt;str&gt;&gt;::eq (1 samples, 0.06%)</title><rect x="61.3497%" y="1365" width="0.0558%" height="15" fill="rgb(209,59,46)"/><text x="61.5997%" y="1375.50"></text></g><g><title>smol_str::SmolStr::as_str (1 samples, 0.06%)</title><rect x="61.3497%" y="1349" width="0.0558%" height="15" fill="rgb(210,92,25)"/><text x="61.5997%" y="1359.50"></text></g><g><title>smol_str::Repr::as_str (1 samples, 0.06%)</title><rect x="61.3497%" y="1333" width="0.0558%" height="15" fill="rgb(238,174,52)"/><text x="61.5997%" y="1343.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (4 samples, 0.22%)</title><rect x="61.2381%" y="1429" width="0.2231%" height="15" fill="rgb(230,73,7)"/><text x="61.4881%" y="1439.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="61.4055%" y="1413" width="0.0558%" height="15" fill="rgb(243,124,40)"/><text x="61.6555%" y="1423.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (1 samples, 0.06%)</title><rect x="61.4055%" y="1397" width="0.0558%" height="15" fill="rgb(244,170,11)"/><text x="61.6555%" y="1407.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (13 samples, 0.73%)</title><rect x="60.7920%" y="1445" width="0.7250%" height="15" fill="rgb(207,114,54)"/><text x="61.0420%" y="1455.50"></text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="61.4612%" y="1429" width="0.0558%" height="15" fill="rgb(205,42,20)"/><text x="61.7112%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="61.4612%" y="1413" width="0.0558%" height="15" fill="rgb(230,30,28)"/><text x="61.7112%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="61.4612%" y="1397" width="0.0558%" height="15" fill="rgb(205,73,54)"/><text x="61.7112%" y="1407.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="61.4612%" y="1381" width="0.0558%" height="15" fill="rgb(254,227,23)"/><text x="61.7112%" y="1391.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="61.4612%" y="1365" width="0.0558%" height="15" fill="rgb(228,202,34)"/><text x="61.7112%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="61.4612%" y="1349" width="0.0558%" height="15" fill="rgb(222,225,37)"/><text x="61.7112%" y="1359.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="61.4612%" y="1333" width="0.0558%" height="15" fill="rgb(221,14,54)"/><text x="61.7112%" y="1343.50"></text></g><g><title>mbe::expander::transcriber::expand_subtree (29 samples, 1.62%)</title><rect x="59.9554%" y="1461" width="1.6174%" height="15" fill="rgb(254,102,2)"/><text x="60.2054%" y="1471.50"></text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="61.5170%" y="1445" width="0.0558%" height="15" fill="rgb(232,104,17)"/><text x="61.7670%" y="1455.50"></text></g><g><title>mbe::MacroDef::expand (141 samples, 7.86%)</title><rect x="53.7646%" y="1541" width="7.8639%" height="15" fill="rgb(250,220,14)"/><text x="54.0146%" y="1551.50">mbe::MacroD..</text></g><g><title>mbe::expander::expand_rules (136 samples, 7.59%)</title><rect x="54.0435%" y="1525" width="7.5851%" height="15" fill="rgb(241,158,9)"/><text x="54.2935%" y="1535.50">mbe::expan..</text></g><g><title>mbe::expander::transcriber::transcribe (79 samples, 4.41%)</title><rect x="57.2225%" y="1509" width="4.4060%" height="15" fill="rgb(246,9,43)"/><text x="57.4725%" y="1519.50">mbe::..</text></g><g><title>mbe::expander::transcriber::expand_subtree (79 samples, 4.41%)</title><rect x="57.2225%" y="1493" width="4.4060%" height="15" fill="rgb(206,73,33)"/><text x="57.4725%" y="1503.50">mbe::..</text></g><g><title>mbe::expander::transcriber::expand_subtree (36 samples, 2.01%)</title><rect x="59.6207%" y="1477" width="2.0078%" height="15" fill="rgb(222,79,8)"/><text x="59.8707%" y="1487.50">m..</text></g><g><title>mbe::expander::transcriber::push_fragment (1 samples, 0.06%)</title><rect x="61.5728%" y="1461" width="0.0558%" height="15" fill="rgb(234,8,54)"/><text x="61.8228%" y="1471.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="61.5728%" y="1445" width="0.0558%" height="15" fill="rgb(209,134,38)"/><text x="61.8228%" y="1455.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="61.5728%" y="1429" width="0.0558%" height="15" fill="rgb(230,127,29)"/><text x="61.8228%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="61.7959%" y="1525" width="0.0558%" height="15" fill="rgb(242,44,41)"/><text x="62.0459%" y="1535.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="61.7959%" y="1509" width="0.0558%" height="15" fill="rgb(222,56,43)"/><text x="62.0459%" y="1519.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="61.7959%" y="1493" width="0.0558%" height="15" fill="rgb(238,39,47)"/><text x="62.0459%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="61.8516%" y="1509" width="0.0558%" height="15" fill="rgb(226,79,43)"/><text x="62.1016%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="61.8516%" y="1493" width="0.0558%" height="15" fill="rgb(242,105,53)"/><text x="62.1016%" y="1503.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="61.8516%" y="1477" width="0.0558%" height="15" fill="rgb(251,132,46)"/><text x="62.1016%" y="1487.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="61.8516%" y="1461" width="0.0558%" height="15" fill="rgb(231,77,14)"/><text x="62.1016%" y="1471.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="61.8516%" y="1445" width="0.0558%" height="15" fill="rgb(240,135,9)"/><text x="62.1016%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="61.9074%" y="1493" width="0.0558%" height="15" fill="rgb(248,109,14)"/><text x="62.1574%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="61.9074%" y="1477" width="0.0558%" height="15" fill="rgb(227,146,52)"/><text x="62.1574%" y="1487.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="61.9074%" y="1461" width="0.0558%" height="15" fill="rgb(232,54,3)"/><text x="62.1574%" y="1471.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="61.9074%" y="1445" width="0.0558%" height="15" fill="rgb(229,201,43)"/><text x="62.1574%" y="1455.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (8 samples, 0.45%)</title><rect x="61.6286%" y="1541" width="0.4462%" height="15" fill="rgb(252,161,33)"/><text x="61.8786%" y="1551.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (4 samples, 0.22%)</title><rect x="61.8516%" y="1525" width="0.2231%" height="15" fill="rgb(226,146,40)"/><text x="62.1016%" y="1535.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (3 samples, 0.17%)</title><rect x="61.9074%" y="1509" width="0.1673%" height="15" fill="rgb(219,47,25)"/><text x="62.1574%" y="1519.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (2 samples, 0.11%)</title><rect x="61.9632%" y="1493" width="0.1115%" height="15" fill="rgb(250,135,13)"/><text x="62.2132%" y="1503.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (1 samples, 0.06%)</title><rect x="62.0190%" y="1477" width="0.0558%" height="15" fill="rgb(219,229,18)"/><text x="62.2690%" y="1487.50"></text></g><g><title>mbe::benchmark::invocation_fixtures::collect_from_op (1 samples, 0.06%)</title><rect x="62.0190%" y="1461" width="0.0558%" height="15" fill="rgb(217,152,27)"/><text x="62.2690%" y="1471.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="62.0190%" y="1445" width="0.0558%" height="15" fill="rgb(225,71,47)"/><text x="62.2690%" y="1455.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="62.0747%" y="1477" width="0.0558%" height="15" fill="rgb(220,139,14)"/><text x="62.3247%" y="1487.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="62.0747%" y="1509" width="0.1115%" height="15" fill="rgb(247,54,32)"/><text x="62.3247%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.11%)</title><rect x="62.0747%" y="1493" width="0.1115%" height="15" fill="rgb(252,131,39)"/><text x="62.3247%" y="1503.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.06%)</title><rect x="62.1305%" y="1477" width="0.0558%" height="15" fill="rgb(210,108,39)"/><text x="62.3805%" y="1487.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child (1 samples, 0.06%)</title><rect x="62.1305%" y="1461" width="0.0558%" height="15" fill="rgb(205,23,29)"/><text x="62.3805%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.06%)</title><rect x="62.1305%" y="1445" width="0.0558%" height="15" fill="rgb(246,139,46)"/><text x="62.3805%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="62.1305%" y="1429" width="0.0558%" height="15" fill="rgb(250,81,26)"/><text x="62.3805%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.06%)</title><rect x="62.1305%" y="1413" width="0.0558%" height="15" fill="rgb(214,104,7)"/><text x="62.3805%" y="1423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="62.1305%" y="1397" width="0.0558%" height="15" fill="rgb(233,189,8)"/><text x="62.3805%" y="1407.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.06%)</title><rect x="62.1305%" y="1381" width="0.0558%" height="15" fill="rgb(228,141,17)"/><text x="62.3805%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.06%)</title><rect x="62.1305%" y="1365" width="0.0558%" height="15" fill="rgb(247,157,1)"/><text x="62.3805%" y="1375.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="62.1863%" y="1509" width="0.1115%" height="15" fill="rgb(249,225,5)"/><text x="62.4363%" y="1519.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="62.1863%" y="1493" width="0.1115%" height="15" fill="rgb(242,55,13)"/><text x="62.4363%" y="1503.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="62.4094%" y="1381" width="0.0558%" height="15" fill="rgb(230,49,50)"/><text x="62.6594%" y="1391.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (5 samples, 0.28%)</title><rect x="62.2978%" y="1445" width="0.2789%" height="15" fill="rgb(241,111,38)"/><text x="62.5478%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.28%)</title><rect x="62.2978%" y="1429" width="0.2789%" height="15" fill="rgb(252,155,4)"/><text x="62.5478%" y="1439.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (4 samples, 0.22%)</title><rect x="62.3536%" y="1413" width="0.2231%" height="15" fill="rgb(212,69,32)"/><text x="62.6036%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.22%)</title><rect x="62.3536%" y="1397" width="0.2231%" height="15" fill="rgb(243,107,47)"/><text x="62.6036%" y="1407.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="62.4651%" y="1381" width="0.1115%" height="15" fill="rgb(247,130,12)"/><text x="62.7151%" y="1391.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="62.4651%" y="1365" width="0.1115%" height="15" fill="rgb(233,74,16)"/><text x="62.7151%" y="1375.50"></text></g><g><title>sysmalloc (2 samples, 0.11%)</title><rect x="62.4651%" y="1349" width="0.1115%" height="15" fill="rgb(208,58,18)"/><text x="62.7151%" y="1359.50"></text></g><g><title>__GI___mprotect (2 samples, 0.11%)</title><rect x="62.4651%" y="1333" width="0.1115%" height="15" fill="rgb(242,225,1)"/><text x="62.7151%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="62.4651%" y="1317" width="0.1115%" height="15" fill="rgb(249,39,40)"/><text x="62.7151%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1301" width="0.0558%" height="15" fill="rgb(207,72,44)"/><text x="62.7709%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1285" width="0.0558%" height="15" fill="rgb(215,193,12)"/><text x="62.7709%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1269" width="0.0558%" height="15" fill="rgb(248,41,39)"/><text x="62.7709%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1253" width="0.0558%" height="15" fill="rgb(253,85,4)"/><text x="62.7709%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1237" width="0.0558%" height="15" fill="rgb(243,70,31)"/><text x="62.7709%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1221" width="0.0558%" height="15" fill="rgb(253,195,26)"/><text x="62.7709%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1205" width="0.0558%" height="15" fill="rgb(243,42,11)"/><text x="62.7709%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1189" width="0.0558%" height="15" fill="rgb(239,66,17)"/><text x="62.7709%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1173" width="0.0558%" height="15" fill="rgb(217,132,21)"/><text x="62.7709%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5209%" y="1157" width="0.0558%" height="15" fill="rgb(252,202,21)"/><text x="62.7709%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.33%)</title><rect x="62.2978%" y="1493" width="0.3346%" height="15" fill="rgb(233,98,36)"/><text x="62.5478%" y="1503.50"></text></g><g><title>&lt;tt::TokenTree as core::clone::Clone&gt;::clone (6 samples, 0.33%)</title><rect x="62.2978%" y="1477" width="0.3346%" height="15" fill="rgb(216,153,54)"/><text x="62.5478%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.33%)</title><rect x="62.2978%" y="1461" width="0.3346%" height="15" fill="rgb(250,99,7)"/><text x="62.5478%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="62.5767%" y="1445" width="0.0558%" height="15" fill="rgb(207,56,50)"/><text x="62.8267%" y="1455.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="62.5767%" y="1429" width="0.0558%" height="15" fill="rgb(244,61,34)"/><text x="62.8267%" y="1439.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="62.5767%" y="1413" width="0.0558%" height="15" fill="rgb(241,50,38)"/><text x="62.8267%" y="1423.50"></text></g><g><title>__GI___mprotect (1 samples, 0.06%)</title><rect x="62.5767%" y="1397" width="0.0558%" height="15" fill="rgb(212,166,30)"/><text x="62.8267%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="62.5767%" y="1381" width="0.0558%" height="15" fill="rgb(249,127,32)"/><text x="62.8267%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::TokenTree&gt; (2 samples, 0.11%)</title><rect x="62.6325%" y="1493" width="0.1115%" height="15" fill="rgb(209,103,0)"/><text x="62.8825%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="62.6325%" y="1477" width="0.1115%" height="15" fill="rgb(238,209,51)"/><text x="62.8825%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="62.6325%" y="1461" width="0.1115%" height="15" fill="rgb(237,56,23)"/><text x="62.8825%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="62.6325%" y="1445" width="0.1115%" height="15" fill="rgb(215,153,46)"/><text x="62.8825%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (2 samples, 0.11%)</title><rect x="62.6325%" y="1429" width="0.1115%" height="15" fill="rgb(224,49,31)"/><text x="62.8825%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="62.6882%" y="1413" width="0.0558%" height="15" fill="rgb(250,18,42)"/><text x="62.9382%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tt::Subtree&gt; (1 samples, 0.06%)</title><rect x="62.6882%" y="1397" width="0.0558%" height="15" fill="rgb(215,176,39)"/><text x="62.9382%" y="1407.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="62.6882%" y="1381" width="0.0558%" height="15" fill="rgb(223,77,29)"/><text x="62.9382%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="62.7440%" y="1477" width="0.0558%" height="15" fill="rgb(234,94,52)"/><text x="62.9940%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="62.7440%" y="1461" width="0.0558%" height="15" fill="rgb(220,154,50)"/><text x="62.9940%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="62.7440%" y="1445" width="0.0558%" height="15" fill="rgb(212,11,10)"/><text x="62.9940%" y="1455.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="62.7440%" y="1429" width="0.0558%" height="15" fill="rgb(205,166,19)"/><text x="62.9940%" y="1439.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (2 samples, 0.11%)</title><rect x="62.9113%" y="1461" width="0.1115%" height="15" fill="rgb(244,198,16)"/><text x="63.1613%" y="1471.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (1 samples, 0.06%)</title><rect x="62.9671%" y="1445" width="0.0558%" height="15" fill="rgb(219,69,12)"/><text x="63.2171%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.06%)</title><rect x="62.9671%" y="1429" width="0.0558%" height="15" fill="rgb(245,30,7)"/><text x="63.2171%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.06%)</title><rect x="62.9671%" y="1413" width="0.0558%" height="15" fill="rgb(218,221,48)"/><text x="63.2171%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.06%)</title><rect x="62.9671%" y="1397" width="0.0558%" height="15" fill="rgb(216,66,15)"/><text x="63.2171%" y="1407.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::peek (1 samples, 0.06%)</title><rect x="63.0229%" y="1461" width="0.0558%" height="15" fill="rgb(226,122,50)"/><text x="63.2729%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="63.0786%" y="1461" width="0.1115%" height="15" fill="rgb(239,156,16)"/><text x="63.3286%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="63.1344%" y="1445" width="0.0558%" height="15" fill="rgb(224,27,38)"/><text x="63.3844%" y="1455.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="63.1344%" y="1429" width="0.0558%" height="15" fill="rgb(224,39,27)"/><text x="63.3844%" y="1439.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::is_punct (1 samples, 0.06%)</title><rect x="63.6364%" y="1429" width="0.0558%" height="15" fill="rgb(215,92,29)"/><text x="63.8864%" y="1439.50"></text></g><g><title>rowan::cursor::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::cursor::SyntaxNode,rowan::cursor::SyntaxToken&gt;&gt;::first_token (2 samples, 0.11%)</title><rect x="63.6921%" y="1413" width="0.1115%" height="15" fill="rgb(207,159,16)"/><text x="63.9421%" y="1423.50"></text></g><g><title>&lt;rowan::cursor::SyntaxToken as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="63.6921%" y="1397" width="0.1115%" height="15" fill="rgb(238,163,47)"/><text x="63.9421%" y="1407.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="63.6921%" y="1381" width="0.1115%" height="15" fill="rgb(219,91,49)"/><text x="63.9421%" y="1391.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (2 samples, 0.11%)</title><rect x="63.6921%" y="1365" width="0.1115%" height="15" fill="rgb(227,167,31)"/><text x="63.9421%" y="1375.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (2 samples, 0.11%)</title><rect x="63.6921%" y="1349" width="0.1115%" height="15" fill="rgb(234,80,54)"/><text x="63.9421%" y="1359.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (6 samples, 0.33%)</title><rect x="63.5248%" y="1445" width="0.3346%" height="15" fill="rgb(212,114,2)"/><text x="63.7748%" y="1455.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (3 samples, 0.17%)</title><rect x="63.6921%" y="1429" width="0.1673%" height="15" fill="rgb(234,50,24)"/><text x="63.9421%" y="1439.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_sibling_or_token (1 samples, 0.06%)</title><rect x="63.8037%" y="1413" width="0.0558%" height="15" fill="rgb(221,68,8)"/><text x="64.0537%" y="1423.50"></text></g><g><title>rowan::cursor::SyntaxNode::green (1 samples, 0.06%)</title><rect x="63.8037%" y="1397" width="0.0558%" height="15" fill="rgb(254,180,31)"/><text x="64.0537%" y="1407.50"></text></g><g><title>&lt;syntax::syntax_node::RustLanguage as rowan::api::Language&gt;::kind_from_raw (2 samples, 0.11%)</title><rect x="63.9710%" y="1429" width="0.1115%" height="15" fill="rgb(247,130,50)"/><text x="64.2210%" y="1439.50"></text></g><g><title>parser::syntax_kind::&lt;impl core::convert::From&lt;u16&gt; for parser::syntax_kind::generated::SyntaxKind&gt;::from (2 samples, 0.11%)</title><rect x="63.9710%" y="1413" width="0.1115%" height="15" fill="rgb(211,109,4)"/><text x="64.2210%" y="1423.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::is_punct (1 samples, 0.06%)</title><rect x="64.0825%" y="1429" width="0.0558%" height="15" fill="rgb(238,50,21)"/><text x="64.3325%" y="1439.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::peek (6 samples, 0.33%)</title><rect x="63.8595%" y="1445" width="0.3346%" height="15" fill="rgb(225,57,45)"/><text x="64.1095%" y="1455.50"></text></g><g><title>rowan::api::SyntaxToken&lt;L&gt;::text_range (1 samples, 0.06%)</title><rect x="64.1383%" y="1429" width="0.0558%" height="15" fill="rgb(209,196,50)"/><text x="64.3883%" y="1439.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="64.1941%" y="1445" width="0.0558%" height="15" fill="rgb(242,140,13)"/><text x="64.4441%" y="1455.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="64.2499%" y="1445" width="0.0558%" height="15" fill="rgb(217,111,7)"/><text x="64.4999%" y="1455.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="64.3056%" y="1413" width="0.1673%" height="15" fill="rgb(253,193,51)"/><text x="64.5556%" y="1423.50"></text></g><g><title>_int_realloc (3 samples, 0.17%)</title><rect x="64.3056%" y="1397" width="0.1673%" height="15" fill="rgb(252,70,29)"/><text x="64.5556%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="64.4172%" y="1381" width="0.0558%" height="15" fill="rgb(232,127,12)"/><text x="64.6672%" y="1391.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="64.4172%" y="1365" width="0.0558%" height="15" fill="rgb(211,180,21)"/><text x="64.6672%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.22%)</title><rect x="64.3056%" y="1445" width="0.2231%" height="15" fill="rgb(229,72,13)"/><text x="64.5556%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.22%)</title><rect x="64.3056%" y="1429" width="0.2231%" height="15" fill="rgb(240,211,49)"/><text x="64.5556%" y="1439.50"></text></g><g><title>__rdl_realloc (1 samples, 0.06%)</title><rect x="64.4730%" y="1413" width="0.0558%" height="15" fill="rgb(219,149,40)"/><text x="64.7230%" y="1423.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.06%)</title><rect x="64.4730%" y="1397" width="0.0558%" height="15" fill="rgb(210,127,46)"/><text x="64.7230%" y="1407.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (6 samples, 0.33%)</title><rect x="65.1422%" y="1429" width="0.3346%" height="15" fill="rgb(220,106,7)"/><text x="65.3922%" y="1439.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (4 samples, 0.22%)</title><rect x="65.2538%" y="1413" width="0.2231%" height="15" fill="rgb(249,31,22)"/><text x="65.5038%" y="1423.50"></text></g><g><title>rowan::cursor::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::cursor::SyntaxNode,rowan::cursor::SyntaxToken&gt;&gt;::first_token (2 samples, 0.11%)</title><rect x="65.3653%" y="1397" width="0.1115%" height="15" fill="rgb(253,1,49)"/><text x="65.6153%" y="1407.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_token (1 samples, 0.06%)</title><rect x="65.4211%" y="1381" width="0.0558%" height="15" fill="rgb(227,144,33)"/><text x="65.6711%" y="1391.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child_or_token (1 samples, 0.06%)</title><rect x="65.4211%" y="1365" width="0.0558%" height="15" fill="rgb(249,163,44)"/><text x="65.6711%" y="1375.50"></text></g><g><title>rowan::green::node::GreenNodeData::children (1 samples, 0.06%)</title><rect x="65.4211%" y="1349" width="0.0558%" height="15" fill="rgb(234,15,39)"/><text x="65.6711%" y="1359.50"></text></g><g><title>rowan::green::node::GreenNodeData::slice (1 samples, 0.06%)</title><rect x="65.4211%" y="1333" width="0.0558%" height="15" fill="rgb(207,66,16)"/><text x="65.6711%" y="1343.50"></text></g><g><title>rowan::arc::HeaderSlice&lt;H,[T]&gt;::slice (1 samples, 0.06%)</title><rect x="65.4211%" y="1317" width="0.0558%" height="15" fill="rgb(233,112,24)"/><text x="65.6711%" y="1327.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::peek (1 samples, 0.06%)</title><rect x="65.4769%" y="1429" width="0.0558%" height="15" fill="rgb(230,90,22)"/><text x="65.7269%" y="1439.50"></text></g><g><title>rowan::api::SyntaxToken&lt;L&gt;::text_range (1 samples, 0.06%)</title><rect x="65.4769%" y="1413" width="0.0558%" height="15" fill="rgb(229,61,13)"/><text x="65.7269%" y="1423.50"></text></g><g><title>&lt;syntax::syntax_node::RustLanguage as rowan::api::Language&gt;::kind_from_raw (1 samples, 0.06%)</title><rect x="65.5326%" y="1429" width="0.0558%" height="15" fill="rgb(225,57,24)"/><text x="65.7826%" y="1439.50"></text></g><g><title>parser::syntax_kind::&lt;impl core::convert::From&lt;u16&gt; for parser::syntax_kind::generated::SyntaxKind&gt;::from (1 samples, 0.06%)</title><rect x="65.5326%" y="1413" width="0.0558%" height="15" fill="rgb(208,169,48)"/><text x="65.7826%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="65.5884%" y="1429" width="0.1115%" height="15" fill="rgb(244,218,51)"/><text x="65.8384%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="65.6442%" y="1413" width="0.0558%" height="15" fill="rgb(214,148,10)"/><text x="65.8942%" y="1423.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="65.6442%" y="1397" width="0.0558%" height="15" fill="rgb(225,174,27)"/><text x="65.8942%" y="1407.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="65.6442%" y="1381" width="0.0558%" height="15" fill="rgb(230,96,26)"/><text x="65.8942%" y="1391.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="65.6442%" y="1365" width="0.0558%" height="15" fill="rgb(232,10,30)"/><text x="65.8942%" y="1375.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="65.6442%" y="1349" width="0.0558%" height="15" fill="rgb(222,8,50)"/><text x="65.8942%" y="1359.50"></text></g><g><title>__GI___mprotect (1 samples, 0.06%)</title><rect x="65.6442%" y="1333" width="0.0558%" height="15" fill="rgb(213,81,27)"/><text x="65.8942%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="65.6442%" y="1317" width="0.0558%" height="15" fill="rgb(245,50,10)"/><text x="65.8942%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="65.6442%" y="1301" width="0.0558%" height="15" fill="rgb(216,100,18)"/><text x="65.8942%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="65.6442%" y="1285" width="0.0558%" height="15" fill="rgb(236,147,54)"/><text x="65.8942%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="65.6442%" y="1269" width="0.0558%" height="15" fill="rgb(205,143,26)"/><text x="65.8942%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="65.6442%" y="1253" width="0.0558%" height="15" fill="rgb(236,26,9)"/><text x="65.8942%" y="1263.50"></text></g><g><title>rowan::api::SyntaxToken&lt;L&gt;::text_range (3 samples, 0.17%)</title><rect x="66.3134%" y="1397" width="0.1673%" height="15" fill="rgb(221,165,53)"/><text x="66.5634%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.17%)</title><rect x="66.5923%" y="1381" width="0.1673%" height="15" fill="rgb(214,110,17)"/><text x="66.8423%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.17%)</title><rect x="66.5923%" y="1365" width="0.1673%" height="15" fill="rgb(237,197,12)"/><text x="66.8423%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (3 samples, 0.17%)</title><rect x="66.5923%" y="1349" width="0.1673%" height="15" fill="rgb(205,84,17)"/><text x="66.8423%" y="1359.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token::{{closure}} (1 samples, 0.06%)</title><rect x="66.7038%" y="1333" width="0.0558%" height="15" fill="rgb(237,18,45)"/><text x="66.9538%" y="1343.50"></text></g><g><title>rowan::cursor::SyntaxNode::next_sibling_or_token (1 samples, 0.06%)</title><rect x="66.7038%" y="1317" width="0.0558%" height="15" fill="rgb(221,87,14)"/><text x="66.9538%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.06%)</title><rect x="66.7596%" y="1381" width="0.0558%" height="15" fill="rgb(238,186,15)"/><text x="67.0096%" y="1391.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token::{{closure}} (1 samples, 0.06%)</title><rect x="66.7596%" y="1365" width="0.0558%" height="15" fill="rgb(208,115,11)"/><text x="67.0096%" y="1375.50"></text></g><g><title>rowan::cursor::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::cursor::SyntaxNode,rowan::cursor::SyntaxToken&gt;&gt;::first_token (1 samples, 0.06%)</title><rect x="66.7596%" y="1349" width="0.0558%" height="15" fill="rgb(254,175,0)"/><text x="67.0096%" y="1359.50"></text></g><g><title>&lt;rowan::cursor::SyntaxToken as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="66.7596%" y="1333" width="0.0558%" height="15" fill="rgb(227,24,42)"/><text x="67.0096%" y="1343.50"></text></g><g><title>&lt;rowan::cursor::SyntaxToken as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="66.8154%" y="1365" width="0.0558%" height="15" fill="rgb(223,211,37)"/><text x="67.0654%" y="1375.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="66.8154%" y="1349" width="0.0558%" height="15" fill="rgb(235,49,27)"/><text x="67.0654%" y="1359.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.06%)</title><rect x="66.8154%" y="1333" width="0.0558%" height="15" fill="rgb(254,97,51)"/><text x="67.0654%" y="1343.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.06%)</title><rect x="66.8154%" y="1317" width="0.0558%" height="15" fill="rgb(249,51,40)"/><text x="67.0654%" y="1327.50"></text></g><g><title>rowan::cursor::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::cursor::SyntaxNode,rowan::cursor::SyntaxToken&gt;&gt;::first_token (2 samples, 0.11%)</title><rect x="66.8154%" y="1381" width="0.1115%" height="15" fill="rgb(210,128,45)"/><text x="67.0654%" y="1391.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_token (1 samples, 0.06%)</title><rect x="66.8712%" y="1365" width="0.0558%" height="15" fill="rgb(224,137,50)"/><text x="67.1212%" y="1375.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child_or_token (1 samples, 0.06%)</title><rect x="66.8712%" y="1349" width="0.0558%" height="15" fill="rgb(242,15,9)"/><text x="67.1212%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.06%)</title><rect x="66.8712%" y="1333" width="0.0558%" height="15" fill="rgb(233,187,41)"/><text x="67.1212%" y="1343.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child_or_token::{{closure}} (1 samples, 0.06%)</title><rect x="66.8712%" y="1317" width="0.0558%" height="15" fill="rgb(227,2,29)"/><text x="67.1212%" y="1327.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="66.8712%" y="1301" width="0.0558%" height="15" fill="rgb(222,70,3)"/><text x="67.1212%" y="1311.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.06%)</title><rect x="66.8712%" y="1285" width="0.0558%" height="15" fill="rgb(213,11,42)"/><text x="67.1212%" y="1295.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.06%)</title><rect x="66.8712%" y="1269" width="0.0558%" height="15" fill="rgb(225,150,9)"/><text x="67.1212%" y="1279.50"></text></g><g><title>core::mem::replace (1 samples, 0.06%)</title><rect x="66.8712%" y="1253" width="0.0558%" height="15" fill="rgb(230,162,45)"/><text x="67.1212%" y="1263.50"></text></g><g><title>core::mem::swap (1 samples, 0.06%)</title><rect x="66.8712%" y="1237" width="0.0558%" height="15" fill="rgb(222,14,52)"/><text x="67.1212%" y="1247.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.06%)</title><rect x="66.8712%" y="1221" width="0.0558%" height="15" fill="rgb(254,198,14)"/><text x="67.1212%" y="1231.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (14 samples, 0.78%)</title><rect x="66.2577%" y="1413" width="0.7808%" height="15" fill="rgb(220,217,30)"/><text x="66.5077%" y="1423.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (10 samples, 0.56%)</title><rect x="66.4808%" y="1397" width="0.5577%" height="15" fill="rgb(215,146,41)"/><text x="66.7308%" y="1407.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_sibling_or_token (2 samples, 0.11%)</title><rect x="66.9269%" y="1381" width="0.1115%" height="15" fill="rgb(217,27,36)"/><text x="67.1769%" y="1391.50"></text></g><g><title>rowan::cursor::SyntaxNode::green (1 samples, 0.06%)</title><rect x="66.9827%" y="1365" width="0.0558%" height="15" fill="rgb(219,218,39)"/><text x="67.2327%" y="1375.50"></text></g><g><title>&lt;tt::Leaf as core::convert::From&lt;tt::Ident&gt;&gt;::from (1 samples, 0.06%)</title><rect x="67.0385%" y="1413" width="0.0558%" height="15" fill="rgb(219,4,42)"/><text x="67.2885%" y="1423.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="67.0943%" y="1413" width="0.0558%" height="15" fill="rgb(249,119,36)"/><text x="67.3443%" y="1423.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="67.1500%" y="1349" width="0.0558%" height="15" fill="rgb(209,23,33)"/><text x="67.4000%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1333" width="0.0558%" height="15" fill="rgb(211,10,0)"/><text x="67.4000%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1317" width="0.0558%" height="15" fill="rgb(208,99,37)"/><text x="67.4000%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1301" width="0.0558%" height="15" fill="rgb(213,132,31)"/><text x="67.4000%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1285" width="0.0558%" height="15" fill="rgb(243,129,40)"/><text x="67.4000%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1269" width="0.0558%" height="15" fill="rgb(210,66,33)"/><text x="67.4000%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1253" width="0.0558%" height="15" fill="rgb(209,189,4)"/><text x="67.4000%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1237" width="0.0558%" height="15" fill="rgb(214,107,37)"/><text x="67.4000%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1221" width="0.0558%" height="15" fill="rgb(245,88,54)"/><text x="67.4000%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="67.1500%" y="1205" width="0.0558%" height="15" fill="rgb(205,146,20)"/><text x="67.4000%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="67.1500%" y="1413" width="0.1115%" height="15" fill="rgb(220,161,25)"/><text x="67.4000%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="67.1500%" y="1397" width="0.1115%" height="15" fill="rgb(215,152,15)"/><text x="67.4000%" y="1407.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="67.1500%" y="1381" width="0.1115%" height="15" fill="rgb(233,192,44)"/><text x="67.4000%" y="1391.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="67.1500%" y="1365" width="0.1115%" height="15" fill="rgb(240,170,46)"/><text x="67.4000%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="67.2058%" y="1349" width="0.0558%" height="15" fill="rgb(207,104,33)"/><text x="67.4558%" y="1359.50"></text></g><g><title>rowan::api::SyntaxToken&lt;L&gt;::text_range (2 samples, 0.11%)</title><rect x="67.8751%" y="1381" width="0.1115%" height="15" fill="rgb(219,21,39)"/><text x="68.1251%" y="1391.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (6 samples, 0.33%)</title><rect x="67.8193%" y="1397" width="0.3346%" height="15" fill="rgb(214,133,29)"/><text x="68.0693%" y="1407.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (3 samples, 0.17%)</title><rect x="67.9866%" y="1381" width="0.1673%" height="15" fill="rgb(226,93,6)"/><text x="68.2366%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.06%)</title><rect x="68.0982%" y="1365" width="0.0558%" height="15" fill="rgb(252,222,34)"/><text x="68.3482%" y="1375.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token::{{closure}} (1 samples, 0.06%)</title><rect x="68.0982%" y="1349" width="0.0558%" height="15" fill="rgb(252,92,48)"/><text x="68.3482%" y="1359.50"></text></g><g><title>rowan::cursor::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::cursor::SyntaxNode,rowan::cursor::SyntaxToken&gt;&gt;::first_token (1 samples, 0.06%)</title><rect x="68.0982%" y="1333" width="0.0558%" height="15" fill="rgb(245,223,24)"/><text x="68.3482%" y="1343.50"></text></g><g><title>&lt;rowan::cursor::SyntaxToken as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="68.0982%" y="1317" width="0.0558%" height="15" fill="rgb(205,176,3)"/><text x="68.3482%" y="1327.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::peek (1 samples, 0.06%)</title><rect x="68.1539%" y="1397" width="0.0558%" height="15" fill="rgb(235,151,15)"/><text x="68.4039%" y="1407.50"></text></g><g><title>&lt;tt::Leaf as core::convert::From&lt;tt::Literal&gt;&gt;::from (1 samples, 0.06%)</title><rect x="68.2097%" y="1397" width="0.0558%" height="15" fill="rgb(237,209,11)"/><text x="68.4597%" y="1407.50"></text></g><g><title>&lt;tt::TokenTree as core::convert::From&lt;tt::Leaf&gt;&gt;::from (1 samples, 0.06%)</title><rect x="68.2655%" y="1397" width="0.0558%" height="15" fill="rgb(243,227,24)"/><text x="68.5155%" y="1407.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (1 samples, 0.06%)</title><rect x="68.4886%" y="1381" width="0.0558%" height="15" fill="rgb(239,193,16)"/><text x="68.7386%" y="1391.50"></text></g><g><title>rowan::cursor::SyntaxToken::next_token (1 samples, 0.06%)</title><rect x="68.4886%" y="1365" width="0.0558%" height="15" fill="rgb(231,27,9)"/><text x="68.7386%" y="1375.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::peek (1 samples, 0.06%)</title><rect x="68.5443%" y="1381" width="0.0558%" height="15" fill="rgb(219,169,10)"/><text x="68.7943%" y="1391.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::is_punct (1 samples, 0.06%)</title><rect x="68.5443%" y="1365" width="0.0558%" height="15" fill="rgb(244,229,43)"/><text x="68.7943%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="68.6001%" y="1381" width="0.1115%" height="15" fill="rgb(254,38,20)"/><text x="68.8501%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="68.6001%" y="1365" width="0.1115%" height="15" fill="rgb(250,47,30)"/><text x="68.8501%" y="1375.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="68.6001%" y="1349" width="0.1115%" height="15" fill="rgb(224,124,36)"/><text x="68.8501%" y="1359.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="68.6001%" y="1333" width="0.1115%" height="15" fill="rgb(246,68,51)"/><text x="68.8501%" y="1343.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="68.6559%" y="1317" width="0.0558%" height="15" fill="rgb(253,43,49)"/><text x="68.9059%" y="1327.50"></text></g><g><title>__GI___mprotect (1 samples, 0.06%)</title><rect x="68.6559%" y="1301" width="0.0558%" height="15" fill="rgb(219,54,36)"/><text x="68.9059%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1285" width="0.0558%" height="15" fill="rgb(227,133,34)"/><text x="68.9059%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1269" width="0.0558%" height="15" fill="rgb(247,227,15)"/><text x="68.9059%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1253" width="0.0558%" height="15" fill="rgb(229,96,14)"/><text x="68.9059%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1237" width="0.0558%" height="15" fill="rgb(220,79,17)"/><text x="68.9059%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1221" width="0.0558%" height="15" fill="rgb(205,131,53)"/><text x="68.9059%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="68.6559%" y="1205" width="0.0558%" height="15" fill="rgb(209,50,29)"/><text x="68.9059%" y="1215.50"></text></g><g><title>&lt;mbe::syntax_bridge::Convertor as mbe::syntax_bridge::TokenConvertor&gt;::bump (1 samples, 0.06%)</title><rect x="68.7674%" y="1365" width="0.0558%" height="15" fill="rgb(245,86,46)"/><text x="69.0174%" y="1375.50"></text></g><g><title>&lt;tt::Leaf as core::convert::From&lt;tt::Ident&gt;&gt;::from (1 samples, 0.06%)</title><rect x="68.8232%" y="1365" width="0.0558%" height="15" fill="rgb(235,66,46)"/><text x="69.0732%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="68.8790%" y="1365" width="0.0558%" height="15" fill="rgb(232,148,31)"/><text x="69.1290%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="68.8790%" y="1349" width="0.0558%" height="15" fill="rgb(217,149,8)"/><text x="69.1290%" y="1359.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="68.8790%" y="1333" width="0.0558%" height="15" fill="rgb(209,183,11)"/><text x="69.1290%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="68.9347%" y="1333" width="0.0558%" height="15" fill="rgb(208,55,20)"/><text x="69.1847%" y="1343.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="68.9347%" y="1317" width="0.0558%" height="15" fill="rgb(218,39,14)"/><text x="69.1847%" y="1327.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="68.9347%" y="1301" width="0.0558%" height="15" fill="rgb(216,169,33)"/><text x="69.1847%" y="1311.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="68.9347%" y="1285" width="0.0558%" height="15" fill="rgb(233,80,24)"/><text x="69.1847%" y="1295.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="68.9347%" y="1269" width="0.0558%" height="15" fill="rgb(213,179,31)"/><text x="69.1847%" y="1279.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (13 samples, 0.73%)</title><rect x="68.3212%" y="1397" width="0.7250%" height="15" fill="rgb(209,19,5)"/><text x="68.5712%" y="1407.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (6 samples, 0.33%)</title><rect x="68.7117%" y="1381" width="0.3346%" height="15" fill="rgb(219,18,35)"/><text x="68.9617%" y="1391.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (2 samples, 0.11%)</title><rect x="68.9347%" y="1365" width="0.1115%" height="15" fill="rgb(209,169,16)"/><text x="69.1847%" y="1375.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (2 samples, 0.11%)</title><rect x="68.9347%" y="1349" width="0.1115%" height="15" fill="rgb(245,90,51)"/><text x="69.1847%" y="1359.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (1 samples, 0.06%)</title><rect x="68.9905%" y="1333" width="0.0558%" height="15" fill="rgb(220,99,45)"/><text x="69.2405%" y="1343.50"></text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (1 samples, 0.06%)</title><rect x="68.9905%" y="1317" width="0.0558%" height="15" fill="rgb(249,89,25)"/><text x="69.2405%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (126 samples, 7.03%)</title><rect x="62.0747%" y="1525" width="7.0273%" height="15" fill="rgb(239,193,0)"/><text x="62.3247%" y="1535.50">&lt;core::it..</text></g><g><title>mbe::syntax_bridge::syntax_node_to_token_tree (122 samples, 6.80%)</title><rect x="62.2978%" y="1509" width="6.8042%" height="15" fill="rgb(231,126,1)"/><text x="62.5478%" y="1519.50">mbe::synt..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (114 samples, 6.36%)</title><rect x="62.7440%" y="1493" width="6.3581%" height="15" fill="rgb(243,166,3)"/><text x="62.9940%" y="1503.50">mbe::syn..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (113 samples, 6.30%)</title><rect x="62.7998%" y="1477" width="6.3023%" height="15" fill="rgb(223,22,34)"/><text x="63.0498%" y="1487.50">mbe::syn..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (106 samples, 5.91%)</title><rect x="63.1902%" y="1461" width="5.9119%" height="15" fill="rgb(251,52,51)"/><text x="63.4402%" y="1471.50">mbe::syn..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (82 samples, 4.57%)</title><rect x="64.5287%" y="1445" width="4.5733%" height="15" fill="rgb(221,165,28)"/><text x="64.7787%" y="1455.50">mbe::..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (61 samples, 3.40%)</title><rect x="65.6999%" y="1429" width="3.4021%" height="15" fill="rgb(218,121,47)"/><text x="65.9499%" y="1439.50">mbe..</text></g><g><title>mbe::syntax_bridge::TokenConvertor::collect_leaf (33 samples, 1.84%)</title><rect x="67.2616%" y="1413" width="1.8405%" height="15" fill="rgb(209,120,9)"/><text x="67.5116%" y="1423.50">m..</text></g><g><title>mbe::syntax_bridge::TokenIdAlloc::close_delim (1 samples, 0.06%)</title><rect x="69.0463%" y="1397" width="0.0558%" height="15" fill="rgb(236,68,12)"/><text x="69.2963%" y="1407.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="69.1021%" y="901" width="0.0558%" height="15" fill="rgb(225,194,26)"/><text x="69.3521%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="69.1021%" y="885" width="0.0558%" height="15" fill="rgb(231,84,39)"/><text x="69.3521%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (2 samples, 0.11%)</title><rect x="69.1578%" y="277" width="0.1115%" height="15" fill="rgb(210,11,45)"/><text x="69.4078%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (2 samples, 0.11%)</title><rect x="69.1578%" y="261" width="0.1115%" height="15" fill="rgb(224,54,52)"/><text x="69.4078%" y="271.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="69.1578%" y="245" width="0.1115%" height="15" fill="rgb(238,102,14)"/><text x="69.4078%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (2 samples, 0.11%)</title><rect x="69.1578%" y="229" width="0.1115%" height="15" fill="rgb(243,160,52)"/><text x="69.4078%" y="239.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="69.1578%" y="213" width="0.1115%" height="15" fill="rgb(216,114,19)"/><text x="69.4078%" y="223.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (1 samples, 0.06%)</title><rect x="69.2136%" y="197" width="0.0558%" height="15" fill="rgb(244,166,37)"/><text x="69.4636%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="181" width="0.0558%" height="15" fill="rgb(246,29,44)"/><text x="69.4636%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="165" width="0.0558%" height="15" fill="rgb(215,56,53)"/><text x="69.4636%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="149" width="0.0558%" height="15" fill="rgb(217,60,2)"/><text x="69.4636%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="133" width="0.0558%" height="15" fill="rgb(207,26,24)"/><text x="69.4636%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="117" width="0.0558%" height="15" fill="rgb(252,210,15)"/><text x="69.4636%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="101" width="0.0558%" height="15" fill="rgb(253,209,26)"/><text x="69.4636%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="85" width="0.0558%" height="15" fill="rgb(238,170,14)"/><text x="69.4636%" y="95.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.2136%" y="69" width="0.0558%" height="15" fill="rgb(216,178,15)"/><text x="69.4636%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="69.2136%" y="53" width="0.0558%" height="15" fill="rgb(250,197,2)"/><text x="69.4636%" y="63.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.2136%" y="37" width="0.0558%" height="15" fill="rgb(212,70,42)"/><text x="69.4636%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="453" width="0.2231%" height="15" fill="rgb(227,213,9)"/><text x="69.4078%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="437" width="0.2231%" height="15" fill="rgb(245,99,25)"/><text x="69.4078%" y="447.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.22%)</title><rect x="69.1578%" y="421" width="0.2231%" height="15" fill="rgb(250,82,29)"/><text x="69.4078%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="405" width="0.2231%" height="15" fill="rgb(241,226,54)"/><text x="69.4078%" y="415.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.22%)</title><rect x="69.1578%" y="389" width="0.2231%" height="15" fill="rgb(221,99,41)"/><text x="69.4078%" y="399.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (4 samples, 0.22%)</title><rect x="69.1578%" y="373" width="0.2231%" height="15" fill="rgb(213,90,21)"/><text x="69.4078%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="357" width="0.2231%" height="15" fill="rgb(205,208,24)"/><text x="69.4078%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="341" width="0.2231%" height="15" fill="rgb(246,31,12)"/><text x="69.4078%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="325" width="0.2231%" height="15" fill="rgb(213,154,6)"/><text x="69.4078%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="309" width="0.2231%" height="15" fill="rgb(222,163,29)"/><text x="69.4078%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (4 samples, 0.22%)</title><rect x="69.1578%" y="293" width="0.2231%" height="15" fill="rgb(227,201,8)"/><text x="69.4078%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (2 samples, 0.11%)</title><rect x="69.2694%" y="277" width="0.1115%" height="15" fill="rgb(233,9,32)"/><text x="69.5194%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (2 samples, 0.11%)</title><rect x="69.2694%" y="261" width="0.1115%" height="15" fill="rgb(217,54,24)"/><text x="69.5194%" y="271.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="69.2694%" y="245" width="0.1115%" height="15" fill="rgb(235,192,0)"/><text x="69.5194%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (2 samples, 0.11%)</title><rect x="69.2694%" y="229" width="0.1115%" height="15" fill="rgb(235,45,9)"/><text x="69.5194%" y="239.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="69.2694%" y="213" width="0.1115%" height="15" fill="rgb(246,42,40)"/><text x="69.5194%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="629" width="0.2789%" height="15" fill="rgb(248,111,24)"/><text x="69.4078%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="613" width="0.2789%" height="15" fill="rgb(249,65,22)"/><text x="69.4078%" y="623.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.28%)</title><rect x="69.1578%" y="597" width="0.2789%" height="15" fill="rgb(238,111,51)"/><text x="69.4078%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="581" width="0.2789%" height="15" fill="rgb(250,118,22)"/><text x="69.4078%" y="591.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.28%)</title><rect x="69.1578%" y="565" width="0.2789%" height="15" fill="rgb(234,84,26)"/><text x="69.4078%" y="575.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (5 samples, 0.28%)</title><rect x="69.1578%" y="549" width="0.2789%" height="15" fill="rgb(243,172,12)"/><text x="69.4078%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="533" width="0.2789%" height="15" fill="rgb(236,150,49)"/><text x="69.4078%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="517" width="0.2789%" height="15" fill="rgb(225,197,26)"/><text x="69.4078%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="501" width="0.2789%" height="15" fill="rgb(214,17,42)"/><text x="69.4078%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="485" width="0.2789%" height="15" fill="rgb(224,165,40)"/><text x="69.4078%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (5 samples, 0.28%)</title><rect x="69.1578%" y="469" width="0.2789%" height="15" fill="rgb(246,100,4)"/><text x="69.4078%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.06%)</title><rect x="69.3809%" y="453" width="0.0558%" height="15" fill="rgb(222,103,0)"/><text x="69.6309%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.06%)</title><rect x="69.3809%" y="437" width="0.0558%" height="15" fill="rgb(227,189,26)"/><text x="69.6309%" y="447.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.3809%" y="421" width="0.0558%" height="15" fill="rgb(214,202,17)"/><text x="69.6309%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="69.3809%" y="405" width="0.0558%" height="15" fill="rgb(229,111,3)"/><text x="69.6309%" y="415.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.3809%" y="389" width="0.0558%" height="15" fill="rgb(229,172,15)"/><text x="69.6309%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (7 samples, 0.39%)</title><rect x="69.1021%" y="981" width="0.3904%" height="15" fill="rgb(230,224,35)"/><text x="69.3521%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (7 samples, 0.39%)</title><rect x="69.1021%" y="965" width="0.3904%" height="15" fill="rgb(251,141,6)"/><text x="69.3521%" y="975.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.39%)</title><rect x="69.1021%" y="949" width="0.3904%" height="15" fill="rgb(225,208,6)"/><text x="69.3521%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (7 samples, 0.39%)</title><rect x="69.1021%" y="933" width="0.3904%" height="15" fill="rgb(246,181,16)"/><text x="69.3521%" y="943.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.39%)</title><rect x="69.1021%" y="917" width="0.3904%" height="15" fill="rgb(227,129,36)"/><text x="69.3521%" y="927.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (6 samples, 0.33%)</title><rect x="69.1578%" y="901" width="0.3346%" height="15" fill="rgb(248,117,24)"/><text x="69.4078%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="885" width="0.3346%" height="15" fill="rgb(214,185,35)"/><text x="69.4078%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="869" width="0.3346%" height="15" fill="rgb(236,150,34)"/><text x="69.4078%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="853" width="0.3346%" height="15" fill="rgb(243,228,27)"/><text x="69.4078%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="837" width="0.3346%" height="15" fill="rgb(245,77,44)"/><text x="69.4078%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="821" width="0.3346%" height="15" fill="rgb(235,214,42)"/><text x="69.4078%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="805" width="0.3346%" height="15" fill="rgb(221,74,3)"/><text x="69.4078%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="789" width="0.3346%" height="15" fill="rgb(206,121,29)"/><text x="69.4078%" y="799.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.33%)</title><rect x="69.1578%" y="773" width="0.3346%" height="15" fill="rgb(249,131,53)"/><text x="69.4078%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="757" width="0.3346%" height="15" fill="rgb(236,170,29)"/><text x="69.4078%" y="767.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.33%)</title><rect x="69.1578%" y="741" width="0.3346%" height="15" fill="rgb(247,96,15)"/><text x="69.4078%" y="751.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (6 samples, 0.33%)</title><rect x="69.1578%" y="725" width="0.3346%" height="15" fill="rgb(211,210,7)"/><text x="69.4078%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="709" width="0.3346%" height="15" fill="rgb(240,88,50)"/><text x="69.4078%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="693" width="0.3346%" height="15" fill="rgb(209,229,26)"/><text x="69.4078%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="677" width="0.3346%" height="15" fill="rgb(210,68,23)"/><text x="69.4078%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="661" width="0.3346%" height="15" fill="rgb(229,180,13)"/><text x="69.4078%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (6 samples, 0.33%)</title><rect x="69.1578%" y="645" width="0.3346%" height="15" fill="rgb(236,53,44)"/><text x="69.4078%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.06%)</title><rect x="69.4367%" y="629" width="0.0558%" height="15" fill="rgb(244,214,29)"/><text x="69.6867%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.06%)</title><rect x="69.4367%" y="613" width="0.0558%" height="15" fill="rgb(220,75,29)"/><text x="69.6867%" y="623.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.4367%" y="597" width="0.0558%" height="15" fill="rgb(214,183,37)"/><text x="69.6867%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::token::GreenTokenHead,[u8]&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="69.4367%" y="581" width="0.0558%" height="15" fill="rgb(239,117,29)"/><text x="69.6867%" y="591.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.4367%" y="565" width="0.0558%" height="15" fill="rgb(237,171,35)"/><text x="69.6867%" y="575.50"></text></g><g><title>rowan::cursor::free (8 samples, 0.45%)</title><rect x="69.1021%" y="1525" width="0.4462%" height="15" fill="rgb(229,178,53)"/><text x="69.3521%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1509" width="0.4462%" height="15" fill="rgb(210,102,19)"/><text x="69.3521%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1493" width="0.4462%" height="15" fill="rgb(235,127,22)"/><text x="69.3521%" y="1503.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1477" width="0.4462%" height="15" fill="rgb(244,31,31)"/><text x="69.3521%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1461" width="0.4462%" height="15" fill="rgb(231,43,21)"/><text x="69.3521%" y="1471.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1445" width="0.4462%" height="15" fill="rgb(217,131,35)"/><text x="69.3521%" y="1455.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (8 samples, 0.45%)</title><rect x="69.1021%" y="1429" width="0.4462%" height="15" fill="rgb(221,149,4)"/><text x="69.3521%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1413" width="0.4462%" height="15" fill="rgb(232,170,28)"/><text x="69.3521%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1397" width="0.4462%" height="15" fill="rgb(238,56,10)"/><text x="69.3521%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1381" width="0.4462%" height="15" fill="rgb(235,196,14)"/><text x="69.3521%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1365" width="0.4462%" height="15" fill="rgb(216,45,48)"/><text x="69.3521%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1349" width="0.4462%" height="15" fill="rgb(238,213,17)"/><text x="69.3521%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1333" width="0.4462%" height="15" fill="rgb(212,13,2)"/><text x="69.3521%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1317" width="0.4462%" height="15" fill="rgb(240,114,20)"/><text x="69.3521%" y="1327.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1301" width="0.4462%" height="15" fill="rgb(228,41,40)"/><text x="69.3521%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1285" width="0.4462%" height="15" fill="rgb(244,132,35)"/><text x="69.3521%" y="1295.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1269" width="0.4462%" height="15" fill="rgb(253,189,4)"/><text x="69.3521%" y="1279.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (8 samples, 0.45%)</title><rect x="69.1021%" y="1253" width="0.4462%" height="15" fill="rgb(224,37,19)"/><text x="69.3521%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1237" width="0.4462%" height="15" fill="rgb(235,223,18)"/><text x="69.3521%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1221" width="0.4462%" height="15" fill="rgb(235,163,25)"/><text x="69.3521%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1205" width="0.4462%" height="15" fill="rgb(217,145,28)"/><text x="69.3521%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1189" width="0.4462%" height="15" fill="rgb(223,223,32)"/><text x="69.3521%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1173" width="0.4462%" height="15" fill="rgb(227,189,39)"/><text x="69.3521%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenNode&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1157" width="0.4462%" height="15" fill="rgb(248,10,22)"/><text x="69.3521%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::node::GreenNodeHead,rowan::green::node::GreenChild&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1141" width="0.4462%" height="15" fill="rgb(248,46,39)"/><text x="69.3521%" y="1151.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1125" width="0.4462%" height="15" fill="rgb(248,113,48)"/><text x="69.3521%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1109" width="0.4462%" height="15" fill="rgb(245,16,25)"/><text x="69.3521%" y="1119.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.45%)</title><rect x="69.1021%" y="1093" width="0.4462%" height="15" fill="rgb(249,152,16)"/><text x="69.3521%" y="1103.50"></text></g><g><title>rowan::arc::Arc&lt;T&gt;::drop_slow (8 samples, 0.45%)</title><rect x="69.1021%" y="1077" width="0.4462%" height="15" fill="rgb(250,16,1)"/><text x="69.3521%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1061" width="0.4462%" height="15" fill="rgb(249,138,3)"/><text x="69.3521%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ArcInner&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1045" width="0.4462%" height="15" fill="rgb(227,71,41)"/><text x="69.3521%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::HeaderSlice&lt;rowan::green::node::GreenNodeHead,[rowan::green::node::GreenChild]&gt;&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1029" width="0.4462%" height="15" fill="rgb(209,184,23)"/><text x="69.3521%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rowan::green::node::GreenChild]&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="1013" width="0.4462%" height="15" fill="rgb(223,215,31)"/><text x="69.3521%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::node::GreenChild&gt; (8 samples, 0.45%)</title><rect x="69.1021%" y="997" width="0.4462%" height="15" fill="rgb(210,146,28)"/><text x="69.3521%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::green::token::GreenToken&gt; (1 samples, 0.06%)</title><rect x="69.4925%" y="981" width="0.0558%" height="15" fill="rgb(209,183,41)"/><text x="69.7425%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::arc::ThinArc&lt;rowan::green::token::GreenTokenHead,u8&gt;&gt; (1 samples, 0.06%)</title><rect x="69.4925%" y="965" width="0.0558%" height="15" fill="rgb(209,224,45)"/><text x="69.7425%" y="975.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="69.4925%" y="949" width="0.0558%" height="15" fill="rgb(224,209,51)"/><text x="69.7425%" y="959.50"></text></g><g><title>rowan::arc::Arc&lt;rowan::arc::HeaderSlice&lt;H,[T]&gt;&gt;::from_thin (1 samples, 0.06%)</title><rect x="69.4925%" y="933" width="0.0558%" height="15" fill="rgb(223,17,39)"/><text x="69.7425%" y="943.50"></text></g><g><title>rowan::arc::thin_to_thick (1 samples, 0.06%)</title><rect x="69.4925%" y="917" width="0.0558%" height="15" fill="rgb(234,204,37)"/><text x="69.7425%" y="927.50"></text></g><g><title>parser::grammar::items::token_tree (1 samples, 0.06%)</title><rect x="69.5482%" y="1269" width="0.0558%" height="15" fill="rgb(236,120,5)"/><text x="69.7982%" y="1279.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="69.5482%" y="1253" width="0.0558%" height="15" fill="rgb(248,97,27)"/><text x="69.7982%" y="1263.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="69.5482%" y="1237" width="0.0558%" height="15" fill="rgb(240,66,17)"/><text x="69.7982%" y="1247.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="69.5482%" y="1221" width="0.0558%" height="15" fill="rgb(210,79,3)"/><text x="69.7982%" y="1231.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="69.6040%" y="1269" width="0.0558%" height="15" fill="rgb(214,176,27)"/><text x="69.8540%" y="1279.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="69.6040%" y="1253" width="0.0558%" height="15" fill="rgb(235,185,3)"/><text x="69.8540%" y="1263.50"></text></g><g><title>parser::parser::Parser::bump_any (1 samples, 0.06%)</title><rect x="69.6598%" y="1269" width="0.0558%" height="15" fill="rgb(227,24,12)"/><text x="69.9098%" y="1279.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="69.6598%" y="1253" width="0.0558%" height="15" fill="rgb(252,169,48)"/><text x="69.9098%" y="1263.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::bump (1 samples, 0.06%)</title><rect x="69.6598%" y="1237" width="0.0558%" height="15" fill="rgb(212,65,1)"/><text x="69.9098%" y="1247.50"></text></g><g><title>parser::grammar::items::token_tree (4 samples, 0.22%)</title><rect x="69.5482%" y="1285" width="0.2231%" height="15" fill="rgb(242,39,24)"/><text x="69.7982%" y="1295.50"></text></g><g><title>parser::parser::Parser::current (1 samples, 0.06%)</title><rect x="69.7156%" y="1269" width="0.0558%" height="15" fill="rgb(249,32,23)"/><text x="69.9656%" y="1279.50"></text></g><g><title>parser::parser::Parser::nth (1 samples, 0.06%)</title><rect x="69.7156%" y="1253" width="0.0558%" height="15" fill="rgb(251,195,23)"/><text x="69.9656%" y="1263.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="69.7713%" y="1285" width="0.0558%" height="15" fill="rgb(236,174,8)"/><text x="70.0213%" y="1295.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="69.7713%" y="1269" width="0.0558%" height="15" fill="rgb(220,197,8)"/><text x="70.0213%" y="1279.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="69.7713%" y="1253" width="0.0558%" height="15" fill="rgb(240,108,37)"/><text x="70.0213%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="69.7713%" y="1237" width="0.0558%" height="15" fill="rgb(232,176,24)"/><text x="70.0213%" y="1247.50"></text></g><g><title>parser::parser::Parser::bump_any (1 samples, 0.06%)</title><rect x="69.8271%" y="1285" width="0.0558%" height="15" fill="rgb(243,35,29)"/><text x="70.0771%" y="1295.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="69.8271%" y="1269" width="0.0558%" height="15" fill="rgb(210,37,18)"/><text x="70.0771%" y="1279.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::bump (1 samples, 0.06%)</title><rect x="69.8271%" y="1253" width="0.0558%" height="15" fill="rgb(224,184,40)"/><text x="70.0771%" y="1263.50"></text></g><g><title>syntax::parsing::text_token_source::mk_token (1 samples, 0.06%)</title><rect x="69.8271%" y="1237" width="0.0558%" height="15" fill="rgb(236,39,29)"/><text x="70.0771%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.06%)</title><rect x="69.8271%" y="1221" width="0.0558%" height="15" fill="rgb(232,48,39)"/><text x="70.0771%" y="1231.50"></text></g><g><title>parser::parser::Parser::current (1 samples, 0.06%)</title><rect x="69.8829%" y="1285" width="0.0558%" height="15" fill="rgb(236,34,42)"/><text x="70.1329%" y="1295.50"></text></g><g><title>parser::parser::Parser::nth (1 samples, 0.06%)</title><rect x="69.8829%" y="1269" width="0.0558%" height="15" fill="rgb(243,106,37)"/><text x="70.1329%" y="1279.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="69.8829%" y="1253" width="0.0558%" height="15" fill="rgb(218,96,6)"/><text x="70.1329%" y="1263.50"></text></g><g><title>syntax::parsing::text_token_source::mk_token (1 samples, 0.06%)</title><rect x="69.8829%" y="1237" width="0.0558%" height="15" fill="rgb(235,130,12)"/><text x="70.1329%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.06%)</title><rect x="69.8829%" y="1221" width="0.0558%" height="15" fill="rgb(231,95,0)"/><text x="70.1329%" y="1231.50"></text></g><g><title>parser::grammar::items::token_tree (8 samples, 0.45%)</title><rect x="69.5482%" y="1301" width="0.4462%" height="15" fill="rgb(228,12,23)"/><text x="69.7982%" y="1311.50"></text></g><g><title>parser::parser::Parser::expect (1 samples, 0.06%)</title><rect x="69.9387%" y="1285" width="0.0558%" height="15" fill="rgb(216,12,1)"/><text x="70.1887%" y="1295.50"></text></g><g><title>parser::parser::Parser::eat (1 samples, 0.06%)</title><rect x="69.9387%" y="1269" width="0.0558%" height="15" fill="rgb(219,59,3)"/><text x="70.1887%" y="1279.50"></text></g><g><title>parser::parser::Parser::do_bump (1 samples, 0.06%)</title><rect x="69.9387%" y="1253" width="0.0558%" height="15" fill="rgb(215,208,46)"/><text x="70.1887%" y="1263.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::bump (1 samples, 0.06%)</title><rect x="69.9387%" y="1237" width="0.0558%" height="15" fill="rgb(254,224,29)"/><text x="70.1887%" y="1247.50"></text></g><g><title>syntax::parsing::text_token_source::mk_token (1 samples, 0.06%)</title><rect x="69.9387%" y="1221" width="0.0558%" height="15" fill="rgb(232,14,29)"/><text x="70.1887%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.06%)</title><rect x="69.9387%" y="1205" width="0.0558%" height="15" fill="rgb(208,45,52)"/><text x="70.1887%" y="1215.50"></text></g><g><title>parser::parser::Parser::bump_any (2 samples, 0.11%)</title><rect x="69.9944%" y="1301" width="0.1115%" height="15" fill="rgb(234,191,28)"/><text x="70.2444%" y="1311.50"></text></g><g><title>parser::parser::Parser::nth (2 samples, 0.11%)</title><rect x="69.9944%" y="1285" width="0.1115%" height="15" fill="rgb(244,67,43)"/><text x="70.2444%" y="1295.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (2 samples, 0.11%)</title><rect x="69.9944%" y="1269" width="0.1115%" height="15" fill="rgb(236,189,24)"/><text x="70.2444%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="70.0502%" y="1253" width="0.0558%" height="15" fill="rgb(239,214,33)"/><text x="70.3002%" y="1263.50"></text></g><g><title>parser::parser::Parser::current (1 samples, 0.06%)</title><rect x="70.1060%" y="1301" width="0.0558%" height="15" fill="rgb(226,176,41)"/><text x="70.3560%" y="1311.50"></text></g><g><title>parser::parser::Parser::nth (1 samples, 0.06%)</title><rect x="70.1060%" y="1285" width="0.0558%" height="15" fill="rgb(248,47,8)"/><text x="70.3560%" y="1295.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="70.1060%" y="1269" width="0.0558%" height="15" fill="rgb(218,81,44)"/><text x="70.3560%" y="1279.50"></text></g><g><title>syntax::parsing::text_token_source::mk_token (1 samples, 0.06%)</title><rect x="70.1060%" y="1253" width="0.0558%" height="15" fill="rgb(213,98,6)"/><text x="70.3560%" y="1263.50"></text></g><g><title>parser::grammar::items::token_tree (12 samples, 0.67%)</title><rect x="69.5482%" y="1317" width="0.6693%" height="15" fill="rgb(222,85,22)"/><text x="69.7982%" y="1327.50"></text></g><g><title>parser::parser::Parser::start (1 samples, 0.06%)</title><rect x="70.1617%" y="1301" width="0.0558%" height="15" fill="rgb(239,46,39)"/><text x="70.4117%" y="1311.50"></text></g><g><title>parser::parser::Marker::new (1 samples, 0.06%)</title><rect x="70.1617%" y="1285" width="0.0558%" height="15" fill="rgb(237,12,29)"/><text x="70.4117%" y="1295.50"></text></g><g><title>drop_bomb::DropBomb::new (1 samples, 0.06%)</title><rect x="70.1617%" y="1269" width="0.0558%" height="15" fill="rgb(214,77,8)"/><text x="70.4117%" y="1279.50"></text></g><g><title>drop_bomb::RealBomb::new (1 samples, 0.06%)</title><rect x="70.1617%" y="1253" width="0.0558%" height="15" fill="rgb(217,168,37)"/><text x="70.4117%" y="1263.50"></text></g><g><title>parser::parser::Parser::at (1 samples, 0.06%)</title><rect x="70.2175%" y="1317" width="0.0558%" height="15" fill="rgb(221,217,23)"/><text x="70.4675%" y="1327.50"></text></g><g><title>parser::parser::Parser::nth_at (1 samples, 0.06%)</title><rect x="70.2175%" y="1301" width="0.0558%" height="15" fill="rgb(243,229,36)"/><text x="70.4675%" y="1311.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="70.2175%" y="1285" width="0.0558%" height="15" fill="rgb(251,163,40)"/><text x="70.4675%" y="1295.50"></text></g><g><title>syntax::parsing::text_token_source::mk_token (1 samples, 0.06%)</title><rect x="70.2175%" y="1269" width="0.0558%" height="15" fill="rgb(237,222,12)"/><text x="70.4675%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.06%)</title><rect x="70.2175%" y="1253" width="0.0558%" height="15" fill="rgb(248,132,6)"/><text x="70.4675%" y="1263.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::bump (1 samples, 0.06%)</title><rect x="70.2733%" y="1285" width="0.0558%" height="15" fill="rgb(227,167,50)"/><text x="70.5233%" y="1295.50"></text></g><g><title>parser::parser::Parser::do_bump (2 samples, 0.11%)</title><rect x="70.2733%" y="1301" width="0.1115%" height="15" fill="rgb(242,84,37)"/><text x="70.5233%" y="1311.50"></text></g><g><title>parser::parser::Parser::push_event (1 samples, 0.06%)</title><rect x="70.3291%" y="1285" width="0.0558%" height="15" fill="rgb(212,4,50)"/><text x="70.5791%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="70.3291%" y="1269" width="0.0558%" height="15" fill="rgb(230,228,32)"/><text x="70.5791%" y="1279.50"></text></g><g><title>core::ptr::write (1 samples, 0.06%)</title><rect x="70.3291%" y="1253" width="0.0558%" height="15" fill="rgb(248,217,23)"/><text x="70.5791%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1237" width="0.0558%" height="15" fill="rgb(238,197,32)"/><text x="70.5791%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1221" width="0.0558%" height="15" fill="rgb(236,106,1)"/><text x="70.5791%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1205" width="0.0558%" height="15" fill="rgb(219,228,13)"/><text x="70.5791%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1189" width="0.0558%" height="15" fill="rgb(238,30,35)"/><text x="70.5791%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1173" width="0.0558%" height="15" fill="rgb(236,70,23)"/><text x="70.5791%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1157" width="0.0558%" height="15" fill="rgb(249,104,48)"/><text x="70.5791%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.3291%" y="1141" width="0.0558%" height="15" fill="rgb(254,117,50)"/><text x="70.5791%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.89%)</title><rect x="69.5482%" y="1461" width="0.8924%" height="15" fill="rgb(223,152,4)"/><text x="69.7982%" y="1471.50"></text></g><g><title>parser::grammar::root (16 samples, 0.89%)</title><rect x="69.5482%" y="1445" width="0.8924%" height="15" fill="rgb(245,6,2)"/><text x="69.7982%" y="1455.50"></text></g><g><title>parser::grammar::items::mod_contents (16 samples, 0.89%)</title><rect x="69.5482%" y="1429" width="0.8924%" height="15" fill="rgb(249,150,24)"/><text x="69.7982%" y="1439.50"></text></g><g><title>parser::grammar::items::item_or_macro (16 samples, 0.89%)</title><rect x="69.5482%" y="1413" width="0.8924%" height="15" fill="rgb(228,185,42)"/><text x="69.7982%" y="1423.50"></text></g><g><title>parser::grammar::items::maybe_item (16 samples, 0.89%)</title><rect x="69.5482%" y="1397" width="0.8924%" height="15" fill="rgb(226,39,33)"/><text x="69.7982%" y="1407.50"></text></g><g><title>parser::grammar::items::items_without_modifiers (16 samples, 0.89%)</title><rect x="69.5482%" y="1381" width="0.8924%" height="15" fill="rgb(221,166,19)"/><text x="69.7982%" y="1391.50"></text></g><g><title>parser::grammar::items::macro_rules (16 samples, 0.89%)</title><rect x="69.5482%" y="1365" width="0.8924%" height="15" fill="rgb(209,109,2)"/><text x="69.7982%" y="1375.50"></text></g><g><title>parser::grammar::items::token_tree (16 samples, 0.89%)</title><rect x="69.5482%" y="1349" width="0.8924%" height="15" fill="rgb(252,216,26)"/><text x="69.7982%" y="1359.50"></text></g><g><title>parser::grammar::items::token_tree (16 samples, 0.89%)</title><rect x="69.5482%" y="1333" width="0.8924%" height="15" fill="rgb(227,173,36)"/><text x="69.7982%" y="1343.50"></text></g><g><title>parser::parser::Parser::bump_any (3 samples, 0.17%)</title><rect x="70.2733%" y="1317" width="0.1673%" height="15" fill="rgb(209,90,7)"/><text x="70.5233%" y="1327.50"></text></g><g><title>parser::parser::Parser::nth (1 samples, 0.06%)</title><rect x="70.3848%" y="1301" width="0.0558%" height="15" fill="rgb(250,194,11)"/><text x="70.6348%" y="1311.50"></text></g><g><title>&lt;syntax::parsing::text_token_source::TextTokenSource as parser::TokenSource&gt;::lookahead_nth (1 samples, 0.06%)</title><rect x="70.3848%" y="1285" width="0.0558%" height="15" fill="rgb(220,72,50)"/><text x="70.6348%" y="1295.50"></text></g><g><title>syntax::parsing::text_tree_sink::TextTreeSink::eat_n_trivias (1 samples, 0.06%)</title><rect x="70.4406%" y="1429" width="0.0558%" height="15" fill="rgb(222,106,48)"/><text x="70.6906%" y="1439.50"></text></g><g><title>syntax::parsing::text_tree_sink::TextTreeSink::do_token (1 samples, 0.06%)</title><rect x="70.4406%" y="1413" width="0.0558%" height="15" fill="rgb(216,220,45)"/><text x="70.6906%" y="1423.50"></text></g><g><title>syntax::syntax_node::SyntaxTreeBuilder::token (1 samples, 0.06%)</title><rect x="70.4406%" y="1397" width="0.0558%" height="15" fill="rgb(234,112,18)"/><text x="70.6906%" y="1407.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::token (1 samples, 0.06%)</title><rect x="70.4406%" y="1381" width="0.0558%" height="15" fill="rgb(206,179,9)"/><text x="70.6906%" y="1391.50"></text></g><g><title>rowan::green::builder::NodeCache::token (1 samples, 0.06%)</title><rect x="70.4406%" y="1365" width="0.0558%" height="15" fill="rgb(215,115,40)"/><text x="70.6906%" y="1375.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (1 samples, 0.06%)</title><rect x="70.4406%" y="1349" width="0.0558%" height="15" fill="rgb(222,69,34)"/><text x="70.6906%" y="1359.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::search (1 samples, 0.06%)</title><rect x="70.4406%" y="1333" width="0.0558%" height="15" fill="rgb(209,161,10)"/><text x="70.6906%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (1 samples, 0.06%)</title><rect x="70.4406%" y="1317" width="0.0558%" height="15" fill="rgb(217,6,38)"/><text x="70.6906%" y="1327.50"></text></g><g><title>&lt;syntax::parsing::text_tree_sink::TextTreeSink as parser::TreeSink&gt;::start_node (3 samples, 0.17%)</title><rect x="70.4406%" y="1445" width="0.1673%" height="15" fill="rgb(229,229,48)"/><text x="70.6906%" y="1455.50"></text></g><g><title>syntax::syntax_node::SyntaxTreeBuilder::finish_node (2 samples, 0.11%)</title><rect x="70.4964%" y="1429" width="0.1115%" height="15" fill="rgb(225,21,28)"/><text x="70.7464%" y="1439.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::finish_node (2 samples, 0.11%)</title><rect x="70.4964%" y="1413" width="0.1115%" height="15" fill="rgb(206,33,13)"/><text x="70.7464%" y="1423.50"></text></g><g><title>rowan::green::builder::NodeCache::node (2 samples, 0.11%)</title><rect x="70.4964%" y="1397" width="0.1115%" height="15" fill="rgb(242,178,17)"/><text x="70.7464%" y="1407.50"></text></g><g><title>rowan::green::builder::NodeCache::node::{{closure}} (2 samples, 0.11%)</title><rect x="70.4964%" y="1381" width="0.1115%" height="15" fill="rgb(220,162,5)"/><text x="70.7464%" y="1391.50"></text></g><g><title>rowan::green::node::GreenNode::new (2 samples, 0.11%)</title><rect x="70.4964%" y="1365" width="0.1115%" height="15" fill="rgb(210,33,43)"/><text x="70.7464%" y="1375.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::from_header_and_iter (2 samples, 0.11%)</title><rect x="70.4964%" y="1349" width="0.1115%" height="15" fill="rgb(216,116,54)"/><text x="70.7464%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="70.4964%" y="1333" width="0.1115%" height="15" fill="rgb(249,92,24)"/><text x="70.7464%" y="1343.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="70.4964%" y="1317" width="0.1115%" height="15" fill="rgb(231,189,14)"/><text x="70.7464%" y="1327.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="70.4964%" y="1301" width="0.1115%" height="15" fill="rgb(230,8,41)"/><text x="70.7464%" y="1311.50"></text></g><g><title>sysmalloc (2 samples, 0.11%)</title><rect x="70.4964%" y="1285" width="0.1115%" height="15" fill="rgb(249,7,27)"/><text x="70.7464%" y="1295.50"></text></g><g><title>__GI___mprotect (2 samples, 0.11%)</title><rect x="70.4964%" y="1269" width="0.1115%" height="15" fill="rgb(232,86,5)"/><text x="70.7464%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="70.4964%" y="1253" width="0.1115%" height="15" fill="rgb(224,175,18)"/><text x="70.7464%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1237" width="0.0558%" height="15" fill="rgb(220,129,12)"/><text x="70.8021%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1221" width="0.0558%" height="15" fill="rgb(210,19,36)"/><text x="70.8021%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1205" width="0.0558%" height="15" fill="rgb(219,96,14)"/><text x="70.8021%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1189" width="0.0558%" height="15" fill="rgb(249,106,1)"/><text x="70.8021%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1173" width="0.0558%" height="15" fill="rgb(249,155,20)"/><text x="70.8021%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1157" width="0.0558%" height="15" fill="rgb(244,168,9)"/><text x="70.8021%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1141" width="0.0558%" height="15" fill="rgb(216,23,50)"/><text x="70.8021%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1125" width="0.0558%" height="15" fill="rgb(224,219,20)"/><text x="70.8021%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="70.5521%" y="1109" width="0.0558%" height="15" fill="rgb(222,156,15)"/><text x="70.8021%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.11%)</title><rect x="70.7752%" y="1365" width="0.1115%" height="15" fill="rgb(231,97,17)"/><text x="71.0252%" y="1375.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="70.7752%" y="1349" width="0.1115%" height="15" fill="rgb(218,70,48)"/><text x="71.0252%" y="1359.50"></text></g><g><title>&lt;rowan::green::token::GreenToken as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="70.8868%" y="1349" width="0.0558%" height="15" fill="rgb(212,196,52)"/><text x="71.1368%" y="1359.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="70.8868%" y="1333" width="0.0558%" height="15" fill="rgb(243,203,18)"/><text x="71.1368%" y="1343.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::with_arc (1 samples, 0.06%)</title><rect x="70.8868%" y="1317" width="0.0558%" height="15" fill="rgb(252,125,41)"/><text x="71.1368%" y="1327.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone::{{closure}} (1 samples, 0.06%)</title><rect x="70.8868%" y="1301" width="0.0558%" height="15" fill="rgb(223,180,33)"/><text x="71.1368%" y="1311.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="70.8868%" y="1285" width="0.0558%" height="15" fill="rgb(254,159,46)"/><text x="71.1368%" y="1295.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="70.9426%" y="1333" width="0.0558%" height="15" fill="rgb(254,38,10)"/><text x="71.1926%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.11%)</title><rect x="70.9426%" y="1349" width="0.1115%" height="15" fill="rgb(208,217,32)"/><text x="71.1926%" y="1359.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u8 (1 samples, 0.06%)</title><rect x="70.9983%" y="1333" width="0.0558%" height="15" fill="rgb(221,120,13)"/><text x="71.2483%" y="1343.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.06%)</title><rect x="70.9983%" y="1317" width="0.0558%" height="15" fill="rgb(246,54,52)"/><text x="71.2483%" y="1327.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.06%)</title><rect x="70.9983%" y="1301" width="0.0558%" height="15" fill="rgb(242,34,25)"/><text x="71.2483%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="71.1656%" y="1301" width="0.0558%" height="15" fill="rgb(247,209,9)"/><text x="71.4156%" y="1311.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::search::{{closure}} (2 samples, 0.11%)</title><rect x="71.2214%" y="1301" width="0.1115%" height="15" fill="rgb(228,71,26)"/><text x="71.4714%" y="1311.50"></text></g><g><title>rowan::green::builder::NodeCache::token::{{closure}} (2 samples, 0.11%)</title><rect x="71.2214%" y="1285" width="0.1115%" height="15" fill="rgb(222,145,49)"/><text x="71.4714%" y="1295.50"></text></g><g><title>&lt;rowan::green::SyntaxKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.06%)</title><rect x="71.2772%" y="1269" width="0.0558%" height="15" fill="rgb(218,121,17)"/><text x="71.5272%" y="1279.50"></text></g><g><title>syntax::parsing::text_tree_sink::TextTreeSink::eat_trivias (11 samples, 0.61%)</title><rect x="70.7752%" y="1429" width="0.6135%" height="15" fill="rgb(244,50,7)"/><text x="71.0252%" y="1439.50"></text></g><g><title>syntax::parsing::text_tree_sink::TextTreeSink::do_token (11 samples, 0.61%)</title><rect x="70.7752%" y="1413" width="0.6135%" height="15" fill="rgb(246,229,37)"/><text x="71.0252%" y="1423.50"></text></g><g><title>syntax::syntax_node::SyntaxTreeBuilder::token (11 samples, 0.61%)</title><rect x="70.7752%" y="1397" width="0.6135%" height="15" fill="rgb(225,18,5)"/><text x="71.0252%" y="1407.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::token (11 samples, 0.61%)</title><rect x="70.7752%" y="1381" width="0.6135%" height="15" fill="rgb(213,204,8)"/><text x="71.0252%" y="1391.50"></text></g><g><title>rowan::green::builder::NodeCache::token (9 samples, 0.50%)</title><rect x="70.8868%" y="1365" width="0.5020%" height="15" fill="rgb(238,103,6)"/><text x="71.1368%" y="1375.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (6 samples, 0.33%)</title><rect x="71.0541%" y="1349" width="0.3346%" height="15" fill="rgb(222,25,35)"/><text x="71.3041%" y="1359.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::search (6 samples, 0.33%)</title><rect x="71.0541%" y="1333" width="0.3346%" height="15" fill="rgb(213,203,35)"/><text x="71.3041%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (6 samples, 0.33%)</title><rect x="71.0541%" y="1317" width="0.3346%" height="15" fill="rgb(221,79,53)"/><text x="71.3041%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter_hash (1 samples, 0.06%)</title><rect x="71.3330%" y="1301" width="0.0558%" height="15" fill="rgb(243,200,35)"/><text x="71.5830%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T&gt;::new (1 samples, 0.06%)</title><rect x="71.3330%" y="1285" width="0.0558%" height="15" fill="rgb(248,60,25)"/><text x="71.5830%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="71.3330%" y="1269" width="0.0558%" height="15" fill="rgb(227,53,46)"/><text x="71.5830%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="71.3887%" y="1397" width="0.0558%" height="15" fill="rgb(216,120,32)"/><text x="71.6387%" y="1407.50"></text></g><g><title>core::ptr::write (1 samples, 0.06%)</title><rect x="71.3887%" y="1381" width="0.0558%" height="15" fill="rgb(220,134,1)"/><text x="71.6387%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.11%)</title><rect x="71.4445%" y="1333" width="0.1115%" height="15" fill="rgb(237,168,5)"/><text x="71.6945%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.11%)</title><rect x="71.4445%" y="1317" width="0.1115%" height="15" fill="rgb(231,100,33)"/><text x="71.6945%" y="1327.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.11%)</title><rect x="71.4445%" y="1301" width="0.1115%" height="15" fill="rgb(236,177,47)"/><text x="71.6945%" y="1311.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.11%)</title><rect x="71.4445%" y="1285" width="0.1115%" height="15" fill="rgb(235,7,49)"/><text x="71.6945%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.11%)</title><rect x="71.4445%" y="1269" width="0.1115%" height="15" fill="rgb(232,119,22)"/><text x="71.6945%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="71.5561%" y="1333" width="0.1115%" height="15" fill="rgb(254,73,53)"/><text x="71.8061%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.11%)</title><rect x="71.5561%" y="1317" width="0.1115%" height="15" fill="rgb(251,35,20)"/><text x="71.8061%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.11%)</title><rect x="71.5561%" y="1301" width="0.1115%" height="15" fill="rgb(241,119,20)"/><text x="71.8061%" y="1311.50"></text></g><g><title>rowan::green::node::GreenNode::new::{{closure}} (2 samples, 0.11%)</title><rect x="71.5561%" y="1285" width="0.1115%" height="15" fill="rgb(207,102,14)"/><text x="71.8061%" y="1295.50"></text></g><g><title>rowan::green::element::&lt;impl rowan::utility_types::NodeOrToken&lt;rowan::green::node::GreenNode,rowan::green::token::GreenToken&gt;&gt;::text_len (2 samples, 0.11%)</title><rect x="71.5561%" y="1269" width="0.1115%" height="15" fill="rgb(248,201,50)"/><text x="71.8061%" y="1279.50"></text></g><g><title>rowan::green::element::&lt;impl rowan::utility_types::NodeOrToken&lt;&amp;rowan::green::node::GreenNode,&amp;rowan::green::token::GreenToken&gt;&gt;::text_len (2 samples, 0.11%)</title><rect x="71.5561%" y="1253" width="0.1115%" height="15" fill="rgb(222,185,44)"/><text x="71.8061%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="71.6676%" y="1269" width="0.0558%" height="15" fill="rgb(218,107,18)"/><text x="71.9176%" y="1279.50"></text></g><g><title>&lt;syntax::parsing::text_tree_sink::TextTreeSink as parser::TreeSink&gt;::token (23 samples, 1.28%)</title><rect x="70.6079%" y="1445" width="1.2828%" height="15" fill="rgb(237,177,39)"/><text x="70.8579%" y="1455.50"></text></g><g><title>syntax::syntax_node::SyntaxTreeBuilder::finish_node (9 samples, 0.50%)</title><rect x="71.3887%" y="1429" width="0.5020%" height="15" fill="rgb(246,69,6)"/><text x="71.6387%" y="1439.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::finish_node (9 samples, 0.50%)</title><rect x="71.3887%" y="1413" width="0.5020%" height="15" fill="rgb(234,208,37)"/><text x="71.6387%" y="1423.50"></text></g><g><title>rowan::green::builder::NodeCache::node (8 samples, 0.45%)</title><rect x="71.4445%" y="1397" width="0.4462%" height="15" fill="rgb(225,4,6)"/><text x="71.6945%" y="1407.50"></text></g><g><title>rowan::green::builder::NodeCache::node::{{closure}} (8 samples, 0.45%)</title><rect x="71.4445%" y="1381" width="0.4462%" height="15" fill="rgb(233,45,0)"/><text x="71.6945%" y="1391.50"></text></g><g><title>rowan::green::node::GreenNode::new (8 samples, 0.45%)</title><rect x="71.4445%" y="1365" width="0.4462%" height="15" fill="rgb(226,136,5)"/><text x="71.6945%" y="1375.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::from_header_and_iter (8 samples, 0.45%)</title><rect x="71.4445%" y="1349" width="0.4462%" height="15" fill="rgb(211,91,47)"/><text x="71.6945%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.22%)</title><rect x="71.6676%" y="1333" width="0.2231%" height="15" fill="rgb(242,88,51)"/><text x="71.9176%" y="1343.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.22%)</title><rect x="71.6676%" y="1317" width="0.2231%" height="15" fill="rgb(230,91,28)"/><text x="71.9176%" y="1327.50"></text></g><g><title>_int_malloc (4 samples, 0.22%)</title><rect x="71.6676%" y="1301" width="0.2231%" height="15" fill="rgb(254,186,29)"/><text x="71.9176%" y="1311.50"></text></g><g><title>sysmalloc (4 samples, 0.22%)</title><rect x="71.6676%" y="1285" width="0.2231%" height="15" fill="rgb(238,6,4)"/><text x="71.9176%" y="1295.50"></text></g><g><title>__GI___mprotect (3 samples, 0.17%)</title><rect x="71.7234%" y="1269" width="0.1673%" height="15" fill="rgb(221,151,16)"/><text x="71.9734%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="71.7234%" y="1253" width="0.1673%" height="15" fill="rgb(251,143,52)"/><text x="71.9734%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1237" width="0.1115%" height="15" fill="rgb(206,90,15)"/><text x="72.0291%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1221" width="0.1115%" height="15" fill="rgb(218,35,8)"/><text x="72.0291%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1205" width="0.1115%" height="15" fill="rgb(239,215,6)"/><text x="72.0291%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1189" width="0.1115%" height="15" fill="rgb(245,116,39)"/><text x="72.0291%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1173" width="0.1115%" height="15" fill="rgb(242,65,28)"/><text x="72.0291%" y="1183.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1157" width="0.1115%" height="15" fill="rgb(252,132,53)"/><text x="72.0291%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1141" width="0.1115%" height="15" fill="rgb(224,159,50)"/><text x="72.0291%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1125" width="0.1115%" height="15" fill="rgb(224,93,4)"/><text x="72.0291%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1109" width="0.1115%" height="15" fill="rgb(208,81,34)"/><text x="72.0291%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="71.7791%" y="1093" width="0.1115%" height="15" fill="rgb(233,92,54)"/><text x="72.0291%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="71.8907%" y="1445" width="0.0558%" height="15" fill="rgb(237,21,14)"/><text x="72.1407%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parser::event::Event&gt;&gt; (1 samples, 0.06%)</title><rect x="71.9465%" y="1445" width="0.0558%" height="15" fill="rgb(249,128,51)"/><text x="72.1965%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="71.9465%" y="1429" width="0.0558%" height="15" fill="rgb(223,129,24)"/><text x="72.1965%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parser::event::Event]&gt; (1 samples, 0.06%)</title><rect x="71.9465%" y="1413" width="0.0558%" height="15" fill="rgb(231,168,25)"/><text x="72.1965%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;parser::event::Event&gt; (1 samples, 0.06%)</title><rect x="71.9465%" y="1397" width="0.0558%" height="15" fill="rgb(224,39,20)"/><text x="72.1965%" y="1407.50"></text></g><g><title>&lt;rowan::green::token::GreenToken as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="72.0022%" y="1381" width="0.0558%" height="15" fill="rgb(225,152,53)"/><text x="72.2522%" y="1391.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="72.0022%" y="1365" width="0.0558%" height="15" fill="rgb(252,17,24)"/><text x="72.2522%" y="1375.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::with_arc (1 samples, 0.06%)</title><rect x="72.0022%" y="1349" width="0.0558%" height="15" fill="rgb(250,114,30)"/><text x="72.2522%" y="1359.50"></text></g><g><title>&lt;rowan::arc::ThinArc&lt;H,T&gt; as core::clone::Clone&gt;::clone::{{closure}} (1 samples, 0.06%)</title><rect x="72.0022%" y="1333" width="0.0558%" height="15" fill="rgb(229,5,4)"/><text x="72.2522%" y="1343.50"></text></g><g><title>&lt;rowan::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="72.0022%" y="1317" width="0.0558%" height="15" fill="rgb(225,176,49)"/><text x="72.2522%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="72.0580%" y="1333" width="0.1673%" height="15" fill="rgb(224,221,49)"/><text x="72.3080%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="72.0580%" y="1317" width="0.1673%" height="15" fill="rgb(253,169,27)"/><text x="72.3080%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (2 samples, 0.11%)</title><rect x="72.1138%" y="1301" width="0.1115%" height="15" fill="rgb(211,206,16)"/><text x="72.3638%" y="1311.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::search::{{closure}} (6 samples, 0.33%)</title><rect x="72.2253%" y="1333" width="0.3346%" height="15" fill="rgb(244,87,35)"/><text x="72.4753%" y="1343.50"></text></g><g><title>rowan::green::builder::NodeCache::token::{{closure}} (6 samples, 0.33%)</title><rect x="72.2253%" y="1317" width="0.3346%" height="15" fill="rgb(246,28,10)"/><text x="72.4753%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (12 samples, 0.67%)</title><rect x="72.0580%" y="1349" width="0.6693%" height="15" fill="rgb(229,12,44)"/><text x="72.3080%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter_hash (3 samples, 0.17%)</title><rect x="72.5600%" y="1333" width="0.1673%" height="15" fill="rgb(210,145,37)"/><text x="72.8100%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T&gt;::new (3 samples, 0.17%)</title><rect x="72.5600%" y="1317" width="0.1673%" height="15" fill="rgb(227,112,52)"/><text x="72.8100%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (2 samples, 0.11%)</title><rect x="72.6157%" y="1301" width="0.1115%" height="15" fill="rgb(238,155,34)"/><text x="72.8657%" y="1311.50"></text></g><g><title>rowan::green::builder::NodeCache::token (2 samples, 0.11%)</title><rect x="72.6157%" y="1285" width="0.1115%" height="15" fill="rgb(239,226,36)"/><text x="72.8657%" y="1295.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (13 samples, 0.73%)</title><rect x="72.0580%" y="1381" width="0.7250%" height="15" fill="rgb(230,16,23)"/><text x="72.3080%" y="1391.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S&gt;::search (13 samples, 0.73%)</title><rect x="72.0580%" y="1365" width="0.7250%" height="15" fill="rgb(236,171,36)"/><text x="72.3080%" y="1375.50"></text></g><g><title>rowan::green::builder::NodeCache::token (1 samples, 0.06%)</title><rect x="72.7273%" y="1349" width="0.0558%" height="15" fill="rgb(221,22,14)"/><text x="72.9773%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (2 samples, 0.11%)</title><rect x="72.7830%" y="1317" width="0.1115%" height="15" fill="rgb(242,43,11)"/><text x="73.0330%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="72.8388%" y="1301" width="0.0558%" height="15" fill="rgb(232,69,23)"/><text x="73.0888%" y="1311.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S&gt;::insert_hashed_nocheck (3 samples, 0.17%)</title><rect x="72.7830%" y="1381" width="0.1673%" height="15" fill="rgb(216,180,54)"/><text x="73.0330%" y="1391.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S&gt;::insert_with_hasher (3 samples, 0.17%)</title><rect x="72.7830%" y="1365" width="0.1673%" height="15" fill="rgb(216,5,24)"/><text x="73.0330%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert_entry (3 samples, 0.17%)</title><rect x="72.7830%" y="1349" width="0.1673%" height="15" fill="rgb(225,89,9)"/><text x="73.0330%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (3 samples, 0.17%)</title><rect x="72.7830%" y="1333" width="0.1673%" height="15" fill="rgb(243,75,33)"/><text x="73.0330%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (1 samples, 0.06%)</title><rect x="72.8946%" y="1317" width="0.0558%" height="15" fill="rgb(247,141,45)"/><text x="73.1446%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="72.8946%" y="1301" width="0.0558%" height="15" fill="rgb(232,177,36)"/><text x="73.1446%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (1 samples, 0.06%)</title><rect x="72.8946%" y="1285" width="0.0558%" height="15" fill="rgb(219,125,36)"/><text x="73.1446%" y="1295.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (1 samples, 0.06%)</title><rect x="72.8946%" y="1269" width="0.0558%" height="15" fill="rgb(227,94,9)"/><text x="73.1446%" y="1279.50"></text></g><g><title>parser::parse (62 samples, 3.46%)</title><rect x="69.5482%" y="1493" width="3.4579%" height="15" fill="rgb(240,34,52)"/><text x="69.7982%" y="1503.50">par..</text></g><g><title>parser::parse_from_tokens (62 samples, 3.46%)</title><rect x="69.5482%" y="1477" width="3.4579%" height="15" fill="rgb(216,45,12)"/><text x="69.7982%" y="1487.50">par..</text></g><g><title>parser::event::process (46 samples, 2.57%)</title><rect x="70.4406%" y="1461" width="2.5655%" height="15" fill="rgb(246,21,19)"/><text x="70.6906%" y="1471.50">pa..</text></g><g><title>syntax::parsing::text_tree_sink::TextTreeSink::do_token (18 samples, 1.00%)</title><rect x="72.0022%" y="1445" width="1.0039%" height="15" fill="rgb(213,98,42)"/><text x="72.2522%" y="1455.50"></text></g><g><title>syntax::syntax_node::SyntaxTreeBuilder::token (18 samples, 1.00%)</title><rect x="72.0022%" y="1429" width="1.0039%" height="15" fill="rgb(250,136,47)"/><text x="72.2522%" y="1439.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::token (18 samples, 1.00%)</title><rect x="72.0022%" y="1413" width="1.0039%" height="15" fill="rgb(251,124,27)"/><text x="72.2522%" y="1423.50"></text></g><g><title>rowan::green::builder::NodeCache::token (18 samples, 1.00%)</title><rect x="72.0022%" y="1397" width="1.0039%" height="15" fill="rgb(229,180,14)"/><text x="72.2522%" y="1407.50"></text></g><g><title>rowan::green::token::GreenToken::new (1 samples, 0.06%)</title><rect x="72.9504%" y="1381" width="0.0558%" height="15" fill="rgb(245,216,25)"/><text x="73.2004%" y="1391.50"></text></g><g><title>rowan::arc::ThinArc&lt;H,T&gt;::from_header_and_iter (1 samples, 0.06%)</title><rect x="72.9504%" y="1365" width="0.0558%" height="15" fill="rgb(251,43,5)"/><text x="73.2004%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="72.9504%" y="1349" width="0.0558%" height="15" fill="rgb(250,128,24)"/><text x="73.2004%" y="1359.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="72.9504%" y="1333" width="0.0558%" height="15" fill="rgb(217,117,27)"/><text x="73.2004%" y="1343.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (6 samples, 0.33%)</title><rect x="74.0658%" y="1477" width="0.3346%" height="15" fill="rgb(245,147,4)"/><text x="74.3158%" y="1487.50"></text></g><g><title>&lt;text_size::size::TextSize as core::convert::TryFrom&lt;usize&gt;&gt;::try_from (6 samples, 0.33%)</title><rect x="74.0658%" y="1461" width="0.3346%" height="15" fill="rgb(242,201,35)"/><text x="74.3158%" y="1471.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (6 samples, 0.33%)</title><rect x="74.0658%" y="1445" width="0.3346%" height="15" fill="rgb(218,181,1)"/><text x="74.3158%" y="1455.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.06%)</title><rect x="75.2370%" y="1381" width="0.0558%" height="15" fill="rgb(222,6,29)"/><text x="75.4870%" y="1391.50"></text></g><g><title>rustc_ap_rustc_lexer::is_id_continue (1 samples, 0.06%)</title><rect x="75.2370%" y="1365" width="0.0558%" height="15" fill="rgb(208,186,3)"/><text x="75.4870%" y="1375.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.06%)</title><rect x="75.2370%" y="1349" width="0.0558%" height="15" fill="rgb(216,36,26)"/><text x="75.4870%" y="1359.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.06%)</title><rect x="75.2370%" y="1333" width="0.0558%" height="15" fill="rgb(248,201,23)"/><text x="75.4870%" y="1343.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::bump (2 samples, 0.11%)</title><rect x="75.2928%" y="1381" width="0.1115%" height="15" fill="rgb(251,170,31)"/><text x="75.5428%" y="1391.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="75.2928%" y="1365" width="0.1115%" height="15" fill="rgb(207,110,25)"/><text x="75.5428%" y="1375.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.11%)</title><rect x="75.2928%" y="1349" width="0.1115%" height="15" fill="rgb(250,54,15)"/><text x="75.5428%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (1 samples, 0.06%)</title><rect x="75.4044%" y="1349" width="0.0558%" height="15" fill="rgb(227,68,33)"/><text x="75.6544%" y="1359.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="75.4044%" y="1333" width="0.0558%" height="15" fill="rgb(238,34,41)"/><text x="75.6544%" y="1343.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.06%)</title><rect x="75.4044%" y="1317" width="0.0558%" height="15" fill="rgb(220,11,15)"/><text x="75.6544%" y="1327.50"></text></g><g><title>rustc_ap_rustc_lexer::&lt;impl rustc_ap_rustc_lexer::cursor::Cursor&gt;::ident (6 samples, 0.33%)</title><rect x="75.2370%" y="1413" width="0.3346%" height="15" fill="rgb(246,111,35)"/><text x="75.4870%" y="1423.50"></text></g><g><title>rustc_ap_rustc_lexer::&lt;impl rustc_ap_rustc_lexer::cursor::Cursor&gt;::eat_while (6 samples, 0.33%)</title><rect x="75.2370%" y="1397" width="0.3346%" height="15" fill="rgb(209,88,53)"/><text x="75.4870%" y="1407.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::first (3 samples, 0.17%)</title><rect x="75.4044%" y="1381" width="0.1673%" height="15" fill="rgb(231,185,47)"/><text x="75.6544%" y="1391.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::nth_char (3 samples, 0.17%)</title><rect x="75.4044%" y="1365" width="0.1673%" height="15" fill="rgb(233,154,1)"/><text x="75.6544%" y="1375.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::chars (2 samples, 0.11%)</title><rect x="75.4601%" y="1349" width="0.1115%" height="15" fill="rgb(225,15,46)"/><text x="75.7101%" y="1359.50"></text></g><g><title>&lt;core::str::iter::Chars as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="75.4601%" y="1333" width="0.1115%" height="15" fill="rgb(211,135,41)"/><text x="75.7101%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="75.4601%" y="1317" width="0.1115%" height="15" fill="rgb(208,54,0)"/><text x="75.7101%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (1 samples, 0.06%)</title><rect x="75.5717%" y="1349" width="0.0558%" height="15" fill="rgb(244,136,14)"/><text x="75.8217%" y="1359.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="75.5717%" y="1333" width="0.0558%" height="15" fill="rgb(241,56,14)"/><text x="75.8217%" y="1343.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.06%)</title><rect x="75.5717%" y="1317" width="0.0558%" height="15" fill="rgb(205,80,24)"/><text x="75.8217%" y="1327.50"></text></g><g><title>rustc_ap_rustc_lexer::&lt;impl rustc_ap_rustc_lexer::cursor::Cursor&gt;::whitespace (2 samples, 0.11%)</title><rect x="75.5717%" y="1413" width="0.1115%" height="15" fill="rgb(220,57,4)"/><text x="75.8217%" y="1423.50"></text></g><g><title>rustc_ap_rustc_lexer::&lt;impl rustc_ap_rustc_lexer::cursor::Cursor&gt;::eat_while (2 samples, 0.11%)</title><rect x="75.5717%" y="1397" width="0.1115%" height="15" fill="rgb(226,193,50)"/><text x="75.8217%" y="1407.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::first (2 samples, 0.11%)</title><rect x="75.5717%" y="1381" width="0.1115%" height="15" fill="rgb(231,168,22)"/><text x="75.8217%" y="1391.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::nth_char (2 samples, 0.11%)</title><rect x="75.5717%" y="1365" width="0.1115%" height="15" fill="rgb(254,215,14)"/><text x="75.8217%" y="1375.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::chars (1 samples, 0.06%)</title><rect x="75.6274%" y="1349" width="0.0558%" height="15" fill="rgb(211,115,16)"/><text x="75.8774%" y="1359.50"></text></g><g><title>&lt;core::str::iter::Chars as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="75.6274%" y="1333" width="0.0558%" height="15" fill="rgb(236,210,16)"/><text x="75.8774%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="75.6274%" y="1317" width="0.0558%" height="15" fill="rgb(221,94,12)"/><text x="75.8774%" y="1327.50"></text></g><g><title>rustc_ap_rustc_lexer::cursor::Cursor::len_consumed (1 samples, 0.06%)</title><rect x="75.6832%" y="1413" width="0.0558%" height="15" fill="rgb(235,218,49)"/><text x="75.9332%" y="1423.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 1.39%)</title><rect x="74.4004%" y="1477" width="1.3943%" height="15" fill="rgb(217,114,14)"/><text x="74.6504%" y="1487.50"></text></g><g><title>rustc_ap_rustc_lexer::tokenize::{{closure}} (25 samples, 1.39%)</title><rect x="74.4004%" y="1461" width="1.3943%" height="15" fill="rgb(216,145,22)"/><text x="74.6504%" y="1471.50"></text></g><g><title>rustc_ap_rustc_lexer::first_token (14 samples, 0.78%)</title><rect x="75.0139%" y="1445" width="0.7808%" height="15" fill="rgb(217,112,39)"/><text x="75.2639%" y="1455.50"></text></g><g><title>rustc_ap_rustc_lexer::&lt;impl rustc_ap_rustc_lexer::cursor::Cursor&gt;::advance_token (12 samples, 0.67%)</title><rect x="75.1255%" y="1429" width="0.6693%" height="15" fill="rgb(225,85,32)"/><text x="75.3755%" y="1439.50"></text></g><g><title>rustc_ap_rustc_lexer::is_id_start (1 samples, 0.06%)</title><rect x="75.7390%" y="1413" width="0.0558%" height="15" fill="rgb(245,209,47)"/><text x="75.9890%" y="1423.50"></text></g><g><title>syntax::parsing::lexer::rustc_token_kind_to_syntax_kind (4 samples, 0.22%)</title><rect x="75.7948%" y="1477" width="0.2231%" height="15" fill="rgb(218,220,15)"/><text x="76.0448%" y="1487.50"></text></g><g><title>parser::syntax_kind::generated::SyntaxKind::from_keyword (3 samples, 0.17%)</title><rect x="75.8505%" y="1461" width="0.1673%" height="15" fill="rgb(222,202,31)"/><text x="76.1005%" y="1471.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.17%)</title><rect x="75.8505%" y="1445" width="0.1673%" height="15" fill="rgb(243,203,4)"/><text x="76.1005%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.17%)</title><rect x="75.8505%" y="1429" width="0.1673%" height="15" fill="rgb(237,92,17)"/><text x="76.1005%" y="1439.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.17%)</title><rect x="75.8505%" y="1413" width="0.1673%" height="15" fill="rgb(231,119,7)"/><text x="76.1005%" y="1423.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.17%)</title><rect x="75.8505%" y="1397" width="0.1673%" height="15" fill="rgb(237,82,41)"/><text x="76.1005%" y="1407.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="75.9621%" y="1381" width="0.0558%" height="15" fill="rgb(226,81,48)"/><text x="76.2121%" y="1391.50"></text></g><g><title>text_size::range::&lt;impl core::ops::index::Index&lt;text_size::range::TextRange&gt; for str&gt;::index (1 samples, 0.06%)</title><rect x="76.0178%" y="1477" width="0.0558%" height="15" fill="rgb(234,70,51)"/><text x="76.2678%" y="1487.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.06%)</title><rect x="76.0178%" y="1461" width="0.0558%" height="15" fill="rgb(251,86,4)"/><text x="76.2678%" y="1471.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.06%)</title><rect x="76.0178%" y="1445" width="0.0558%" height="15" fill="rgb(244,144,28)"/><text x="76.2678%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.06%)</title><rect x="76.0178%" y="1429" width="0.0558%" height="15" fill="rgb(232,161,39)"/><text x="76.2678%" y="1439.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.06%)</title><rect x="76.0178%" y="1413" width="0.0558%" height="15" fill="rgb(247,34,51)"/><text x="76.2678%" y="1423.50"></text></g><g><title>syntax::parsing::lexer::tokenize (57 samples, 3.18%)</title><rect x="73.0061%" y="1493" width="3.1790%" height="15" fill="rgb(225,132,2)"/><text x="73.2561%" y="1503.50">syn..</text></g><g><title>text_size::range::TextRange::at (2 samples, 0.11%)</title><rect x="76.0736%" y="1477" width="0.1115%" height="15" fill="rgb(209,159,44)"/><text x="76.3236%" y="1487.50"></text></g><g><title>text_size::range::TextRange::new (2 samples, 0.11%)</title><rect x="76.0736%" y="1461" width="0.1115%" height="15" fill="rgb(251,214,1)"/><text x="76.3236%" y="1471.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.11%)</title><rect x="76.0736%" y="1445" width="0.1115%" height="15" fill="rgb(247,84,47)"/><text x="76.3236%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="76.2409%" y="1381" width="0.0558%" height="15" fill="rgb(240,111,43)"/><text x="76.4909%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="76.2409%" y="1365" width="0.0558%" height="15" fill="rgb(215,214,35)"/><text x="76.4909%" y="1375.50"></text></g><g><title>syntax::parsing::parse_text (123 samples, 6.86%)</title><rect x="69.5482%" y="1509" width="6.8600%" height="15" fill="rgb(248,207,23)"/><text x="69.7982%" y="1519.50">syntax::p..</text></g><g><title>syntax::parsing::text_token_source::TextTokenSource::new (4 samples, 0.22%)</title><rect x="76.1852%" y="1493" width="0.2231%" height="15" fill="rgb(214,186,4)"/><text x="76.4352%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.22%)</title><rect x="76.1852%" y="1477" width="0.2231%" height="15" fill="rgb(220,133,22)"/><text x="76.4352%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="76.1852%" y="1461" width="0.2231%" height="15" fill="rgb(239,134,19)"/><text x="76.4352%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="76.1852%" y="1445" width="0.2231%" height="15" fill="rgb(250,140,9)"/><text x="76.4352%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="76.1852%" y="1429" width="0.2231%" height="15" fill="rgb(225,59,14)"/><text x="76.4352%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.22%)</title><rect x="76.1852%" y="1413" width="0.2231%" height="15" fill="rgb(214,152,51)"/><text x="76.4352%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.22%)</title><rect x="76.1852%" y="1397" width="0.2231%" height="15" fill="rgb(251,227,43)"/><text x="76.4352%" y="1407.50"></text></g><g><title>core::ptr::write (2 samples, 0.11%)</title><rect x="76.2967%" y="1381" width="0.1115%" height="15" fill="rgb(241,96,17)"/><text x="76.5467%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="76.2967%" y="1365" width="0.1115%" height="15" fill="rgb(234,198,43)"/><text x="76.5467%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="76.2967%" y="1349" width="0.1115%" height="15" fill="rgb(220,108,29)"/><text x="76.5467%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="76.3525%" y="1333" width="0.0558%" height="15" fill="rgb(226,163,33)"/><text x="76.6025%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="76.3525%" y="1317" width="0.0558%" height="15" fill="rgb(205,194,45)"/><text x="76.6025%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="76.3525%" y="1301" width="0.0558%" height="15" fill="rgb(206,143,44)"/><text x="76.6025%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="76.3525%" y="1285" width="0.0558%" height="15" fill="rgb(236,136,36)"/><text x="76.6025%" y="1295.50"></text></g><g><title>rowan::cursor::SyntaxNode::first_child (2 samples, 0.11%)</title><rect x="76.4083%" y="1381" width="0.1115%" height="15" fill="rgb(249,172,42)"/><text x="76.6583%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 0.11%)</title><rect x="76.4083%" y="1365" width="0.1115%" height="15" fill="rgb(216,139,23)"/><text x="76.6583%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.11%)</title><rect x="76.4083%" y="1349" width="0.1115%" height="15" fill="rgb(207,166,20)"/><text x="76.6583%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.11%)</title><rect x="76.4083%" y="1333" width="0.1115%" height="15" fill="rgb(210,209,22)"/><text x="76.6583%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="76.4083%" y="1317" width="0.1115%" height="15" fill="rgb(232,118,20)"/><text x="76.6583%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.11%)</title><rect x="76.4083%" y="1301" width="0.1115%" height="15" fill="rgb(238,113,42)"/><text x="76.6583%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.11%)</title><rect x="76.4083%" y="1285" width="0.1115%" height="15" fill="rgb(231,42,5)"/><text x="76.6583%" y="1295.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.17%)</title><rect x="76.4083%" y="1429" width="0.1673%" height="15" fill="rgb(243,166,24)"/><text x="76.6583%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.17%)</title><rect x="76.4083%" y="1413" width="0.1673%" height="15" fill="rgb(237,226,12)"/><text x="76.6583%" y="1423.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.17%)</title><rect x="76.4083%" y="1397" width="0.1673%" height="15" fill="rgb(229,133,24)"/><text x="76.6583%" y="1407.50"></text></g><g><title>rowan::cursor::SyntaxNode::next_sibling (1 samples, 0.06%)</title><rect x="76.5198%" y="1381" width="0.0558%" height="15" fill="rgb(238,33,43)"/><text x="76.7698%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.06%)</title><rect x="76.5198%" y="1365" width="0.0558%" height="15" fill="rgb(227,59,38)"/><text x="76.7698%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="76.5198%" y="1349" width="0.0558%" height="15" fill="rgb(230,97,0)"/><text x="76.7698%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.06%)</title><rect x="76.5198%" y="1333" width="0.0558%" height="15" fill="rgb(250,173,50)"/><text x="76.7698%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.06%)</title><rect x="76.5198%" y="1317" width="0.0558%" height="15" fill="rgb(240,15,50)"/><text x="76.7698%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.06%)</title><rect x="76.5198%" y="1301" width="0.0558%" height="15" fill="rgb(221,93,22)"/><text x="76.7698%" y="1311.50"></text></g><g><title>rowan::cursor::SyntaxNode::next_sibling::{{closure}} (1 samples, 0.06%)</title><rect x="76.5198%" y="1285" width="0.0558%" height="15" fill="rgb(245,180,53)"/><text x="76.7698%" y="1295.50"></text></g><g><title>rowan::utility_types::NodeOrToken&lt;N,T&gt;::into_node (1 samples, 0.06%)</title><rect x="76.5198%" y="1269" width="0.0558%" height="15" fill="rgb(231,88,51)"/><text x="76.7698%" y="1279.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="76.5756%" y="1333" width="0.0558%" height="15" fill="rgb(240,58,21)"/><text x="76.8256%" y="1343.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="76.5756%" y="1317" width="0.0558%" height="15" fill="rgb(237,21,10)"/><text x="76.8256%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.28%)</title><rect x="76.4083%" y="1493" width="0.2789%" height="15" fill="rgb(218,43,11)"/><text x="76.6583%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.28%)</title><rect x="76.4083%" y="1477" width="0.2789%" height="15" fill="rgb(218,221,29)"/><text x="76.6583%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (5 samples, 0.28%)</title><rect x="76.4083%" y="1461" width="0.2789%" height="15" fill="rgb(214,118,42)"/><text x="76.6583%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.28%)</title><rect x="76.4083%" y="1445" width="0.2789%" height="15" fill="rgb(251,200,26)"/><text x="76.6583%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2 samples, 0.11%)</title><rect x="76.5756%" y="1429" width="0.1115%" height="15" fill="rgb(237,101,39)"/><text x="76.8256%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.11%)</title><rect x="76.5756%" y="1413" width="0.1115%" height="15" fill="rgb(251,117,11)"/><text x="76.8256%" y="1423.50"></text></g><g><title>rowan::cursor::SyntaxNode::descendants::{{closure}} (2 samples, 0.11%)</title><rect x="76.5756%" y="1397" width="0.1115%" height="15" fill="rgb(216,223,23)"/><text x="76.8256%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::utility_types::WalkEvent&lt;rowan::cursor::SyntaxNode&gt;&gt; (2 samples, 0.11%)</title><rect x="76.5756%" y="1381" width="0.1115%" height="15" fill="rgb(251,54,12)"/><text x="76.8256%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::cursor::SyntaxNode&gt; (2 samples, 0.11%)</title><rect x="76.5756%" y="1365" width="0.1115%" height="15" fill="rgb(254,176,54)"/><text x="76.8256%" y="1375.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="76.5756%" y="1349" width="0.1115%" height="15" fill="rgb(210,32,8)"/><text x="76.8256%" y="1359.50"></text></g><g><title>rowan::cursor::free (1 samples, 0.06%)</title><rect x="76.6313%" y="1333" width="0.0558%" height="15" fill="rgb(235,52,38)"/><text x="76.8813%" y="1343.50"></text></g><g><title>&lt;syntax::ast::generated::nodes::FnPtrType as syntax::ast::AstNode&gt;::cast (1 samples, 0.06%)</title><rect x="76.6871%" y="1493" width="0.0558%" height="15" fill="rgb(231,4,44)"/><text x="76.9371%" y="1503.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::kind (1 samples, 0.06%)</title><rect x="76.6871%" y="1477" width="0.0558%" height="15" fill="rgb(249,2,32)"/><text x="76.9371%" y="1487.50"></text></g><g><title>&lt;syntax::syntax_node::RustLanguage as rowan::api::Language&gt;::kind_from_raw (1 samples, 0.06%)</title><rect x="76.6871%" y="1461" width="0.0558%" height="15" fill="rgb(224,65,26)"/><text x="76.9371%" y="1471.50"></text></g><g><title>parser::syntax_kind::&lt;impl core::convert::From&lt;u16&gt; for parser::syntax_kind::generated::SyntaxKind&gt;::from (1 samples, 0.06%)</title><rect x="76.6871%" y="1445" width="0.0558%" height="15" fill="rgb(250,73,40)"/><text x="76.9371%" y="1455.50"></text></g><g><title>&lt;syntax::ast::generated::nodes::Literal as syntax::ast::AstNode&gt;::cast (1 samples, 0.06%)</title><rect x="76.7429%" y="1493" width="0.0558%" height="15" fill="rgb(253,177,16)"/><text x="76.9929%" y="1503.50"></text></g><g><title>rowan::api::SyntaxNode&lt;L&gt;::kind (1 samples, 0.06%)</title><rect x="76.7429%" y="1477" width="0.0558%" height="15" fill="rgb(217,32,34)"/><text x="76.9929%" y="1487.50"></text></g><g><title>&lt;syntax::syntax_node::RustLanguage as rowan::api::Language&gt;::kind_from_raw (1 samples, 0.06%)</title><rect x="76.7429%" y="1461" width="0.0558%" height="15" fill="rgb(212,7,10)"/><text x="76.9929%" y="1471.50"></text></g><g><title>parser::syntax_kind::&lt;impl core::convert::From&lt;u16&gt; for parser::syntax_kind::generated::SyntaxKind&gt;::from (1 samples, 0.06%)</title><rect x="76.7429%" y="1445" width="0.0558%" height="15" fill="rgb(245,89,8)"/><text x="76.9929%" y="1455.50"></text></g><g><title>syntax::&lt;impl syntax::ast::generated::nodes::SourceFile&gt;::parse (132 samples, 7.36%)</title><rect x="69.5482%" y="1525" width="7.3620%" height="15" fill="rgb(237,16,53)"/><text x="69.7982%" y="1535.50">syntax::&lt;i..</text></g><g><title>syntax::validation::validate (9 samples, 0.50%)</title><rect x="76.4083%" y="1509" width="0.5020%" height="15" fill="rgb(250,204,30)"/><text x="76.6583%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::api::SyntaxNode&lt;syntax::syntax_node::RustLanguage&gt;&gt; (2 samples, 0.11%)</title><rect x="76.7987%" y="1493" width="0.1115%" height="15" fill="rgb(208,77,27)"/><text x="77.0487%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;rowan::cursor::SyntaxNode&gt; (2 samples, 0.11%)</title><rect x="76.7987%" y="1477" width="0.1115%" height="15" fill="rgb(250,204,28)"/><text x="77.0487%" y="1487.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="76.7987%" y="1461" width="0.1115%" height="15" fill="rgb(244,63,21)"/><text x="77.0487%" y="1471.50"></text></g><g><title>benchmark::benc (1,381 samples, 77.02%)</title><rect x="0.0000%" y="1941" width="77.0218%" height="15" fill="rgb(236,85,44)"/><text x="0.2500%" y="1951.50">benchmark::benc</text></g><g><title>__GI___clone (625 samples, 34.86%)</title><rect x="42.1640%" y="1925" width="34.8578%" height="15" fill="rgb(215,98,4)"/><text x="42.4140%" y="1935.50">__GI___clone</text></g><g><title>start_thread (625 samples, 34.86%)</title><rect x="42.1640%" y="1909" width="34.8578%" height="15" fill="rgb(235,38,11)"/><text x="42.4140%" y="1919.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (625 samples, 34.86%)</title><rect x="42.1640%" y="1893" width="34.8578%" height="15" fill="rgb(254,186,25)"/><text x="42.4140%" y="1903.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (625 samples, 34.86%)</title><rect x="42.1640%" y="1877" width="34.8578%" height="15" fill="rgb(225,55,31)"/><text x="42.4140%" y="1887.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (625 samples, 34.86%)</title><rect x="42.1640%" y="1861" width="34.8578%" height="15" fill="rgb(211,15,21)"/><text x="42.4140%" y="1871.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (625 samples, 34.86%)</title><rect x="42.1640%" y="1845" width="34.8578%" height="15" fill="rgb(215,187,41)"/><text x="42.4140%" y="1855.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (625 samples, 34.86%)</title><rect x="42.1640%" y="1829" width="34.8578%" height="15" fill="rgb(248,69,32)"/><text x="42.4140%" y="1839.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (625 samples, 34.86%)</title><rect x="42.1640%" y="1813" width="34.8578%" height="15" fill="rgb(252,102,52)"/><text x="42.4140%" y="1823.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (625 samples, 34.86%)</title><rect x="42.1640%" y="1797" width="34.8578%" height="15" fill="rgb(253,140,32)"/><text x="42.4140%" y="1807.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (625 samples, 34.86%)</title><rect x="42.1640%" y="1781" width="34.8578%" height="15" fill="rgb(216,56,42)"/><text x="42.4140%" y="1791.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (625 samples, 34.86%)</title><rect x="42.1640%" y="1765" width="34.8578%" height="15" fill="rgb(216,184,14)"/><text x="42.4140%" y="1775.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (625 samples, 34.86%)</title><rect x="42.1640%" y="1749" width="34.8578%" height="15" fill="rgb(237,187,27)"/><text x="42.4140%" y="1759.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (625 samples, 34.86%)</title><rect x="42.1640%" y="1733" width="34.8578%" height="15" fill="rgb(219,65,3)"/><text x="42.4140%" y="1743.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::run_test_inner::{{closure}} (625 samples, 34.86%)</title><rect x="42.1640%" y="1717" width="34.8578%" height="15" fill="rgb(245,83,25)"/><text x="42.4140%" y="1727.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test::run_test_inner::{{closure}} (625 samples, 34.86%)</title><rect x="42.1640%" y="1701" width="34.8578%" height="15" fill="rgb(214,205,45)"/><text x="42.4140%" y="1711.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test_in_process (624 samples, 34.80%)</title><rect x="42.2197%" y="1685" width="34.8020%" height="15" fill="rgb(241,20,18)"/><text x="42.4697%" y="1695.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (623 samples, 34.75%)</title><rect x="42.2755%" y="1669" width="34.7462%" height="15" fill="rgb(232,163,23)"/><text x="42.5255%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (623 samples, 34.75%)</title><rect x="42.2755%" y="1653" width="34.7462%" height="15" fill="rgb(214,5,46)"/><text x="42.5255%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (623 samples, 34.75%)</title><rect x="42.2755%" y="1637" width="34.7462%" height="15" fill="rgb(229,78,17)"/><text x="42.5255%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (623 samples, 34.75%)</title><rect x="42.2755%" y="1621" width="34.7462%" height="15" fill="rgb(248,89,10)"/><text x="42.5255%" y="1631.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (623 samples, 34.75%)</title><rect x="42.2755%" y="1605" width="34.7462%" height="15" fill="rgb(248,54,15)"/><text x="42.5255%" y="1615.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>test::__rust_begin_short_backtrace (623 samples, 34.75%)</title><rect x="42.2755%" y="1589" width="34.7462%" height="15" fill="rgb(223,116,6)"/><text x="42.5255%" y="1599.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (623 samples, 34.75%)</title><rect x="42.2755%" y="1573" width="34.7462%" height="15" fill="rgb(205,125,38)"/><text x="42.5255%" y="1583.50">core::ops::function::FnOnce::call_once</text></g><g><title>mbe::benchmark::benchmark_expand_macro_rules (623 samples, 34.75%)</title><rect x="42.2755%" y="1557" width="34.7462%" height="15" fill="rgb(251,78,38)"/><text x="42.5255%" y="1567.50">mbe::benchmark::benchmark_expand_macro_rules</text></g><g><title>mbe::benchmark::macro_rules_fixtures_tt (268 samples, 14.95%)</title><rect x="62.0747%" y="1541" width="14.9470%" height="15" fill="rgb(253,78,28)"/><text x="62.3247%" y="1551.50">mbe::benchmark::macro_r..</text></g><g><title>test_utils::bench_fixture::numerous_macro_rules (2 samples, 0.11%)</title><rect x="76.9102%" y="1525" width="0.1115%" height="15" fill="rgb(209,120,3)"/><text x="77.1602%" y="1535.50"></text></g><g><title>std::fs::read_to_string (2 samples, 0.11%)</title><rect x="76.9102%" y="1509" width="0.1115%" height="15" fill="rgb(238,229,9)"/><text x="77.1602%" y="1519.50"></text></g><g><title>std::fs::read_to_string::inner (2 samples, 0.11%)</title><rect x="76.9102%" y="1493" width="0.1115%" height="15" fill="rgb(253,159,18)"/><text x="77.1602%" y="1503.50"></text></g><g><title>std::io::Read::read_to_string (2 samples, 0.11%)</title><rect x="76.9102%" y="1477" width="0.1115%" height="15" fill="rgb(244,42,34)"/><text x="77.1602%" y="1487.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.11%)</title><rect x="76.9102%" y="1461" width="0.1115%" height="15" fill="rgb(224,8,7)"/><text x="77.1602%" y="1471.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.11%)</title><rect x="76.9102%" y="1445" width="0.1115%" height="15" fill="rgb(210,201,45)"/><text x="77.1602%" y="1455.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.11%)</title><rect x="76.9102%" y="1429" width="0.1115%" height="15" fill="rgb(252,185,21)"/><text x="77.1602%" y="1439.50"></text></g><g><title>[[stack]] (1 samples, 0.06%)</title><rect x="77.0218%" y="1925" width="0.0558%" height="15" fill="rgb(223,131,1)"/><text x="77.2718%" y="1935.50"></text></g><g><title>__libc_close (1 samples, 0.06%)</title><rect x="77.0218%" y="1909" width="0.0558%" height="15" fill="rgb(245,141,16)"/><text x="77.2718%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.0218%" y="1893" width="0.0558%" height="15" fill="rgb(229,55,45)"/><text x="77.2718%" y="1903.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1877" width="0.0558%" height="15" fill="rgb(208,92,15)"/><text x="77.3275%" y="1887.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1861" width="0.0558%" height="15" fill="rgb(234,185,47)"/><text x="77.3275%" y="1871.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1845" width="0.0558%" height="15" fill="rgb(253,104,50)"/><text x="77.3275%" y="1855.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1829" width="0.0558%" height="15" fill="rgb(205,70,7)"/><text x="77.3275%" y="1839.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1813" width="0.0558%" height="15" fill="rgb(240,178,43)"/><text x="77.3275%" y="1823.50"></text></g><g><title>[rustup] (1 samples, 0.06%)</title><rect x="77.0775%" y="1797" width="0.0558%" height="15" fill="rgb(214,112,2)"/><text x="77.3275%" y="1807.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="77.0775%" y="1781" width="0.0558%" height="15" fill="rgb(206,46,17)"/><text x="77.3275%" y="1791.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="77.0775%" y="1765" width="0.0558%" height="15" fill="rgb(225,220,16)"/><text x="77.3275%" y="1775.50"></text></g><g><title>[rustup] (2 samples, 0.11%)</title><rect x="77.0775%" y="1925" width="0.1115%" height="15" fill="rgb(238,65,40)"/><text x="77.3275%" y="1935.50"></text></g><g><title>__libc_start_main (2 samples, 0.11%)</title><rect x="77.0775%" y="1909" width="0.1115%" height="15" fill="rgb(230,151,21)"/><text x="77.3275%" y="1919.50"></text></g><g><title>[rustup] (2 samples, 0.11%)</title><rect x="77.0775%" y="1893" width="0.1115%" height="15" fill="rgb(218,58,49)"/><text x="77.3275%" y="1903.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.06%)</title><rect x="77.1333%" y="1877" width="0.0558%" height="15" fill="rgb(219,179,14)"/><text x="77.3833%" y="1887.50"></text></g><g><title>_IO_getdelim (1 samples, 0.06%)</title><rect x="77.1333%" y="1861" width="0.0558%" height="15" fill="rgb(223,72,1)"/><text x="77.3833%" y="1871.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.06%)</title><rect x="77.1333%" y="1845" width="0.0558%" height="15" fill="rgb(238,126,10)"/><text x="77.3833%" y="1855.50"></text></g><g><title>__GI__IO_doallocbuf (1 samples, 0.06%)</title><rect x="77.1333%" y="1829" width="0.0558%" height="15" fill="rgb(224,206,38)"/><text x="77.3833%" y="1839.50"></text></g><g><title>__GI__IO_file_doallocate (1 samples, 0.06%)</title><rect x="77.1333%" y="1813" width="0.0558%" height="15" fill="rgb(212,201,54)"/><text x="77.3833%" y="1823.50"></text></g><g><title>__fstatat64 (1 samples, 0.06%)</title><rect x="77.1333%" y="1797" width="0.0558%" height="15" fill="rgb(218,154,48)"/><text x="77.3833%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1781" width="0.0558%" height="15" fill="rgb(232,93,24)"/><text x="77.3833%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1765" width="0.0558%" height="15" fill="rgb(245,30,21)"/><text x="77.3833%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1749" width="0.0558%" height="15" fill="rgb(242,148,29)"/><text x="77.3833%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1733" width="0.0558%" height="15" fill="rgb(244,153,54)"/><text x="77.3833%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1717" width="0.0558%" height="15" fill="rgb(252,87,22)"/><text x="77.3833%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1701" width="0.0558%" height="15" fill="rgb(210,51,29)"/><text x="77.3833%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1685" width="0.0558%" height="15" fill="rgb(242,136,47)"/><text x="77.3833%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.1333%" y="1669" width="0.0558%" height="15" fill="rgb(238,68,4)"/><text x="77.3833%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="77.2448%" y="1909" width="0.0558%" height="15" fill="rgb(242,161,30)"/><text x="77.4948%" y="1919.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.06%)</title><rect x="77.2448%" y="1893" width="0.0558%" height="15" fill="rgb(218,58,44)"/><text x="77.4948%" y="1903.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="77.2448%" y="1877" width="0.0558%" height="15" fill="rgb(252,125,32)"/><text x="77.4948%" y="1887.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="77.2448%" y="1861" width="0.0558%" height="15" fill="rgb(219,178,0)"/><text x="77.4948%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="77.2448%" y="1845" width="0.0558%" height="15" fill="rgb(213,152,7)"/><text x="77.4948%" y="1855.50"></text></g><g><title>&lt;serde_ignored::Deserializer&lt;D,F&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.06%)</title><rect x="77.3006%" y="1861" width="0.0558%" height="15" fill="rgb(249,109,34)"/><text x="77.5506%" y="1871.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="77.3006%" y="1845" width="0.0558%" height="15" fill="rgb(232,96,21)"/><text x="77.5506%" y="1855.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="77.3006%" y="1829" width="0.0558%" height="15" fill="rgb(228,27,39)"/><text x="77.5506%" y="1839.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="77.3006%" y="1813" width="0.0558%" height="15" fill="rgb(211,182,52)"/><text x="77.5506%" y="1823.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="77.3006%" y="1797" width="0.0558%" height="15" fill="rgb(234,178,38)"/><text x="77.5506%" y="1807.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="77.3006%" y="1781" width="0.0558%" height="15" fill="rgb(221,111,3)"/><text x="77.5506%" y="1791.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="77.3006%" y="1909" width="0.1115%" height="15" fill="rgb(228,175,21)"/><text x="77.5506%" y="1919.50"></text></g><g><title>&lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlManifest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.11%)</title><rect x="77.3006%" y="1893" width="0.1115%" height="15" fill="rgb(228,174,43)"/><text x="77.5506%" y="1903.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.11%)</title><rect x="77.3006%" y="1877" width="0.1115%" height="15" fill="rgb(211,191,0)"/><text x="77.5506%" y="1887.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (1 samples, 0.06%)</title><rect x="77.3564%" y="1861" width="0.0558%" height="15" fill="rgb(253,117,3)"/><text x="77.6064%" y="1871.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="77.3564%" y="1845" width="0.0558%" height="15" fill="rgb(241,127,19)"/><text x="77.6064%" y="1855.50"></text></g><g><title>&lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlProject&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="77.3564%" y="1829" width="0.0558%" height="15" fill="rgb(218,103,12)"/><text x="77.6064%" y="1839.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.06%)</title><rect x="77.3564%" y="1813" width="0.0558%" height="15" fill="rgb(236,214,43)"/><text x="77.6064%" y="1823.50"></text></g><g><title>[rustup] (15 samples, 0.84%)</title><rect x="86.4473%" y="1749" width="0.8366%" height="15" fill="rgb(244,144,19)"/><text x="86.6973%" y="1759.50"></text></g><g><title>[rustup] (4 samples, 0.22%)</title><rect x="87.0608%" y="1733" width="0.2231%" height="15" fill="rgb(246,188,10)"/><text x="87.3108%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1749" width="0.0558%" height="15" fill="rgb(212,193,33)"/><text x="87.5339%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1733" width="0.0558%" height="15" fill="rgb(241,51,29)"/><text x="87.5339%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1717" width="0.0558%" height="15" fill="rgb(211,58,19)"/><text x="87.5339%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1701" width="0.0558%" height="15" fill="rgb(229,111,26)"/><text x="87.5339%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1685" width="0.0558%" height="15" fill="rgb(213,115,40)"/><text x="87.5339%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1669" width="0.0558%" height="15" fill="rgb(209,56,44)"/><text x="87.5339%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1653" width="0.0558%" height="15" fill="rgb(230,108,32)"/><text x="87.5339%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1637" width="0.0558%" height="15" fill="rgb(216,165,31)"/><text x="87.5339%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.2839%" y="1621" width="0.0558%" height="15" fill="rgb(218,122,21)"/><text x="87.5339%" y="1631.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="87.3397%" y="1749" width="0.0558%" height="15" fill="rgb(223,224,47)"/><text x="87.5897%" y="1759.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="87.3397%" y="1733" width="0.0558%" height="15" fill="rgb(238,102,44)"/><text x="87.5897%" y="1743.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="87.3954%" y="1749" width="0.0558%" height="15" fill="rgb(236,46,40)"/><text x="87.6454%" y="1759.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="87.3954%" y="1733" width="0.0558%" height="15" fill="rgb(247,202,50)"/><text x="87.6454%" y="1743.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="87.3954%" y="1717" width="0.0558%" height="15" fill="rgb(209,99,20)"/><text x="87.6454%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1701" width="0.0558%" height="15" fill="rgb(252,27,34)"/><text x="87.6454%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1685" width="0.0558%" height="15" fill="rgb(215,206,23)"/><text x="87.6454%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1669" width="0.0558%" height="15" fill="rgb(212,135,36)"/><text x="87.6454%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1653" width="0.0558%" height="15" fill="rgb(240,189,1)"/><text x="87.6454%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1637" width="0.0558%" height="15" fill="rgb(242,56,20)"/><text x="87.6454%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.3954%" y="1621" width="0.0558%" height="15" fill="rgb(247,132,33)"/><text x="87.6454%" y="1631.50"></text></g><g><title>[rustup] (38 samples, 2.12%)</title><rect x="85.4434%" y="1765" width="2.1194%" height="15" fill="rgb(208,149,11)"/><text x="85.6934%" y="1775.50">[..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="87.4512%" y="1749" width="0.1115%" height="15" fill="rgb(211,33,11)"/><text x="87.7012%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1733" width="0.2789%" height="15" fill="rgb(221,29,38)"/><text x="87.8127%" y="1743.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1717" width="0.2789%" height="15" fill="rgb(206,182,49)"/><text x="87.8127%" y="1727.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1701" width="0.2789%" height="15" fill="rgb(216,140,1)"/><text x="87.8127%" y="1711.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1685" width="0.2789%" height="15" fill="rgb(232,57,40)"/><text x="87.8127%" y="1695.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1669" width="0.2789%" height="15" fill="rgb(224,186,18)"/><text x="87.8127%" y="1679.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="87.5627%" y="1653" width="0.2789%" height="15" fill="rgb(215,121,11)"/><text x="87.8127%" y="1663.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="87.6185%" y="1637" width="0.2231%" height="15" fill="rgb(245,147,10)"/><text x="87.8685%" y="1647.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="87.6185%" y="1621" width="0.2231%" height="15" fill="rgb(238,153,13)"/><text x="87.8685%" y="1631.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="87.6185%" y="1605" width="0.2231%" height="15" fill="rgb(233,108,0)"/><text x="87.8685%" y="1615.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="87.8416%" y="1733" width="0.0558%" height="15" fill="rgb(212,157,17)"/><text x="88.0916%" y="1743.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.06%)</title><rect x="87.8416%" y="1717" width="0.0558%" height="15" fill="rgb(225,213,38)"/><text x="88.0916%" y="1727.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="87.8416%" y="1701" width="0.0558%" height="15" fill="rgb(248,16,11)"/><text x="88.0916%" y="1711.50"></text></g><g><title>__brk (1 samples, 0.06%)</title><rect x="87.8416%" y="1685" width="0.0558%" height="15" fill="rgb(241,33,4)"/><text x="88.0916%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.8416%" y="1669" width="0.0558%" height="15" fill="rgb(222,26,43)"/><text x="88.0916%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.8416%" y="1653" width="0.0558%" height="15" fill="rgb(243,29,36)"/><text x="88.0916%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.8416%" y="1637" width="0.0558%" height="15" fill="rgb(241,9,27)"/><text x="88.0916%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="87.8416%" y="1621" width="0.0558%" height="15" fill="rgb(205,117,26)"/><text x="88.0916%" y="1631.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.39%)</title><rect x="87.5627%" y="1765" width="0.3904%" height="15" fill="rgb(209,80,39)"/><text x="87.8127%" y="1775.50"></text></g><g><title>_int_malloc (7 samples, 0.39%)</title><rect x="87.5627%" y="1749" width="0.3904%" height="15" fill="rgb(239,155,6)"/><text x="87.8127%" y="1759.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="87.8974%" y="1733" width="0.0558%" height="15" fill="rgb(212,104,12)"/><text x="88.1474%" y="1743.50"></text></g><g><title>[rustup] (72 samples, 4.02%)</title><rect x="83.9933%" y="1781" width="4.0156%" height="15" fill="rgb(234,204,3)"/><text x="84.2433%" y="1791.50">[rus..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="87.9532%" y="1765" width="0.0558%" height="15" fill="rgb(251,218,7)"/><text x="88.2032%" y="1775.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="88.0089%" y="1781" width="0.0558%" height="15" fill="rgb(221,81,32)"/><text x="88.2589%" y="1791.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="88.0647%" y="1781" width="0.1115%" height="15" fill="rgb(214,152,26)"/><text x="88.3147%" y="1791.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="88.0647%" y="1765" width="0.1115%" height="15" fill="rgb(223,22,3)"/><text x="88.3147%" y="1775.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1749" width="0.1115%" height="15" fill="rgb(207,174,7)"/><text x="88.3147%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1733" width="0.1115%" height="15" fill="rgb(224,19,52)"/><text x="88.3147%" y="1743.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1717" width="0.1115%" height="15" fill="rgb(228,24,14)"/><text x="88.3147%" y="1727.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1701" width="0.1115%" height="15" fill="rgb(230,153,43)"/><text x="88.3147%" y="1711.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1685" width="0.1115%" height="15" fill="rgb(231,106,12)"/><text x="88.3147%" y="1695.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.0647%" y="1669" width="0.1115%" height="15" fill="rgb(215,92,2)"/><text x="88.3147%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.1205%" y="1653" width="0.0558%" height="15" fill="rgb(249,143,25)"/><text x="88.3705%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.1205%" y="1637" width="0.0558%" height="15" fill="rgb(252,7,35)"/><text x="88.3705%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.1205%" y="1621" width="0.0558%" height="15" fill="rgb(216,69,40)"/><text x="88.3705%" y="1631.50"></text></g><g><title>[rustup] (137 samples, 7.64%)</title><rect x="80.5912%" y="1797" width="7.6408%" height="15" fill="rgb(240,36,33)"/><text x="80.8412%" y="1807.50">[rustup]</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="88.1762%" y="1781" width="0.0558%" height="15" fill="rgb(231,128,14)"/><text x="88.4262%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1797" width="0.0558%" height="15" fill="rgb(245,143,14)"/><text x="88.4820%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1781" width="0.0558%" height="15" fill="rgb(222,130,28)"/><text x="88.4820%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1765" width="0.0558%" height="15" fill="rgb(212,10,48)"/><text x="88.4820%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1749" width="0.0558%" height="15" fill="rgb(254,118,45)"/><text x="88.4820%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1733" width="0.0558%" height="15" fill="rgb(228,6,45)"/><text x="88.4820%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1717" width="0.0558%" height="15" fill="rgb(241,18,35)"/><text x="88.4820%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="88.2320%" y="1701" width="0.0558%" height="15" fill="rgb(227,214,53)"/><text x="88.4820%" y="1711.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="88.2878%" y="1797" width="0.0558%" height="15" fill="rgb(224,107,51)"/><text x="88.5378%" y="1807.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="88.2878%" y="1781" width="0.0558%" height="15" fill="rgb(248,60,28)"/><text x="88.5378%" y="1791.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="88.3436%" y="1797" width="0.0558%" height="15" fill="rgb(249,101,23)"/><text x="88.5936%" y="1807.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.17%)</title><rect x="88.3993%" y="1797" width="0.1673%" height="15" fill="rgb(228,51,19)"/><text x="88.6493%" y="1807.50"></text></g><g><title>_int_realloc (3 samples, 0.17%)</title><rect x="88.3993%" y="1781" width="0.1673%" height="15" fill="rgb(213,20,6)"/><text x="88.6493%" y="1791.50"></text></g><g><title>_int_malloc (3 samples, 0.17%)</title><rect x="88.3993%" y="1765" width="0.1673%" height="15" fill="rgb(212,124,10)"/><text x="88.6493%" y="1775.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="88.3993%" y="1749" width="0.1673%" height="15" fill="rgb(248,3,40)"/><text x="88.6493%" y="1759.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="88.3993%" y="1733" width="0.1673%" height="15" fill="rgb(223,178,23)"/><text x="88.6493%" y="1743.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="88.3993%" y="1717" width="0.1673%" height="15" fill="rgb(240,132,45)"/><text x="88.6493%" y="1727.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="88.3993%" y="1701" width="0.1673%" height="15" fill="rgb(245,164,36)"/><text x="88.6493%" y="1711.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.4551%" y="1685" width="0.1115%" height="15" fill="rgb(231,188,53)"/><text x="88.7051%" y="1695.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.4551%" y="1669" width="0.1115%" height="15" fill="rgb(237,198,39)"/><text x="88.7051%" y="1679.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.4551%" y="1653" width="0.1115%" height="15" fill="rgb(223,120,35)"/><text x="88.7051%" y="1663.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.4551%" y="1637" width="0.1115%" height="15" fill="rgb(253,107,49)"/><text x="88.7051%" y="1647.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="88.4551%" y="1621" width="0.1115%" height="15" fill="rgb(216,44,31)"/><text x="88.7051%" y="1631.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.17%)</title><rect x="88.5666%" y="1797" width="0.1673%" height="15" fill="rgb(253,87,21)"/><text x="88.8166%" y="1807.50"></text></g><g><title>[rustup] (190 samples, 10.60%)</title><rect x="78.1930%" y="1813" width="10.5968%" height="15" fill="rgb(226,18,2)"/><text x="78.4430%" y="1823.50">[rustup]</text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="88.7340%" y="1797" width="0.0558%" height="15" fill="rgb(216,8,46)"/><text x="88.9840%" y="1807.50"></text></g><g><title>[rustup] (201 samples, 11.21%)</title><rect x="77.6910%" y="1829" width="11.2103%" height="15" fill="rgb(226,140,39)"/><text x="77.9410%" y="1839.50">[rustup]</text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="88.7897%" y="1813" width="0.1115%" height="15" fill="rgb(221,194,54)"/><text x="89.0397%" y="1823.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="88.8455%" y="1797" width="0.0558%" height="15" fill="rgb(213,92,11)"/><text x="89.0955%" y="1807.50"></text></g><g><title>__GI___libc_free (3 samples, 0.17%)</title><rect x="88.9013%" y="1829" width="0.1673%" height="15" fill="rgb(229,162,46)"/><text x="89.1513%" y="1839.50"></text></g><g><title>_int_free (3 samples, 0.17%)</title><rect x="88.9013%" y="1813" width="0.1673%" height="15" fill="rgb(214,111,36)"/><text x="89.1513%" y="1823.50"></text></g><g><title>[rustup] (207 samples, 11.54%)</title><rect x="77.5795%" y="1845" width="11.5449%" height="15" fill="rgb(207,6,21)"/><text x="77.8295%" y="1855.50">[rustup]</text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="89.0686%" y="1829" width="0.0558%" height="15" fill="rgb(213,127,38)"/><text x="89.3186%" y="1839.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="89.0686%" y="1813" width="0.0558%" height="15" fill="rgb(238,118,32)"/><text x="89.3186%" y="1823.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="89.1244%" y="1845" width="0.1115%" height="15" fill="rgb(240,139,39)"/><text x="89.3744%" y="1855.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="89.1801%" y="1829" width="0.0558%" height="15" fill="rgb(235,10,37)"/><text x="89.4301%" y="1839.50"></text></g><g><title>[rustup] (214 samples, 11.94%)</title><rect x="77.4122%" y="1909" width="11.9353%" height="15" fill="rgb(249,171,38)"/><text x="77.6622%" y="1919.50">[rustup]</text></g><g><title>[rustup] (214 samples, 11.94%)</title><rect x="77.4122%" y="1893" width="11.9353%" height="15" fill="rgb(242,144,32)"/><text x="77.6622%" y="1903.50">[rustup]</text></g><g><title>[rustup] (214 samples, 11.94%)</title><rect x="77.4122%" y="1877" width="11.9353%" height="15" fill="rgb(217,117,21)"/><text x="77.6622%" y="1887.50">[rustup]</text></g><g><title>[rustup] (214 samples, 11.94%)</title><rect x="77.4122%" y="1861" width="11.9353%" height="15" fill="rgb(249,87,1)"/><text x="77.6622%" y="1871.50">[rustup]</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="89.2359%" y="1845" width="0.1115%" height="15" fill="rgb(248,196,48)"/><text x="89.4859%" y="1855.50"></text></g><g><title>__spawni_child (6 samples, 0.33%)</title><rect x="89.3475%" y="1909" width="0.3346%" height="15" fill="rgb(251,206,33)"/><text x="89.5975%" y="1919.50"></text></g><g><title>__GI___libc_sigaction (6 samples, 0.33%)</title><rect x="89.3475%" y="1893" width="0.3346%" height="15" fill="rgb(232,141,28)"/><text x="89.5975%" y="1903.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="89.4032%" y="1877" width="0.2789%" height="15" fill="rgb(209,167,14)"/><text x="89.6532%" y="1887.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="89.5148%" y="1861" width="0.1673%" height="15" fill="rgb(225,11,50)"/><text x="89.7648%" y="1871.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="89.5148%" y="1845" width="0.1673%" height="15" fill="rgb(209,50,20)"/><text x="89.7648%" y="1855.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="89.5148%" y="1829" width="0.1673%" height="15" fill="rgb(212,17,46)"/><text x="89.7648%" y="1839.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="89.5148%" y="1813" width="0.1673%" height="15" fill="rgb(216,101,39)"/><text x="89.7648%" y="1823.50"></text></g><g><title>cargo::commands::builtin (1 samples, 0.06%)</title><rect x="89.6821%" y="1909" width="0.0558%" height="15" fill="rgb(212,228,48)"/><text x="89.9321%" y="1919.50"></text></g><g><title>cargo::commands::check::cli (1 samples, 0.06%)</title><rect x="89.6821%" y="1893" width="0.0558%" height="15" fill="rgb(250,6,50)"/><text x="89.9321%" y="1903.50"></text></g><g><title>cargo::util::command_prelude::AppExt::arg_package_spec (1 samples, 0.06%)</title><rect x="89.6821%" y="1877" width="0.0558%" height="15" fill="rgb(250,160,48)"/><text x="89.9321%" y="1887.50"></text></g><g><title>cargo::util::command_prelude::multi_opt (1 samples, 0.06%)</title><rect x="89.6821%" y="1861" width="0.0558%" height="15" fill="rgb(244,216,33)"/><text x="89.9321%" y="1871.50"></text></g><g><title>clap::args::arg::Arg::multiple (1 samples, 0.06%)</title><rect x="89.6821%" y="1845" width="0.0558%" height="15" fill="rgb(207,157,5)"/><text x="89.9321%" y="1855.50"></text></g><g><title>cargo::core::compiler::context::Context::compile (1 samples, 0.06%)</title><rect x="89.7379%" y="1909" width="0.0558%" height="15" fill="rgb(228,199,8)"/><text x="89.9879%" y="1919.50"></text></g><g><title>cargo::core::compiler::compile (1 samples, 0.06%)</title><rect x="89.7379%" y="1893" width="0.0558%" height="15" fill="rgb(227,80,20)"/><text x="89.9879%" y="1903.50"></text></g><g><title>cargo::core::compiler::fingerprint::prepare_target (1 samples, 0.06%)</title><rect x="89.7379%" y="1877" width="0.0558%" height="15" fill="rgb(222,9,33)"/><text x="89.9879%" y="1887.50"></text></g><g><title>cargo::core::compiler::fingerprint::calculate (1 samples, 0.06%)</title><rect x="89.7379%" y="1861" width="0.0558%" height="15" fill="rgb(239,44,28)"/><text x="89.9879%" y="1871.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="89.7379%" y="1845" width="0.0558%" height="15" fill="rgb(249,187,43)"/><text x="89.9879%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.7379%" y="1829" width="0.0558%" height="15" fill="rgb(216,141,28)"/><text x="89.9879%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.7379%" y="1813" width="0.0558%" height="15" fill="rgb(230,154,53)"/><text x="89.9879%" y="1823.50"></text></g><g><title>cargo::core::compiler::fingerprint::DepFingerprint::new (1 samples, 0.06%)</title><rect x="89.7379%" y="1797" width="0.0558%" height="15" fill="rgb(227,82,4)"/><text x="89.9879%" y="1807.50"></text></g><g><title>cargo::core::compiler::fingerprint::calculate (1 samples, 0.06%)</title><rect x="89.7379%" y="1781" width="0.0558%" height="15" fill="rgb(220,107,16)"/><text x="89.9879%" y="1791.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.06%)</title><rect x="89.7379%" y="1765" width="0.0558%" height="15" fill="rgb(207,187,2)"/><text x="89.9879%" y="1775.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.06%)</title><rect x="89.7379%" y="1749" width="0.0558%" height="15" fill="rgb(210,162,52)"/><text x="89.9879%" y="1759.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.06%)</title><rect x="89.7379%" y="1733" width="0.0558%" height="15" fill="rgb(217,216,49)"/><text x="89.9879%" y="1743.50"></text></g><g><title>statx (1 samples, 0.06%)</title><rect x="89.7379%" y="1717" width="0.0558%" height="15" fill="rgb(218,146,49)"/><text x="89.9879%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1701" width="0.0558%" height="15" fill="rgb(216,55,40)"/><text x="89.9879%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1685" width="0.0558%" height="15" fill="rgb(208,196,21)"/><text x="89.9879%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1669" width="0.0558%" height="15" fill="rgb(242,117,42)"/><text x="89.9879%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1653" width="0.0558%" height="15" fill="rgb(210,11,23)"/><text x="89.9879%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1637" width="0.0558%" height="15" fill="rgb(217,110,2)"/><text x="89.9879%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1621" width="0.0558%" height="15" fill="rgb(229,77,54)"/><text x="89.9879%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1605" width="0.0558%" height="15" fill="rgb(218,53,16)"/><text x="89.9879%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7379%" y="1589" width="0.0558%" height="15" fill="rgb(215,38,13)"/><text x="89.9879%" y="1599.50"></text></g><g><title>cargo::core::compiler::fingerprint::calculate (1 samples, 0.06%)</title><rect x="89.7936%" y="1909" width="0.0558%" height="15" fill="rgb(235,42,18)"/><text x="90.0436%" y="1919.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="89.7936%" y="1893" width="0.0558%" height="15" fill="rgb(219,66,54)"/><text x="90.0436%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.7936%" y="1877" width="0.0558%" height="15" fill="rgb(222,205,4)"/><text x="90.0436%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.7936%" y="1861" width="0.0558%" height="15" fill="rgb(227,213,46)"/><text x="90.0436%" y="1871.50"></text></g><g><title>cargo::core::compiler::fingerprint::DepFingerprint::new (1 samples, 0.06%)</title><rect x="89.7936%" y="1845" width="0.0558%" height="15" fill="rgb(250,145,42)"/><text x="90.0436%" y="1855.50"></text></g><g><title>cargo::core::compiler::fingerprint::calculate (1 samples, 0.06%)</title><rect x="89.7936%" y="1829" width="0.0558%" height="15" fill="rgb(219,15,2)"/><text x="90.0436%" y="1839.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="89.7936%" y="1813" width="0.0558%" height="15" fill="rgb(231,181,52)"/><text x="90.0436%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.7936%" y="1797" width="0.0558%" height="15" fill="rgb(235,1,42)"/><text x="90.0436%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.7936%" y="1781" width="0.0558%" height="15" fill="rgb(249,88,27)"/><text x="90.0436%" y="1791.50"></text></g><g><title>cargo::core::compiler::fingerprint::DepFingerprint::new (1 samples, 0.06%)</title><rect x="89.7936%" y="1765" width="0.0558%" height="15" fill="rgb(235,145,16)"/><text x="90.0436%" y="1775.50"></text></g><g><title>cargo::core::compiler::fingerprint::calculate (1 samples, 0.06%)</title><rect x="89.7936%" y="1749" width="0.0558%" height="15" fill="rgb(237,114,19)"/><text x="90.0436%" y="1759.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.06%)</title><rect x="89.7936%" y="1733" width="0.0558%" height="15" fill="rgb(238,51,50)"/><text x="90.0436%" y="1743.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.06%)</title><rect x="89.7936%" y="1717" width="0.0558%" height="15" fill="rgb(205,194,25)"/><text x="90.0436%" y="1727.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.06%)</title><rect x="89.7936%" y="1701" width="0.0558%" height="15" fill="rgb(215,203,17)"/><text x="90.0436%" y="1711.50"></text></g><g><title>statx (1 samples, 0.06%)</title><rect x="89.7936%" y="1685" width="0.0558%" height="15" fill="rgb(233,112,49)"/><text x="90.0436%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1669" width="0.0558%" height="15" fill="rgb(241,130,26)"/><text x="90.0436%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1653" width="0.0558%" height="15" fill="rgb(252,223,19)"/><text x="90.0436%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1637" width="0.0558%" height="15" fill="rgb(211,95,25)"/><text x="90.0436%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1621" width="0.0558%" height="15" fill="rgb(251,182,27)"/><text x="90.0436%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1605" width="0.0558%" height="15" fill="rgb(238,24,4)"/><text x="90.0436%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1589" width="0.0558%" height="15" fill="rgb(224,220,25)"/><text x="90.0436%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1573" width="0.0558%" height="15" fill="rgb(239,133,26)"/><text x="90.0436%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1557" width="0.0558%" height="15" fill="rgb(211,94,48)"/><text x="90.0436%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1541" width="0.0558%" height="15" fill="rgb(239,87,6)"/><text x="90.0436%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="89.7936%" y="1525" width="0.0558%" height="15" fill="rgb(227,62,0)"/><text x="90.0436%" y="1535.50"></text></g><g><title>cargo::core::package::Downloads::start (1 samples, 0.06%)</title><rect x="89.8494%" y="1909" width="0.0558%" height="15" fill="rgb(211,226,4)"/><text x="90.0994%" y="1919.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::download (1 samples, 0.06%)</title><rect x="89.8494%" y="1893" width="0.0558%" height="15" fill="rgb(253,38,52)"/><text x="90.0994%" y="1903.50"></text></g><g><title>cargo::sources::registry::RegistrySource::get_pkg (1 samples, 0.06%)</title><rect x="89.8494%" y="1877" width="0.0558%" height="15" fill="rgb(229,126,40)"/><text x="90.0994%" y="1887.50"></text></g><g><title>cargo::core::package::Package::manifest_mut (1 samples, 0.06%)</title><rect x="89.8494%" y="1861" width="0.0558%" height="15" fill="rgb(229,165,44)"/><text x="90.0994%" y="1871.50"></text></g><g><title>&lt;cargo::core::manifest::Manifest as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="89.8494%" y="1845" width="0.0558%" height="15" fill="rgb(247,95,47)"/><text x="90.0994%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="89.8494%" y="1829" width="0.0558%" height="15" fill="rgb(216,140,30)"/><text x="90.0994%" y="1839.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (1 samples, 0.06%)</title><rect x="89.8494%" y="1813" width="0.0558%" height="15" fill="rgb(246,214,8)"/><text x="90.0994%" y="1823.50"></text></g><g><title>cargo::core::resolver::activate (1 samples, 0.06%)</title><rect x="89.9052%" y="1909" width="0.0558%" height="15" fill="rgb(227,224,15)"/><text x="90.1552%" y="1919.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (1 samples, 0.06%)</title><rect x="89.9052%" y="1893" width="0.0558%" height="15" fill="rgb(233,175,4)"/><text x="90.1552%" y="1903.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="89.9052%" y="1877" width="0.0558%" height="15" fill="rgb(221,66,45)"/><text x="90.1552%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.9052%" y="1861" width="0.0558%" height="15" fill="rgb(221,178,18)"/><text x="90.1552%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.9052%" y="1845" width="0.0558%" height="15" fill="rgb(213,81,29)"/><text x="90.1552%" y="1855.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (1 samples, 0.06%)</title><rect x="89.9052%" y="1829" width="0.0558%" height="15" fill="rgb(220,89,49)"/><text x="90.1552%" y="1839.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (1 samples, 0.06%)</title><rect x="89.9052%" y="1813" width="0.0558%" height="15" fill="rgb(227,60,33)"/><text x="90.1552%" y="1823.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (1 samples, 0.06%)</title><rect x="89.9052%" y="1797" width="0.0558%" height="15" fill="rgb(205,113,12)"/><text x="90.1552%" y="1807.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (1 samples, 0.06%)</title><rect x="89.9052%" y="1781" width="0.0558%" height="15" fill="rgb(211,32,1)"/><text x="90.1552%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.9052%" y="1765" width="0.0558%" height="15" fill="rgb(246,2,12)"/><text x="90.1552%" y="1775.50"></text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (1 samples, 0.06%)</title><rect x="89.9052%" y="1749" width="0.0558%" height="15" fill="rgb(243,37,27)"/><text x="90.1552%" y="1759.50"></text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (1 samples, 0.06%)</title><rect x="89.9052%" y="1733" width="0.0558%" height="15" fill="rgb(248,211,31)"/><text x="90.1552%" y="1743.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="89.9052%" y="1717" width="0.0558%" height="15" fill="rgb(242,146,47)"/><text x="90.1552%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.9052%" y="1701" width="0.0558%" height="15" fill="rgb(206,70,20)"/><text x="90.1552%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="89.9052%" y="1685" width="0.0558%" height="15" fill="rgb(215,10,51)"/><text x="90.1552%" y="1695.50"></text></g><g><title>cargo::sources::registry::RegistryDependency::into_dep (1 samples, 0.06%)</title><rect x="89.9052%" y="1669" width="0.0558%" height="15" fill="rgb(243,178,53)"/><text x="90.1552%" y="1679.50"></text></g><g><title>cargo::core::dependency::Dependency::parse_no_deprecated (1 samples, 0.06%)</title><rect x="89.9052%" y="1653" width="0.0558%" height="15" fill="rgb(233,221,20)"/><text x="90.1552%" y="1663.50"></text></g><g><title>cargo::core::dependency::parse_req_with_deprecated (1 samples, 0.06%)</title><rect x="89.9052%" y="1637" width="0.0558%" height="15" fill="rgb(218,95,35)"/><text x="90.1552%" y="1647.50"></text></g><g><title>semver::version_req::VersionReq::parse (1 samples, 0.06%)</title><rect x="89.9052%" y="1621" width="0.0558%" height="15" fill="rgb(229,13,5)"/><text x="90.1552%" y="1631.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="89.9052%" y="1605" width="0.0558%" height="15" fill="rgb(252,164,30)"/><text x="90.1552%" y="1615.50"></text></g><g><title>cargo::core::resolver::context::Context::flag_activated (1 samples, 0.06%)</title><rect x="89.9610%" y="1877" width="0.0558%" height="15" fill="rgb(232,68,36)"/><text x="90.2110%" y="1887.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::is_subset (1 samples, 0.06%)</title><rect x="89.9610%" y="1861" width="0.0558%" height="15" fill="rgb(219,59,54)"/><text x="90.2110%" y="1871.50"></text></g><g><title>&lt;cargo::core::dependency::Inner as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="90.0167%" y="1797" width="0.0558%" height="15" fill="rgb(250,92,33)"/><text x="90.2667%" y="1807.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.06%)</title><rect x="90.0167%" y="1781" width="0.0558%" height="15" fill="rgb(229,162,54)"/><text x="90.2667%" y="1791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="90.0167%" y="1765" width="0.0558%" height="15" fill="rgb(244,114,52)"/><text x="90.2667%" y="1775.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::make_mut (1 samples, 0.06%)</title><rect x="90.1840%" y="1637" width="0.0558%" height="15" fill="rgb(212,211,43)"/><text x="90.4340%" y="1647.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_uninit (1 samples, 0.06%)</title><rect x="90.1840%" y="1621" width="0.0558%" height="15" fill="rgb(226,147,8)"/><text x="90.4340%" y="1631.50"></text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="90.1840%" y="1605" width="0.0558%" height="15" fill="rgb(226,23,13)"/><text x="90.4340%" y="1615.50"></text></g><g><title>cargo::core::source::source_id::SourceId::with_precise (1 samples, 0.06%)</title><rect x="90.2398%" y="1637" width="0.0558%" height="15" fill="rgb(240,63,4)"/><text x="90.4898%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="90.2398%" y="1621" width="0.0558%" height="15" fill="rgb(221,1,32)"/><text x="90.4898%" y="1631.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query::{{closure}} (4 samples, 0.22%)</title><rect x="90.1283%" y="1749" width="0.2231%" height="15" fill="rgb(242,117,10)"/><text x="90.3783%" y="1759.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query::{{closure}} (4 samples, 0.22%)</title><rect x="90.1283%" y="1733" width="0.2231%" height="15" fill="rgb(249,172,44)"/><text x="90.3783%" y="1743.50"></text></g><g><title>cargo::core::registry::lock (4 samples, 0.22%)</title><rect x="90.1283%" y="1717" width="0.2231%" height="15" fill="rgb(244,46,45)"/><text x="90.3783%" y="1727.50"></text></g><g><title>cargo::core::summary::Summary::map_dependencies (4 samples, 0.22%)</title><rect x="90.1283%" y="1701" width="0.2231%" height="15" fill="rgb(206,43,17)"/><text x="90.3783%" y="1711.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.22%)</title><rect x="90.1283%" y="1685" width="0.2231%" height="15" fill="rgb(239,218,39)"/><text x="90.3783%" y="1695.50"></text></g><g><title>cargo::core::registry::lock::_{{closure}} (4 samples, 0.22%)</title><rect x="90.1283%" y="1669" width="0.2231%" height="15" fill="rgb(208,169,54)"/><text x="90.3783%" y="1679.50"></text></g><g><title>cargo::core::dependency::Dependency::lock_to (3 samples, 0.17%)</title><rect x="90.1840%" y="1653" width="0.1673%" height="15" fill="rgb(247,25,42)"/><text x="90.4340%" y="1663.50"></text></g><g><title>semver::version_req::VersionReq::exact (1 samples, 0.06%)</title><rect x="90.2956%" y="1637" width="0.0558%" height="15" fill="rgb(226,23,31)"/><text x="90.5456%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="90.2956%" y="1621" width="0.0558%" height="15" fill="rgb(247,16,28)"/><text x="90.5456%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="90.4071%" y="1669" width="0.0558%" height="15" fill="rgb(231,147,38)"/><text x="90.6571%" y="1679.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.06%)</title><rect x="90.4629%" y="1669" width="0.0558%" height="15" fill="rgb(253,81,48)"/><text x="90.7129%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="90.4629%" y="1653" width="0.0558%" height="15" fill="rgb(249,222,43)"/><text x="90.7129%" y="1663.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="90.4629%" y="1637" width="0.0558%" height="15" fill="rgb(221,3,27)"/><text x="90.7129%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="90.4629%" y="1621" width="0.0558%" height="15" fill="rgb(228,180,5)"/><text x="90.7129%" y="1631.50"></text></g><g><title>cargo::core::summary::Summary::new (3 samples, 0.17%)</title><rect x="90.4071%" y="1701" width="0.1673%" height="15" fill="rgb(227,131,42)"/><text x="90.6571%" y="1711.50"></text></g><g><title>cargo::core::summary::build_feature_map (3 samples, 0.17%)</title><rect x="90.4071%" y="1685" width="0.1673%" height="15" fill="rgb(212,3,39)"/><text x="90.6571%" y="1695.50"></text></g><g><title>unicode_xid::tables::derived_property::XID_Continue (1 samples, 0.06%)</title><rect x="90.5187%" y="1669" width="0.0558%" height="15" fill="rgb(226,45,5)"/><text x="90.7687%" y="1679.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.06%)</title><rect x="90.5745%" y="1653" width="0.0558%" height="15" fill="rgb(215,167,45)"/><text x="90.8245%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.33%)</title><rect x="90.3514%" y="1749" width="0.3346%" height="15" fill="rgb(250,218,53)"/><text x="90.6014%" y="1759.50"></text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (5 samples, 0.28%)</title><rect x="90.4071%" y="1733" width="0.2789%" height="15" fill="rgb(207,140,0)"/><text x="90.6571%" y="1743.50"></text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (5 samples, 0.28%)</title><rect x="90.4071%" y="1717" width="0.2789%" height="15" fill="rgb(238,133,51)"/><text x="90.6571%" y="1727.50"></text></g><g><title>serde_json::de::from_slice (2 samples, 0.11%)</title><rect x="90.5745%" y="1701" width="0.1115%" height="15" fill="rgb(218,203,53)"/><text x="90.8245%" y="1711.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.11%)</title><rect x="90.5745%" y="1685" width="0.1115%" height="15" fill="rgb(226,184,25)"/><text x="90.8245%" y="1695.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.11%)</title><rect x="90.5745%" y="1669" width="0.1115%" height="15" fill="rgb(231,121,21)"/><text x="90.8245%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.06%)</title><rect x="90.6302%" y="1653" width="0.0558%" height="15" fill="rgb(251,14,34)"/><text x="90.8802%" y="1663.50"></text></g><g><title>&lt;cargo::sources::registry::remote::RemoteRegistry as cargo::sources::registry::RegistryData&gt;::current_version (1 samples, 0.06%)</title><rect x="90.7975%" y="1733" width="0.0558%" height="15" fill="rgb(249,193,11)"/><text x="91.0475%" y="1743.50"></text></g><g><title>cargo::sources::git::utils::&lt;impl cargo::core::source::source_id::GitReference&gt;::resolve (1 samples, 0.06%)</title><rect x="90.7975%" y="1717" width="0.0558%" height="15" fill="rgb(220,172,37)"/><text x="91.0475%" y="1727.50"></text></g><g><title>git2::repo::Repository::find_object (1 samples, 0.06%)</title><rect x="90.7975%" y="1701" width="0.0558%" height="15" fill="rgb(231,229,43)"/><text x="91.0475%" y="1711.50"></text></g><g><title>git_object_lookup_prefix (1 samples, 0.06%)</title><rect x="90.7975%" y="1685" width="0.0558%" height="15" fill="rgb(250,161,5)"/><text x="91.0475%" y="1695.50"></text></g><g><title>git_repository_odb__weakptr (1 samples, 0.06%)</title><rect x="90.7975%" y="1669" width="0.0558%" height="15" fill="rgb(218,225,18)"/><text x="91.0475%" y="1679.50"></text></g><g><title>git_odb__add_default_backends (1 samples, 0.06%)</title><rect x="90.7975%" y="1653" width="0.0558%" height="15" fill="rgb(245,45,42)"/><text x="91.0475%" y="1663.50"></text></g><g><title>git_odb_backend_pack (1 samples, 0.06%)</title><rect x="90.7975%" y="1637" width="0.0558%" height="15" fill="rgb(211,115,1)"/><text x="91.0475%" y="1647.50"></text></g><g><title>pack_backend__refresh (1 samples, 0.06%)</title><rect x="90.7975%" y="1621" width="0.0558%" height="15" fill="rgb(248,133,52)"/><text x="91.0475%" y="1631.50"></text></g><g><title>git_path_direach (1 samples, 0.06%)</title><rect x="90.7975%" y="1605" width="0.0558%" height="15" fill="rgb(238,100,21)"/><text x="91.0475%" y="1615.50"></text></g><g><title>packfile_load__cb (1 samples, 0.06%)</title><rect x="90.7975%" y="1589" width="0.0558%" height="15" fill="rgb(247,144,11)"/><text x="91.0475%" y="1599.50"></text></g><g><title>git_vector_search2 (1 samples, 0.06%)</title><rect x="90.7975%" y="1573" width="0.0558%" height="15" fill="rgb(206,164,16)"/><text x="91.0475%" y="1583.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.06%)</title><rect x="90.7975%" y="1557" width="0.0558%" height="15" fill="rgb(222,34,3)"/><text x="91.0475%" y="1567.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.06%)</title><rect x="90.8533%" y="1733" width="0.0558%" height="15" fill="rgb(248,82,4)"/><text x="91.1033%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="90.9091%" y="1717" width="0.0558%" height="15" fill="rgb(228,81,46)"/><text x="91.1591%" y="1727.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="90.9649%" y="1685" width="0.0558%" height="15" fill="rgb(227,67,47)"/><text x="91.2149%" y="1695.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="90.9649%" y="1669" width="0.0558%" height="15" fill="rgb(215,93,53)"/><text x="91.2149%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="90.9649%" y="1653" width="0.0558%" height="15" fill="rgb(248,194,39)"/><text x="91.2149%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="90.9649%" y="1637" width="0.0558%" height="15" fill="rgb(215,5,19)"/><text x="91.2149%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="90.9649%" y="1621" width="0.0558%" height="15" fill="rgb(226,215,51)"/><text x="91.2149%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="90.9649%" y="1605" width="0.0558%" height="15" fill="rgb(225,56,26)"/><text x="91.2149%" y="1615.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.06%)</title><rect x="91.0206%" y="1685" width="0.0558%" height="15" fill="rgb(222,75,29)"/><text x="91.2706%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.22%)</title><rect x="90.9091%" y="1733" width="0.2231%" height="15" fill="rgb(236,139,6)"/><text x="91.1591%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.17%)</title><rect x="90.9649%" y="1717" width="0.1673%" height="15" fill="rgb(223,137,36)"/><text x="91.2149%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.17%)</title><rect x="90.9649%" y="1701" width="0.1673%" height="15" fill="rgb(226,99,2)"/><text x="91.2149%" y="1711.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="91.0764%" y="1685" width="0.0558%" height="15" fill="rgb(206,133,23)"/><text x="91.3264%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.06%)</title><rect x="91.0764%" y="1669" width="0.0558%" height="15" fill="rgb(243,173,15)"/><text x="91.3264%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="91.0764%" y="1653" width="0.0558%" height="15" fill="rgb(228,69,28)"/><text x="91.3264%" y="1663.50"></text></g><g><title>memchr::x86::avx::memchr (1 samples, 0.06%)</title><rect x="91.1322%" y="1733" width="0.0558%" height="15" fill="rgb(212,51,22)"/><text x="91.3822%" y="1743.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (22 samples, 1.23%)</title><rect x="90.0725%" y="1797" width="1.2270%" height="15" fill="rgb(227,113,0)"/><text x="90.3225%" y="1807.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (21 samples, 1.17%)</title><rect x="90.1283%" y="1781" width="1.1712%" height="15" fill="rgb(252,84,27)"/><text x="90.3783%" y="1791.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (21 samples, 1.17%)</title><rect x="90.1283%" y="1765" width="1.1712%" height="15" fill="rgb(223,145,39)"/><text x="90.3783%" y="1775.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::summaries (11 samples, 0.61%)</title><rect x="90.6860%" y="1749" width="0.6135%" height="15" fill="rgb(239,219,30)"/><text x="90.9360%" y="1759.50"></text></g><g><title>semver::version::Version::parse (2 samples, 0.11%)</title><rect x="91.1880%" y="1733" width="0.1115%" height="15" fill="rgb(224,196,39)"/><text x="91.4380%" y="1743.50"></text></g><g><title>semver_parser::version::parse (2 samples, 0.11%)</title><rect x="91.1880%" y="1717" width="0.1115%" height="15" fill="rgb(205,35,43)"/><text x="91.4380%" y="1727.50"></text></g><g><title>semver_parser::common::numeric_identifier (1 samples, 0.06%)</title><rect x="91.2437%" y="1701" width="0.0558%" height="15" fill="rgb(228,201,21)"/><text x="91.4937%" y="1711.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.06%)</title><rect x="91.2437%" y="1685" width="0.0558%" height="15" fill="rgb(237,118,16)"/><text x="91.4937%" y="1695.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (25 samples, 1.39%)</title><rect x="89.9610%" y="1909" width="1.3943%" height="15" fill="rgb(241,17,19)"/><text x="90.2110%" y="1919.50"></text></g><g><title>cargo::core::resolver::activate (25 samples, 1.39%)</title><rect x="89.9610%" y="1893" width="1.3943%" height="15" fill="rgb(214,10,25)"/><text x="90.2110%" y="1903.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (24 samples, 1.34%)</title><rect x="90.0167%" y="1877" width="1.3385%" height="15" fill="rgb(238,37,29)"/><text x="90.2667%" y="1887.50"></text></g><g><title>core::iter::adapters::process_results (24 samples, 1.34%)</title><rect x="90.0167%" y="1861" width="1.3385%" height="15" fill="rgb(253,83,25)"/><text x="90.2667%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.34%)</title><rect x="90.0167%" y="1845" width="1.3385%" height="15" fill="rgb(234,192,12)"/><text x="90.2667%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 1.34%)</title><rect x="90.0167%" y="1829" width="1.3385%" height="15" fill="rgb(241,216,45)"/><text x="90.2667%" y="1839.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (24 samples, 1.34%)</title><rect x="90.0167%" y="1813" width="1.3385%" height="15" fill="rgb(242,22,33)"/><text x="90.2667%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.06%)</title><rect x="91.2995%" y="1797" width="0.0558%" height="15" fill="rgb(231,105,49)"/><text x="91.5495%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="91.2995%" y="1781" width="0.0558%" height="15" fill="rgb(218,204,15)"/><text x="91.5495%" y="1791.50"></text></g><g><title>&lt;cargo::core::dependency::Inner as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="91.2995%" y="1765" width="0.0558%" height="15" fill="rgb(235,138,41)"/><text x="91.5495%" y="1775.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (1 samples, 0.06%)</title><rect x="91.3553%" y="1909" width="0.0558%" height="15" fill="rgb(246,0,9)"/><text x="91.6053%" y="1919.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="91.3553%" y="1893" width="0.0558%" height="15" fill="rgb(210,74,4)"/><text x="91.6053%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="91.3553%" y="1877" width="0.0558%" height="15" fill="rgb(250,60,41)"/><text x="91.6053%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="91.3553%" y="1861" width="0.0558%" height="15" fill="rgb(220,115,12)"/><text x="91.6053%" y="1871.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (1 samples, 0.06%)</title><rect x="91.3553%" y="1845" width="0.0558%" height="15" fill="rgb(237,100,13)"/><text x="91.6053%" y="1855.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (1 samples, 0.06%)</title><rect x="91.3553%" y="1829" width="0.0558%" height="15" fill="rgb(213,55,26)"/><text x="91.6053%" y="1839.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (1 samples, 0.06%)</title><rect x="91.3553%" y="1813" width="0.0558%" height="15" fill="rgb(216,17,4)"/><text x="91.6053%" y="1823.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (1 samples, 0.06%)</title><rect x="91.3553%" y="1797" width="0.0558%" height="15" fill="rgb(220,153,47)"/><text x="91.6053%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="91.3553%" y="1781" width="0.0558%" height="15" fill="rgb(215,131,9)"/><text x="91.6053%" y="1791.50"></text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (1 samples, 0.06%)</title><rect x="91.3553%" y="1765" width="0.0558%" height="15" fill="rgb(233,46,42)"/><text x="91.6053%" y="1775.50"></text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (1 samples, 0.06%)</title><rect x="91.3553%" y="1749" width="0.0558%" height="15" fill="rgb(226,86,7)"/><text x="91.6053%" y="1759.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="91.3553%" y="1733" width="0.0558%" height="15" fill="rgb(239,226,21)"/><text x="91.6053%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="91.3553%" y="1717" width="0.0558%" height="15" fill="rgb(244,137,22)"/><text x="91.6053%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="91.3553%" y="1701" width="0.0558%" height="15" fill="rgb(211,139,35)"/><text x="91.6053%" y="1711.50"></text></g><g><title>cargo::sources::registry::RegistryDependency::into_dep (1 samples, 0.06%)</title><rect x="91.3553%" y="1685" width="0.0558%" height="15" fill="rgb(214,62,50)"/><text x="91.6053%" y="1695.50"></text></g><g><title>cargo::core::dependency::Dependency::parse_no_deprecated (1 samples, 0.06%)</title><rect x="91.3553%" y="1669" width="0.0558%" height="15" fill="rgb(212,113,44)"/><text x="91.6053%" y="1679.50"></text></g><g><title>cargo::core::dependency::parse_req_with_deprecated (1 samples, 0.06%)</title><rect x="91.3553%" y="1653" width="0.0558%" height="15" fill="rgb(226,150,43)"/><text x="91.6053%" y="1663.50"></text></g><g><title>semver::version_req::VersionReq::parse (1 samples, 0.06%)</title><rect x="91.3553%" y="1637" width="0.0558%" height="15" fill="rgb(250,71,37)"/><text x="91.6053%" y="1647.50"></text></g><g><title>semver_parser::range::parse (1 samples, 0.06%)</title><rect x="91.3553%" y="1621" width="0.0558%" height="15" fill="rgb(219,76,19)"/><text x="91.6053%" y="1631.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="91.3553%" y="1605" width="0.0558%" height="15" fill="rgb(250,39,11)"/><text x="91.6053%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="91.3553%" y="1589" width="0.0558%" height="15" fill="rgb(230,64,31)"/><text x="91.6053%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="91.3553%" y="1573" width="0.0558%" height="15" fill="rgb(208,222,23)"/><text x="91.6053%" y="1583.50"></text></g><g><title>semver_parser::range::parse_predicate (1 samples, 0.06%)</title><rect x="91.3553%" y="1557" width="0.0558%" height="15" fill="rgb(227,125,18)"/><text x="91.6053%" y="1567.50"></text></g><g><title>cargo::core::resolver::dep_cache::Requirements::require_value (1 samples, 0.06%)</title><rect x="91.4668%" y="1845" width="0.0558%" height="15" fill="rgb(234,210,9)"/><text x="91.7168%" y="1855.50"></text></g><g><title>cargo::core::resolver::dep_cache::Requirements::require_feature (1 samples, 0.06%)</title><rect x="91.4668%" y="1829" width="0.0558%" height="15" fill="rgb(217,127,24)"/><text x="91.7168%" y="1839.50"></text></g><g><title>cargo::core::resolver::dep_cache::Requirements::require_value (1 samples, 0.06%)</title><rect x="91.4668%" y="1813" width="0.0558%" height="15" fill="rgb(239,141,48)"/><text x="91.7168%" y="1823.50"></text></g><g><title>cargo::core::resolver::dep_cache::Requirements::require_feature (1 samples, 0.06%)</title><rect x="91.4668%" y="1797" width="0.0558%" height="15" fill="rgb(227,109,8)"/><text x="91.7168%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="91.4668%" y="1781" width="0.0558%" height="15" fill="rgb(235,184,23)"/><text x="91.7168%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.06%)</title><rect x="91.4668%" y="1765" width="0.0558%" height="15" fill="rgb(227,226,48)"/><text x="91.7168%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="91.4668%" y="1749" width="0.0558%" height="15" fill="rgb(206,150,11)"/><text x="91.7168%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="91.4668%" y="1733" width="0.0558%" height="15" fill="rgb(254,2,33)"/><text x="91.7168%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="91.4668%" y="1717" width="0.0558%" height="15" fill="rgb(243,160,20)"/><text x="91.7168%" y="1727.50"></text></g><g><title>cargo::core::resolver::resolve (3 samples, 0.17%)</title><rect x="91.4110%" y="1909" width="0.1673%" height="15" fill="rgb(218,208,30)"/><text x="91.6610%" y="1919.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (3 samples, 0.17%)</title><rect x="91.4110%" y="1893" width="0.1673%" height="15" fill="rgb(224,120,49)"/><text x="91.6610%" y="1903.50"></text></g><g><title>cargo::core::resolver::activate (3 samples, 0.17%)</title><rect x="91.4110%" y="1877" width="0.1673%" height="15" fill="rgb(246,12,2)"/><text x="91.6610%" y="1887.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (3 samples, 0.17%)</title><rect x="91.4110%" y="1861" width="0.1673%" height="15" fill="rgb(236,117,3)"/><text x="91.6610%" y="1871.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="91.5226%" y="1845" width="0.0558%" height="15" fill="rgb(216,128,52)"/><text x="91.7726%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="91.5226%" y="1829" width="0.0558%" height="15" fill="rgb(246,145,19)"/><text x="91.7726%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="91.5226%" y="1813" width="0.0558%" height="15" fill="rgb(222,11,46)"/><text x="91.7726%" y="1823.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (1 samples, 0.06%)</title><rect x="91.5226%" y="1797" width="0.0558%" height="15" fill="rgb(245,82,36)"/><text x="91.7726%" y="1807.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="91.5226%" y="1781" width="0.0558%" height="15" fill="rgb(250,73,51)"/><text x="91.7726%" y="1791.50"></text></g><g><title>cargo::core::workspace::Packages::load (2 samples, 0.11%)</title><rect x="91.5784%" y="1909" width="0.1115%" height="15" fill="rgb(221,189,23)"/><text x="91.8284%" y="1919.50"></text></g><g><title>cargo::util::toml::read_manifest (2 samples, 0.11%)</title><rect x="91.5784%" y="1893" width="0.1115%" height="15" fill="rgb(210,33,7)"/><text x="91.8284%" y="1903.50"></text></g><g><title>cargo::util::toml::parse (2 samples, 0.11%)</title><rect x="91.5784%" y="1877" width="0.1115%" height="15" fill="rgb(210,107,22)"/><text x="91.8284%" y="1887.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (2 samples, 0.11%)</title><rect x="91.5784%" y="1861" width="0.1115%" height="15" fill="rgb(222,116,37)"/><text x="91.8284%" y="1871.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="91.5784%" y="1845" width="0.1115%" height="15" fill="rgb(254,17,48)"/><text x="91.8284%" y="1855.50"></text></g><g><title>toml::de::Deserializer::tables (2 samples, 0.11%)</title><rect x="91.5784%" y="1829" width="0.1115%" height="15" fill="rgb(224,36,32)"/><text x="91.8284%" y="1839.50"></text></g><g><title>toml::de::Deserializer::dotted_key (1 samples, 0.06%)</title><rect x="91.6341%" y="1813" width="0.0558%" height="15" fill="rgb(232,90,46)"/><text x="91.8841%" y="1823.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (1 samples, 0.06%)</title><rect x="91.6341%" y="1797" width="0.0558%" height="15" fill="rgb(241,66,40)"/><text x="91.8841%" y="1807.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="91.6341%" y="1781" width="0.0558%" height="15" fill="rgb(249,184,29)"/><text x="91.8841%" y="1791.50"></text></g><g><title>cargo::ops::cargo_test::run_tests (1 samples, 0.06%)</title><rect x="91.6899%" y="1877" width="0.0558%" height="15" fill="rgb(231,181,1)"/><text x="91.9399%" y="1887.50"></text></g><g><title>cargo::ops::cargo_test::run_unit_tests (1 samples, 0.06%)</title><rect x="91.6899%" y="1861" width="0.0558%" height="15" fill="rgb(224,94,2)"/><text x="91.9399%" y="1871.50"></text></g><g><title>cargo::util::process_builder::ProcessBuilder::exec (1 samples, 0.06%)</title><rect x="91.6899%" y="1845" width="0.0558%" height="15" fill="rgb(229,170,15)"/><text x="91.9399%" y="1855.50"></text></g><g><title>std::process::Command::status (1 samples, 0.06%)</title><rect x="91.6899%" y="1829" width="0.0558%" height="15" fill="rgb(240,127,35)"/><text x="91.9399%" y="1839.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.06%)</title><rect x="91.6899%" y="1813" width="0.0558%" height="15" fill="rgb(248,196,34)"/><text x="91.9399%" y="1823.50"></text></g><g><title>std::process::Command::status::{{closure}} (1 samples, 0.06%)</title><rect x="91.6899%" y="1797" width="0.0558%" height="15" fill="rgb(236,137,7)"/><text x="91.9399%" y="1807.50"></text></g><g><title>std::process::Child::wait (1 samples, 0.06%)</title><rect x="91.6899%" y="1781" width="0.0558%" height="15" fill="rgb(235,127,16)"/><text x="91.9399%" y="1791.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::wait (1 samples, 0.06%)</title><rect x="91.6899%" y="1765" width="0.0558%" height="15" fill="rgb(250,192,54)"/><text x="91.9399%" y="1775.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.06%)</title><rect x="91.6899%" y="1749" width="0.0558%" height="15" fill="rgb(218,98,20)"/><text x="91.9399%" y="1759.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.06%)</title><rect x="91.6899%" y="1733" width="0.0558%" height="15" fill="rgb(230,176,47)"/><text x="91.9399%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.06%)</title><rect x="91.7457%" y="1845" width="0.0558%" height="15" fill="rgb(244,2,33)"/><text x="91.9957%" y="1855.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::PartialEq&gt;::eq (2 samples, 0.11%)</title><rect x="91.8015%" y="1797" width="0.1115%" height="15" fill="rgb(231,100,17)"/><text x="92.0515%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::eq (2 samples, 0.11%)</title><rect x="91.8015%" y="1781" width="0.1115%" height="15" fill="rgb(245,23,12)"/><text x="92.0515%" y="1791.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="91.8015%" y="1765" width="0.1115%" height="15" fill="rgb(249,55,22)"/><text x="92.0515%" y="1775.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.06%)</title><rect x="91.8572%" y="1749" width="0.0558%" height="15" fill="rgb(207,134,9)"/><text x="92.1072%" y="1759.50"></text></g><g><title>std::path::Components::parse_single_component (1 samples, 0.06%)</title><rect x="91.8572%" y="1733" width="0.0558%" height="15" fill="rgb(218,134,0)"/><text x="92.1072%" y="1743.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::PartialEq&gt;::eq (1 samples, 0.06%)</title><rect x="91.9130%" y="1781" width="0.0558%" height="15" fill="rgb(213,212,33)"/><text x="92.1630%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::eq (1 samples, 0.06%)</title><rect x="91.9130%" y="1765" width="0.0558%" height="15" fill="rgb(252,106,18)"/><text x="92.1630%" y="1775.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="91.9130%" y="1749" width="0.0558%" height="15" fill="rgb(208,126,42)"/><text x="92.1630%" y="1759.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.06%)</title><rect x="91.9130%" y="1733" width="0.0558%" height="15" fill="rgb(246,175,29)"/><text x="92.1630%" y="1743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.06%)</title><rect x="91.9130%" y="1717" width="0.0558%" height="15" fill="rgb(215,13,50)"/><text x="92.1630%" y="1727.50"></text></g><g><title>cargo::main (6 samples, 0.33%)</title><rect x="91.6899%" y="1909" width="0.3346%" height="15" fill="rgb(216,172,15)"/><text x="91.9399%" y="1919.50"></text></g><g><title>cargo::commands::test::exec (6 samples, 0.33%)</title><rect x="91.6899%" y="1893" width="0.3346%" height="15" fill="rgb(212,103,13)"/><text x="91.9399%" y="1903.50"></text></g><g><title>cargo::util::command_prelude::ArgMatchesExt::workspace (5 samples, 0.28%)</title><rect x="91.7457%" y="1877" width="0.2789%" height="15" fill="rgb(231,171,36)"/><text x="91.9957%" y="1887.50"></text></g><g><title>cargo::core::workspace::Workspace::new (5 samples, 0.28%)</title><rect x="91.7457%" y="1861" width="0.2789%" height="15" fill="rgb(250,123,20)"/><text x="91.9957%" y="1871.50"></text></g><g><title>cargo::core::workspace::Workspace::find_members (4 samples, 0.22%)</title><rect x="91.8015%" y="1845" width="0.2231%" height="15" fill="rgb(212,53,50)"/><text x="92.0515%" y="1855.50"></text></g><g><title>cargo::core::workspace::Workspace::find_path_deps (4 samples, 0.22%)</title><rect x="91.8015%" y="1829" width="0.2231%" height="15" fill="rgb(243,54,12)"/><text x="92.0515%" y="1839.50"></text></g><g><title>cargo::core::workspace::Workspace::find_path_deps (4 samples, 0.22%)</title><rect x="91.8015%" y="1813" width="0.2231%" height="15" fill="rgb(234,101,34)"/><text x="92.0515%" y="1823.50"></text></g><g><title>cargo::core::workspace::Workspace::find_path_deps (2 samples, 0.11%)</title><rect x="91.9130%" y="1797" width="0.1115%" height="15" fill="rgb(254,67,22)"/><text x="92.1630%" y="1807.50"></text></g><g><title>cargo::util::paths::normalize_path (1 samples, 0.06%)</title><rect x="91.9688%" y="1781" width="0.0558%" height="15" fill="rgb(250,35,47)"/><text x="92.2188%" y="1791.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.06%)</title><rect x="91.9688%" y="1765" width="0.0558%" height="15" fill="rgb(226,126,38)"/><text x="92.2188%" y="1775.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.06%)</title><rect x="91.9688%" y="1749" width="0.0558%" height="15" fill="rgb(216,138,53)"/><text x="92.2188%" y="1759.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="92.0245%" y="1845" width="0.0558%" height="15" fill="rgb(246,199,43)"/><text x="92.2745%" y="1855.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.06%)</title><rect x="92.0245%" y="1829" width="0.0558%" height="15" fill="rgb(232,125,11)"/><text x="92.2745%" y="1839.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="92.0245%" y="1813" width="0.0558%" height="15" fill="rgb(218,219,45)"/><text x="92.2745%" y="1823.50"></text></g><g><title>&lt;cargo::core::package::Package as core::fmt::Display&gt;::fmt (1 samples, 0.06%)</title><rect x="92.0245%" y="1797" width="0.0558%" height="15" fill="rgb(216,102,54)"/><text x="92.2745%" y="1807.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.06%)</title><rect x="92.0245%" y="1781" width="0.0558%" height="15" fill="rgb(250,228,7)"/><text x="92.2745%" y="1791.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="92.0245%" y="1765" width="0.0558%" height="15" fill="rgb(226,125,25)"/><text x="92.2745%" y="1775.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::fmt::Display&gt;::fmt (1 samples, 0.06%)</title><rect x="92.0245%" y="1749" width="0.0558%" height="15" fill="rgb(224,165,27)"/><text x="92.2745%" y="1759.50"></text></g><g><title>cargo::core::compiler::compile (2 samples, 0.11%)</title><rect x="92.0245%" y="1861" width="0.1115%" height="15" fill="rgb(233,86,3)"/><text x="92.2745%" y="1871.50"></text></g><g><title>cargo::core::compiler::compile (1 samples, 0.06%)</title><rect x="92.0803%" y="1845" width="0.0558%" height="15" fill="rgb(228,116,20)"/><text x="92.3303%" y="1855.50"></text></g><g><title>cargo::core::compiler::compile (1 samples, 0.06%)</title><rect x="92.0803%" y="1829" width="0.0558%" height="15" fill="rgb(209,192,17)"/><text x="92.3303%" y="1839.50"></text></g><g><title>cargo::core::compiler::fingerprint::prepare_init (1 samples, 0.06%)</title><rect x="92.0803%" y="1813" width="0.0558%" height="15" fill="rgb(224,88,34)"/><text x="92.3303%" y="1823.50"></text></g><g><title>cargo::core::compiler::context::compilation_files::CompilationFiles::fingerprint_dir (1 samples, 0.06%)</title><rect x="92.0803%" y="1797" width="0.0558%" height="15" fill="rgb(233,38,6)"/><text x="92.3303%" y="1807.50"></text></g><g><title>cargo::core::compiler::compile (3 samples, 0.17%)</title><rect x="92.0245%" y="1877" width="0.1673%" height="15" fill="rgb(212,59,30)"/><text x="92.2745%" y="1887.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::enqueue (1 samples, 0.06%)</title><rect x="92.1361%" y="1861" width="0.0558%" height="15" fill="rgb(213,80,3)"/><text x="92.3861%" y="1871.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::enqueue::depend_on_deps_of_deps (1 samples, 0.06%)</title><rect x="92.1361%" y="1845" width="0.0558%" height="15" fill="rgb(251,178,7)"/><text x="92.3861%" y="1855.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::enqueue::depend_on_deps_of_deps (1 samples, 0.06%)</title><rect x="92.1361%" y="1829" width="0.0558%" height="15" fill="rgb(213,154,26)"/><text x="92.3861%" y="1839.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map (1 samples, 0.06%)</title><rect x="92.1919%" y="1877" width="0.0558%" height="15" fill="rgb(238,165,49)"/><text x="92.4419%" y="1887.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map::build (1 samples, 0.06%)</title><rect x="92.1919%" y="1861" width="0.0558%" height="15" fill="rgb(248,91,46)"/><text x="92.4419%" y="1871.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map::build (1 samples, 0.06%)</title><rect x="92.1919%" y="1845" width="0.0558%" height="15" fill="rgb(244,21,52)"/><text x="92.4419%" y="1855.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map::build (1 samples, 0.06%)</title><rect x="92.1919%" y="1829" width="0.0558%" height="15" fill="rgb(247,122,20)"/><text x="92.4419%" y="1839.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map::build (1 samples, 0.06%)</title><rect x="92.1919%" y="1813" width="0.0558%" height="15" fill="rgb(218,27,9)"/><text x="92.4419%" y="1823.50"></text></g><g><title>cargo::core::compiler::custom_build::build_map::build (1 samples, 0.06%)</title><rect x="92.1919%" y="1797" width="0.0558%" height="15" fill="rgb(246,7,6)"/><text x="92.4419%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.06%)</title><rect x="92.1919%" y="1781" width="0.0558%" height="15" fill="rgb(227,135,54)"/><text x="92.4419%" y="1791.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.06%)</title><rect x="92.1919%" y="1765" width="0.0558%" height="15" fill="rgb(247,14,11)"/><text x="92.4419%" y="1775.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::execute (1 samples, 0.06%)</title><rect x="92.2476%" y="1877" width="0.0558%" height="15" fill="rgb(206,149,34)"/><text x="92.4976%" y="1887.50"></text></g><g><title>cargo::util::dependency_queue::DependencyQueue&lt;N,E,V&gt;::queue_finished::depth (1 samples, 0.06%)</title><rect x="92.2476%" y="1861" width="0.0558%" height="15" fill="rgb(227,228,4)"/><text x="92.4976%" y="1871.50"></text></g><g><title>cargo::util::dependency_queue::DependencyQueue&lt;N,E,V&gt;::queue_finished::depth (1 samples, 0.06%)</title><rect x="92.2476%" y="1845" width="0.0558%" height="15" fill="rgb(238,218,28)"/><text x="92.4976%" y="1855.50"></text></g><g><title>cargo::util::dependency_queue::DependencyQueue&lt;N,E,V&gt;::queue_finished::depth (1 samples, 0.06%)</title><rect x="92.2476%" y="1829" width="0.0558%" height="15" fill="rgb(252,86,40)"/><text x="92.4976%" y="1839.50"></text></g><g><title>cargo::util::dependency_queue::DependencyQueue&lt;N,E,V&gt;::queue_finished::depth (1 samples, 0.06%)</title><rect x="92.2476%" y="1813" width="0.0558%" height="15" fill="rgb(251,225,11)"/><text x="92.4976%" y="1823.50"></text></g><g><title>cargo::util::dependency_queue::DependencyQueue&lt;N,E,V&gt;::queue_finished::depth (1 samples, 0.06%)</title><rect x="92.2476%" y="1797" width="0.0558%" height="15" fill="rgb(206,46,49)"/><text x="92.4976%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.06%)</title><rect x="92.2476%" y="1781" width="0.0558%" height="15" fill="rgb(245,128,24)"/><text x="92.4976%" y="1791.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.06%)</title><rect x="92.2476%" y="1765" width="0.0558%" height="15" fill="rgb(219,177,34)"/><text x="92.4976%" y="1775.50"></text></g><g><title>cargo::ops::cargo_compile::compile_ws (6 samples, 0.33%)</title><rect x="92.0245%" y="1909" width="0.3346%" height="15" fill="rgb(218,60,48)"/><text x="92.2745%" y="1919.50"></text></g><g><title>cargo::core::compiler::context::Context::compile (6 samples, 0.33%)</title><rect x="92.0245%" y="1893" width="0.3346%" height="15" fill="rgb(221,11,5)"/><text x="92.2745%" y="1903.50"></text></g><g><title>cargo::core::compiler::output_depinfo::output_depinfo (1 samples, 0.06%)</title><rect x="92.3034%" y="1877" width="0.0558%" height="15" fill="rgb(220,148,13)"/><text x="92.5534%" y="1887.50"></text></g><g><title>cargo::core::compiler::output_depinfo::add_deps_for_unit (1 samples, 0.06%)</title><rect x="92.3034%" y="1861" width="0.0558%" height="15" fill="rgb(210,16,3)"/><text x="92.5534%" y="1871.50"></text></g><g><title>cargo::core::compiler::output_depinfo::add_deps_for_unit (1 samples, 0.06%)</title><rect x="92.3034%" y="1845" width="0.0558%" height="15" fill="rgb(236,80,2)"/><text x="92.5534%" y="1855.50"></text></g><g><title>cargo::core::compiler::output_depinfo::add_deps_for_unit (1 samples, 0.06%)</title><rect x="92.3034%" y="1829" width="0.0558%" height="15" fill="rgb(239,129,19)"/><text x="92.5534%" y="1839.50"></text></g><g><title>cargo::core::compiler::fingerprint::parse_dep_info (1 samples, 0.06%)</title><rect x="92.3034%" y="1813" width="0.0558%" height="15" fill="rgb(220,106,35)"/><text x="92.5534%" y="1823.50"></text></g><g><title>std::fs::read::inner (1 samples, 0.06%)</title><rect x="92.3034%" y="1797" width="0.0558%" height="15" fill="rgb(252,139,45)"/><text x="92.5534%" y="1807.50"></text></g><g><title>std::fs::File::open (1 samples, 0.06%)</title><rect x="92.3034%" y="1781" width="0.0558%" height="15" fill="rgb(229,8,36)"/><text x="92.5534%" y="1791.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.06%)</title><rect x="92.3034%" y="1765" width="0.0558%" height="15" fill="rgb(230,126,33)"/><text x="92.5534%" y="1775.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.06%)</title><rect x="92.3034%" y="1749" width="0.0558%" height="15" fill="rgb(239,140,21)"/><text x="92.5534%" y="1759.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.06%)</title><rect x="92.3034%" y="1733" width="0.0558%" height="15" fill="rgb(254,104,9)"/><text x="92.5534%" y="1743.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.06%)</title><rect x="92.3034%" y="1717" width="0.0558%" height="15" fill="rgb(239,52,14)"/><text x="92.5534%" y="1727.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.06%)</title><rect x="92.3034%" y="1701" width="0.0558%" height="15" fill="rgb(208,227,44)"/><text x="92.5534%" y="1711.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.06%)</title><rect x="92.3034%" y="1685" width="0.0558%" height="15" fill="rgb(246,18,19)"/><text x="92.5534%" y="1695.50"></text></g><g><title>__libc_open64 (1 samples, 0.06%)</title><rect x="92.3034%" y="1669" width="0.0558%" height="15" fill="rgb(235,228,25)"/><text x="92.5534%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1653" width="0.0558%" height="15" fill="rgb(240,156,20)"/><text x="92.5534%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1637" width="0.0558%" height="15" fill="rgb(224,8,20)"/><text x="92.5534%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1621" width="0.0558%" height="15" fill="rgb(214,12,52)"/><text x="92.5534%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1605" width="0.0558%" height="15" fill="rgb(211,220,47)"/><text x="92.5534%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1589" width="0.0558%" height="15" fill="rgb(250,173,5)"/><text x="92.5534%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1573" width="0.0558%" height="15" fill="rgb(250,125,52)"/><text x="92.5534%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1557" width="0.0558%" height="15" fill="rgb(209,133,18)"/><text x="92.5534%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1541" width="0.0558%" height="15" fill="rgb(216,173,22)"/><text x="92.5534%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="92.3034%" y="1525" width="0.0558%" height="15" fill="rgb(205,3,22)"/><text x="92.5534%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="92.3592%" y="1893" width="0.0558%" height="15" fill="rgb(248,22,20)"/><text x="92.6092%" y="1903.50"></text></g><g><title>cargo::core::compiler::build_context::target_info::RustcTargetData::new (1 samples, 0.06%)</title><rect x="92.4149%" y="1893" width="0.0558%" height="15" fill="rgb(233,6,29)"/><text x="92.6649%" y="1903.50"></text></g><g><title>cargo::core::compiler::build_context::target_info::TargetInfo::new (1 samples, 0.06%)</title><rect x="92.4149%" y="1877" width="0.0558%" height="15" fill="rgb(240,22,54)"/><text x="92.6649%" y="1887.50"></text></g><g><title>cargo::core::compiler::build_context::target_info::env_args (1 samples, 0.06%)</title><rect x="92.4149%" y="1861" width="0.0558%" height="15" fill="rgb(231,133,32)"/><text x="92.6649%" y="1871.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="92.4149%" y="1845" width="0.0558%" height="15" fill="rgb(248,193,4)"/><text x="92.6649%" y="1855.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="92.4149%" y="1829" width="0.0558%" height="15" fill="rgb(211,178,46)"/><text x="92.6649%" y="1839.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="92.4149%" y="1813" width="0.0558%" height="15" fill="rgb(224,5,42)"/><text x="92.6649%" y="1823.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::build_unit_dependencies (1 samples, 0.06%)</title><rect x="92.4707%" y="1893" width="0.0558%" height="15" fill="rgb(239,176,25)"/><text x="92.7207%" y="1903.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::deps_of_roots (1 samples, 0.06%)</title><rect x="92.4707%" y="1877" width="0.0558%" height="15" fill="rgb(245,187,50)"/><text x="92.7207%" y="1887.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::deps_of (1 samples, 0.06%)</title><rect x="92.4707%" y="1861" width="0.0558%" height="15" fill="rgb(248,24,15)"/><text x="92.7207%" y="1871.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::deps_of (1 samples, 0.06%)</title><rect x="92.4707%" y="1845" width="0.0558%" height="15" fill="rgb(205,166,13)"/><text x="92.7207%" y="1855.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::deps_of (1 samples, 0.06%)</title><rect x="92.4707%" y="1829" width="0.0558%" height="15" fill="rgb(208,114,23)"/><text x="92.7207%" y="1839.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::compute_deps (1 samples, 0.06%)</title><rect x="92.4707%" y="1813" width="0.0558%" height="15" fill="rgb(239,127,18)"/><text x="92.7207%" y="1823.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::new_unit_dep_with_profile (1 samples, 0.06%)</title><rect x="92.4707%" y="1797" width="0.0558%" height="15" fill="rgb(219,154,28)"/><text x="92.7207%" y="1807.50"></text></g><g><title>cargo::core::compiler::unit::UnitInterner::intern (1 samples, 0.06%)</title><rect x="92.4707%" y="1781" width="0.0558%" height="15" fill="rgb(225,157,23)"/><text x="92.7207%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="92.5265%" y="1861" width="0.0558%" height="15" fill="rgb(219,8,6)"/><text x="92.7765%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="92.5265%" y="1845" width="0.0558%" height="15" fill="rgb(212,47,6)"/><text x="92.7765%" y="1855.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous::{{closure}} (1 samples, 0.06%)</title><rect x="92.5265%" y="1829" width="0.0558%" height="15" fill="rgb(224,190,4)"/><text x="92.7765%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.06%)</title><rect x="92.5265%" y="1813" width="0.0558%" height="15" fill="rgb(239,183,29)"/><text x="92.7765%" y="1823.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.5265%" y="1797" width="0.0558%" height="15" fill="rgb(213,57,7)"/><text x="92.7765%" y="1807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.5265%" y="1781" width="0.0558%" height="15" fill="rgb(216,148,1)"/><text x="92.7765%" y="1791.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="92.5823%" y="1861" width="0.1115%" height="15" fill="rgb(236,182,29)"/><text x="92.8323%" y="1871.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="92.6380%" y="1845" width="0.0558%" height="15" fill="rgb(244,120,48)"/><text x="92.8880%" y="1855.50"></text></g><g><title>cargo::core::registry::PackageRegistry::add_to_yanked_whitelist (1 samples, 0.06%)</title><rect x="92.6938%" y="1861" width="0.0558%" height="15" fill="rgb(206,71,34)"/><text x="92.9438%" y="1871.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="92.6938%" y="1845" width="0.0558%" height="15" fill="rgb(242,32,6)"/><text x="92.9438%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="92.6938%" y="1829" width="0.0558%" height="15" fill="rgb(241,35,3)"/><text x="92.9438%" y="1839.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.6938%" y="1813" width="0.0558%" height="15" fill="rgb(222,62,19)"/><text x="92.9438%" y="1823.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.06%)</title><rect x="92.6938%" y="1797" width="0.0558%" height="15" fill="rgb(223,110,41)"/><text x="92.9438%" y="1807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.6938%" y="1781" width="0.0558%" height="15" fill="rgb(208,224,4)"/><text x="92.9438%" y="1791.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (5 samples, 0.28%)</title><rect x="92.5265%" y="1877" width="0.2789%" height="15" fill="rgb(241,137,19)"/><text x="92.7765%" y="1887.50"></text></g><g><title>cargo::core::resolver::resolve (1 samples, 0.06%)</title><rect x="92.7496%" y="1861" width="0.0558%" height="15" fill="rgb(244,24,17)"/><text x="92.9996%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="92.7496%" y="1845" width="0.0558%" height="15" fill="rgb(245,178,49)"/><text x="92.9996%" y="1855.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.7496%" y="1829" width="0.0558%" height="15" fill="rgb(219,160,38)"/><text x="92.9996%" y="1839.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.7496%" y="1813" width="0.0558%" height="15" fill="rgb(228,137,14)"/><text x="92.9996%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="92.8054%" y="1845" width="0.0558%" height="15" fill="rgb(237,134,11)"/><text x="93.0554%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="92.8054%" y="1829" width="0.0558%" height="15" fill="rgb(211,126,44)"/><text x="93.0554%" y="1839.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.8054%" y="1813" width="0.0558%" height="15" fill="rgb(226,171,33)"/><text x="93.0554%" y="1823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.8054%" y="1797" width="0.0558%" height="15" fill="rgb(253,99,13)"/><text x="93.0554%" y="1807.50"></text></g><g><title>cargo::ops::resolve::register_previous_locks::{{closure}} (1 samples, 0.06%)</title><rect x="92.8611%" y="1845" width="0.0558%" height="15" fill="rgb(244,48,7)"/><text x="93.1111%" y="1855.50"></text></g><g><title>url::file_url_segments_to_pathbuf (1 samples, 0.06%)</title><rect x="92.8611%" y="1829" width="0.0558%" height="15" fill="rgb(244,217,54)"/><text x="93.1111%" y="1839.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.06%)</title><rect x="92.8611%" y="1813" width="0.0558%" height="15" fill="rgb(224,15,18)"/><text x="93.1111%" y="1823.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.06%)</title><rect x="92.8611%" y="1797" width="0.0558%" height="15" fill="rgb(244,99,12)"/><text x="93.1111%" y="1807.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous::{{closure}} (1 samples, 0.06%)</title><rect x="92.9169%" y="1845" width="0.0558%" height="15" fill="rgb(233,226,8)"/><text x="93.1669%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.06%)</title><rect x="92.9169%" y="1829" width="0.0558%" height="15" fill="rgb(229,211,3)"/><text x="93.1669%" y="1839.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.9169%" y="1813" width="0.0558%" height="15" fill="rgb(216,140,21)"/><text x="93.1669%" y="1823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.9169%" y="1797" width="0.0558%" height="15" fill="rgb(234,122,30)"/><text x="93.1669%" y="1807.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (9 samples, 0.50%)</title><rect x="92.5265%" y="1893" width="0.5020%" height="15" fill="rgb(236,25,46)"/><text x="92.7765%" y="1903.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (4 samples, 0.22%)</title><rect x="92.8054%" y="1877" width="0.2231%" height="15" fill="rgb(217,52,54)"/><text x="93.0554%" y="1887.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (4 samples, 0.22%)</title><rect x="92.8054%" y="1861" width="0.2231%" height="15" fill="rgb(222,29,26)"/><text x="93.0554%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="92.9727%" y="1845" width="0.0558%" height="15" fill="rgb(216,177,29)"/><text x="93.2227%" y="1855.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="92.9727%" y="1829" width="0.0558%" height="15" fill="rgb(247,136,51)"/><text x="93.2227%" y="1839.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="92.9727%" y="1813" width="0.0558%" height="15" fill="rgb(231,47,47)"/><text x="93.2227%" y="1823.50"></text></g><g><title>cargo::ops::cargo_compile::create_bcx (13 samples, 0.73%)</title><rect x="92.3592%" y="1909" width="0.7250%" height="15" fill="rgb(211,192,36)"/><text x="92.6092%" y="1919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="93.0284%" y="1893" width="0.0558%" height="15" fill="rgb(229,156,32)"/><text x="93.2784%" y="1903.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.06%)</title><rect x="93.0284%" y="1877" width="0.0558%" height="15" fill="rgb(248,213,20)"/><text x="93.2784%" y="1887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="93.0284%" y="1861" width="0.0558%" height="15" fill="rgb(217,64,7)"/><text x="93.2784%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (1 samples, 0.06%)</title><rect x="93.0284%" y="1845" width="0.0558%" height="15" fill="rgb(232,142,8)"/><text x="93.2784%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.0842%" y="1829" width="0.0558%" height="15" fill="rgb(224,92,44)"/><text x="93.3342%" y="1839.50"></text></g><g><title>toml::tokens::Tokenizer::eat_comment (1 samples, 0.06%)</title><rect x="93.2515%" y="1813" width="0.0558%" height="15" fill="rgb(214,169,17)"/><text x="93.5015%" y="1823.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="93.2515%" y="1797" width="0.0558%" height="15" fill="rgb(210,59,37)"/><text x="93.5015%" y="1807.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (2 samples, 0.11%)</title><rect x="93.3073%" y="1813" width="0.1115%" height="15" fill="rgb(214,116,48)"/><text x="93.5573%" y="1823.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.11%)</title><rect x="93.3073%" y="1797" width="0.1115%" height="15" fill="rgb(244,191,6)"/><text x="93.5573%" y="1807.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="93.3631%" y="1781" width="0.0558%" height="15" fill="rgb(241,50,52)"/><text x="93.6131%" y="1791.50"></text></g><g><title>toml::tokens::Tokenizer::expect_spanned (1 samples, 0.06%)</title><rect x="93.4189%" y="1813" width="0.0558%" height="15" fill="rgb(236,75,39)"/><text x="93.6689%" y="1823.50"></text></g><g><title>&lt;toml::tokens::Token as core::cmp::PartialEq&gt;::eq (1 samples, 0.06%)</title><rect x="93.4189%" y="1797" width="0.0558%" height="15" fill="rgb(236,99,0)"/><text x="93.6689%" y="1807.50"></text></g><g><title>cargo::ops::cargo_read_manifest::read_package (9 samples, 0.50%)</title><rect x="93.0842%" y="1909" width="0.5020%" height="15" fill="rgb(207,202,15)"/><text x="93.3342%" y="1919.50"></text></g><g><title>cargo::util::toml::read_manifest (9 samples, 0.50%)</title><rect x="93.0842%" y="1893" width="0.5020%" height="15" fill="rgb(233,207,14)"/><text x="93.3342%" y="1903.50"></text></g><g><title>cargo::util::toml::parse (9 samples, 0.50%)</title><rect x="93.0842%" y="1877" width="0.5020%" height="15" fill="rgb(226,27,51)"/><text x="93.3342%" y="1887.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (9 samples, 0.50%)</title><rect x="93.0842%" y="1861" width="0.5020%" height="15" fill="rgb(206,104,42)"/><text x="93.3342%" y="1871.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.50%)</title><rect x="93.0842%" y="1845" width="0.5020%" height="15" fill="rgb(212,225,4)"/><text x="93.3342%" y="1855.50"></text></g><g><title>toml::de::Deserializer::tables (8 samples, 0.45%)</title><rect x="93.1400%" y="1829" width="0.4462%" height="15" fill="rgb(233,96,42)"/><text x="93.3900%" y="1839.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.11%)</title><rect x="93.4746%" y="1813" width="0.1115%" height="15" fill="rgb(229,21,32)"/><text x="93.7246%" y="1823.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="93.5304%" y="1797" width="0.0558%" height="15" fill="rgb(226,216,24)"/><text x="93.7804%" y="1807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.5862%" y="1861" width="0.0558%" height="15" fill="rgb(221,163,17)"/><text x="93.8362%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::manifest::Manifest&gt; (1 samples, 0.06%)</title><rect x="93.5862%" y="1845" width="0.0558%" height="15" fill="rgb(216,216,42)"/><text x="93.8362%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::util::toml::TomlManifest&gt; (1 samples, 0.06%)</title><rect x="93.5862%" y="1829" width="0.0558%" height="15" fill="rgb(240,118,7)"/><text x="93.8362%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.5862%" y="1813" width="0.0558%" height="15" fill="rgb(221,67,37)"/><text x="93.8362%" y="1823.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="93.5862%" y="1797" width="0.0558%" height="15" fill="rgb(241,32,44)"/><text x="93.8362%" y="1807.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="93.5862%" y="1781" width="0.0558%" height="15" fill="rgb(235,204,43)"/><text x="93.8362%" y="1791.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="93.5862%" y="1765" width="0.0558%" height="15" fill="rgb(213,116,10)"/><text x="93.8362%" y="1775.50"></text></g><g><title>cargo::ops::cargo_test::run_tests (2 samples, 0.11%)</title><rect x="93.5862%" y="1909" width="0.1115%" height="15" fill="rgb(239,15,48)"/><text x="93.8362%" y="1919.50"></text></g><g><title>cargo::ops::cargo_compile::compile (2 samples, 0.11%)</title><rect x="93.5862%" y="1893" width="0.1115%" height="15" fill="rgb(207,123,36)"/><text x="93.8362%" y="1903.50"></text></g><g><title>cargo::ops::cargo_compile::compile_ws (2 samples, 0.11%)</title><rect x="93.5862%" y="1877" width="0.1115%" height="15" fill="rgb(209,103,30)"/><text x="93.8362%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::compiler::build_context::BuildContext&gt; (1 samples, 0.06%)</title><rect x="93.6419%" y="1861" width="0.0558%" height="15" fill="rgb(238,100,19)"/><text x="93.8919%" y="1871.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.6419%" y="1845" width="0.0558%" height="15" fill="rgb(244,30,14)"/><text x="93.8919%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::sources::registry::RegistrySource&gt; (1 samples, 0.06%)</title><rect x="93.6419%" y="1829" width="0.0558%" height="15" fill="rgb(249,174,6)"/><text x="93.8919%" y="1839.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.6419%" y="1813" width="0.0558%" height="15" fill="rgb(235,213,41)"/><text x="93.8919%" y="1823.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.06%)</title><rect x="93.6419%" y="1797" width="0.0558%" height="15" fill="rgb(213,118,6)"/><text x="93.8919%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="93.6977%" y="1685" width="0.0558%" height="15" fill="rgb(235,44,51)"/><text x="93.9477%" y="1695.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="93.6977%" y="1669" width="0.0558%" height="15" fill="rgb(217,9,53)"/><text x="93.9477%" y="1679.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="93.6977%" y="1653" width="0.0558%" height="15" fill="rgb(237,172,34)"/><text x="93.9477%" y="1663.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="93.6977%" y="1637" width="0.0558%" height="15" fill="rgb(206,206,11)"/><text x="93.9477%" y="1647.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="93.6977%" y="1621" width="0.0558%" height="15" fill="rgb(214,149,29)"/><text x="93.9477%" y="1631.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (2 samples, 0.11%)</title><rect x="93.6977%" y="1909" width="0.1115%" height="15" fill="rgb(208,123,3)"/><text x="93.9477%" y="1919.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.6977%" y="1893" width="0.1115%" height="15" fill="rgb(229,126,4)"/><text x="93.9477%" y="1903.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.6977%" y="1877" width="0.1115%" height="15" fill="rgb(222,92,36)"/><text x="93.9477%" y="1887.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.11%)</title><rect x="93.6977%" y="1861" width="0.1115%" height="15" fill="rgb(216,39,41)"/><text x="93.9477%" y="1871.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.6977%" y="1845" width="0.1115%" height="15" fill="rgb(253,127,28)"/><text x="93.9477%" y="1855.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="93.6977%" y="1829" width="0.1115%" height="15" fill="rgb(249,152,51)"/><text x="93.9477%" y="1839.50"></text></g><g><title>cargo::core::source::source_id::SourceId::from_url (2 samples, 0.11%)</title><rect x="93.6977%" y="1813" width="0.1115%" height="15" fill="rgb(209,123,42)"/><text x="93.9477%" y="1823.50"></text></g><g><title>cargo::core::source::source_id::SourceId::new (2 samples, 0.11%)</title><rect x="93.6977%" y="1797" width="0.1115%" height="15" fill="rgb(241,118,22)"/><text x="93.9477%" y="1807.50"></text></g><g><title>cargo::util::canonical_url::CanonicalUrl::new (2 samples, 0.11%)</title><rect x="93.6977%" y="1781" width="0.1115%" height="15" fill="rgb(208,25,7)"/><text x="93.9477%" y="1791.50"></text></g><g><title>url::ParseOptions::parse (2 samples, 0.11%)</title><rect x="93.6977%" y="1765" width="0.1115%" height="15" fill="rgb(243,144,39)"/><text x="93.9477%" y="1775.50"></text></g><g><title>url::parser::Parser::parse_url (2 samples, 0.11%)</title><rect x="93.6977%" y="1749" width="0.1115%" height="15" fill="rgb(250,50,5)"/><text x="93.9477%" y="1759.50"></text></g><g><title>url::parser::Parser::after_double_slash (2 samples, 0.11%)</title><rect x="93.6977%" y="1733" width="0.1115%" height="15" fill="rgb(207,67,11)"/><text x="93.9477%" y="1743.50"></text></g><g><title>url::parser::Parser::parse_host (2 samples, 0.11%)</title><rect x="93.6977%" y="1717" width="0.1115%" height="15" fill="rgb(245,204,40)"/><text x="93.9477%" y="1727.50"></text></g><g><title>url::host::Host::parse (2 samples, 0.11%)</title><rect x="93.6977%" y="1701" width="0.1115%" height="15" fill="rgb(238,228,24)"/><text x="93.9477%" y="1711.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.06%)</title><rect x="93.7535%" y="1685" width="0.0558%" height="15" fill="rgb(217,116,22)"/><text x="94.0035%" y="1695.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.06%)</title><rect x="93.7535%" y="1669" width="0.0558%" height="15" fill="rgb(234,98,12)"/><text x="94.0035%" y="1679.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.06%)</title><rect x="93.7535%" y="1653" width="0.0558%" height="15" fill="rgb(242,170,50)"/><text x="94.0035%" y="1663.50"></text></g><g><title>idna::uts46::validate (1 samples, 0.06%)</title><rect x="93.7535%" y="1637" width="0.0558%" height="15" fill="rgb(235,7,5)"/><text x="94.0035%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.8093%" y="1861" width="0.0558%" height="15" fill="rgb(241,114,28)"/><text x="94.0593%" y="1871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="93.8650%" y="1861" width="0.0558%" height="15" fill="rgb(246,112,42)"/><text x="94.1150%" y="1871.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (3 samples, 0.17%)</title><rect x="93.8093%" y="1909" width="0.1673%" height="15" fill="rgb(248,228,14)"/><text x="94.0593%" y="1919.50"></text></g><g><title>cargo::core::resolver::resolve (3 samples, 0.17%)</title><rect x="93.8093%" y="1893" width="0.1673%" height="15" fill="rgb(208,133,18)"/><text x="94.0593%" y="1903.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (3 samples, 0.17%)</title><rect x="93.8093%" y="1877" width="0.1673%" height="15" fill="rgb(207,35,49)"/><text x="94.0593%" y="1887.50"></text></g><g><title>cargo::core::resolver::activate (1 samples, 0.06%)</title><rect x="93.9208%" y="1861" width="0.0558%" height="15" fill="rgb(205,68,36)"/><text x="94.1708%" y="1871.50"></text></g><g><title>&lt;cargo::core::dependency::Inner as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="93.9208%" y="1845" width="0.0558%" height="15" fill="rgb(245,62,40)"/><text x="94.1708%" y="1855.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId as serde::de::Deserialize&gt;::deserialize (1 samples, 0.06%)</title><rect x="93.9766%" y="1813" width="0.0558%" height="15" fill="rgb(228,27,24)"/><text x="94.2266%" y="1823.50"></text></g><g><title>cargo::core::source::source_id::SourceId::from_url (1 samples, 0.06%)</title><rect x="93.9766%" y="1797" width="0.0558%" height="15" fill="rgb(253,19,12)"/><text x="94.2266%" y="1807.50"></text></g><g><title>cargo::core::source::source_id::SourceId::with_precise (1 samples, 0.06%)</title><rect x="93.9766%" y="1781" width="0.0558%" height="15" fill="rgb(232,28,20)"/><text x="94.2266%" y="1791.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (2 samples, 0.11%)</title><rect x="93.9766%" y="1909" width="0.1115%" height="15" fill="rgb(218,35,51)"/><text x="94.2266%" y="1919.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (2 samples, 0.11%)</title><rect x="93.9766%" y="1893" width="0.1115%" height="15" fill="rgb(212,90,40)"/><text x="94.2266%" y="1903.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.9766%" y="1877" width="0.1115%" height="15" fill="rgb(220,172,12)"/><text x="94.2266%" y="1887.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.9766%" y="1861" width="0.1115%" height="15" fill="rgb(226,159,20)"/><text x="94.2266%" y="1871.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.11%)</title><rect x="93.9766%" y="1845" width="0.1115%" height="15" fill="rgb(234,205,16)"/><text x="94.2266%" y="1855.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="93.9766%" y="1829" width="0.1115%" height="15" fill="rgb(207,9,39)"/><text x="94.2266%" y="1839.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="94.0323%" y="1813" width="0.0558%" height="15" fill="rgb(249,143,15)"/><text x="94.2823%" y="1823.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.06%)</title><rect x="94.0323%" y="1797" width="0.0558%" height="15" fill="rgb(253,133,29)"/><text x="94.2823%" y="1807.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as serde::de::Deserialize&gt;::deserialize (1 samples, 0.06%)</title><rect x="94.0323%" y="1781" width="0.0558%" height="15" fill="rgb(221,187,0)"/><text x="94.2823%" y="1791.50"></text></g><g><title>cargo::core::resolver::resolve::Resolve::new (1 samples, 0.06%)</title><rect x="94.0881%" y="1845" width="0.0558%" height="15" fill="rgb(205,204,26)"/><text x="94.3381%" y="1855.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="94.0881%" y="1829" width="0.0558%" height="15" fill="rgb(224,68,54)"/><text x="94.3381%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="94.0881%" y="1813" width="0.0558%" height="15" fill="rgb(209,67,4)"/><text x="94.3381%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="94.0881%" y="1797" width="0.0558%" height="15" fill="rgb(228,229,18)"/><text x="94.3381%" y="1807.50"></text></g><g><title>&lt;cargo::core::package_id::PackageId as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="94.0881%" y="1781" width="0.0558%" height="15" fill="rgb(231,89,13)"/><text x="94.3381%" y="1791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="94.0881%" y="1765" width="0.0558%" height="15" fill="rgb(210,182,18)"/><text x="94.3381%" y="1775.50"></text></g><g><title>cargo::core::resolver::encode::EncodableResolve::into_resolve (2 samples, 0.11%)</title><rect x="94.0881%" y="1861" width="0.1115%" height="15" fill="rgb(240,105,2)"/><text x="94.3381%" y="1871.50"></text></g><g><title>cargo::util::interning::InternedString::new (1 samples, 0.06%)</title><rect x="94.1439%" y="1845" width="0.0558%" height="15" fill="rgb(207,170,50)"/><text x="94.3939%" y="1855.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="94.1997%" y="1813" width="0.0558%" height="15" fill="rgb(232,133,24)"/><text x="94.4497%" y="1823.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="94.1997%" y="1797" width="0.0558%" height="15" fill="rgb(235,166,27)"/><text x="94.4497%" y="1807.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.06%)</title><rect x="94.1997%" y="1781" width="0.0558%" height="15" fill="rgb(209,19,13)"/><text x="94.4497%" y="1791.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.06%)</title><rect x="94.1997%" y="1765" width="0.0558%" height="15" fill="rgb(226,79,39)"/><text x="94.4497%" y="1775.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="94.1997%" y="1749" width="0.0558%" height="15" fill="rgb(222,163,10)"/><text x="94.4497%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.06%)</title><rect x="94.1997%" y="1733" width="0.0558%" height="15" fill="rgb(214,44,19)"/><text x="94.4497%" y="1743.50"></text></g><g><title>toml::de::Deserializer::dotted_key (2 samples, 0.11%)</title><rect x="94.2554%" y="1797" width="0.1115%" height="15" fill="rgb(210,217,13)"/><text x="94.5054%" y="1807.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (2 samples, 0.11%)</title><rect x="94.2554%" y="1781" width="0.1115%" height="15" fill="rgb(237,61,54)"/><text x="94.5054%" y="1791.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="94.3112%" y="1765" width="0.0558%" height="15" fill="rgb(226,184,24)"/><text x="94.5612%" y="1775.50"></text></g><g><title>toml::de::Deserializer::value (1 samples, 0.06%)</title><rect x="94.3670%" y="1797" width="0.0558%" height="15" fill="rgb(223,226,4)"/><text x="94.6170%" y="1807.50"></text></g><g><title>toml::de::Deserializer::array::{{closure}} (1 samples, 0.06%)</title><rect x="94.3670%" y="1781" width="0.0558%" height="15" fill="rgb(210,26,41)"/><text x="94.6170%" y="1791.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (1 samples, 0.06%)</title><rect x="94.3670%" y="1765" width="0.0558%" height="15" fill="rgb(220,221,6)"/><text x="94.6170%" y="1775.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="94.3670%" y="1749" width="0.0558%" height="15" fill="rgb(225,89,49)"/><text x="94.6170%" y="1759.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="94.3670%" y="1733" width="0.0558%" height="15" fill="rgb(218,70,45)"/><text x="94.6170%" y="1743.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (1 samples, 0.06%)</title><rect x="94.4228%" y="1797" width="0.0558%" height="15" fill="rgb(238,166,21)"/><text x="94.6728%" y="1807.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="94.4228%" y="1781" width="0.0558%" height="15" fill="rgb(224,141,44)"/><text x="94.6728%" y="1791.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="94.4228%" y="1765" width="0.0558%" height="15" fill="rgb(230,12,49)"/><text x="94.6728%" y="1775.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (8 samples, 0.45%)</title><rect x="94.0881%" y="1877" width="0.4462%" height="15" fill="rgb(212,174,12)"/><text x="94.3381%" y="1887.50"></text></g><g><title>cargo::util::toml::parse (6 samples, 0.33%)</title><rect x="94.1997%" y="1861" width="0.3346%" height="15" fill="rgb(246,67,9)"/><text x="94.4497%" y="1871.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (6 samples, 0.33%)</title><rect x="94.1997%" y="1845" width="0.3346%" height="15" fill="rgb(239,35,23)"/><text x="94.4497%" y="1855.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.33%)</title><rect x="94.1997%" y="1829" width="0.3346%" height="15" fill="rgb(211,167,0)"/><text x="94.4497%" y="1839.50"></text></g><g><title>toml::de::Deserializer::tables (5 samples, 0.28%)</title><rect x="94.2554%" y="1813" width="0.2789%" height="15" fill="rgb(225,119,45)"/><text x="94.5054%" y="1823.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="94.4785%" y="1797" width="0.0558%" height="15" fill="rgb(210,162,6)"/><text x="94.7285%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.11%)</title><rect x="94.5343%" y="1813" width="0.1115%" height="15" fill="rgb(208,118,35)"/><text x="94.7843%" y="1823.50"></text></g><g><title>cargo::core::resolver::encode::encodable_resolve_node (2 samples, 0.11%)</title><rect x="94.5343%" y="1797" width="0.1115%" height="15" fill="rgb(239,4,53)"/><text x="94.7843%" y="1807.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="94.5901%" y="1781" width="0.0558%" height="15" fill="rgb(213,130,21)"/><text x="94.8401%" y="1791.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="94.5901%" y="1765" width="0.0558%" height="15" fill="rgb(235,148,0)"/><text x="94.8401%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="94.5901%" y="1749" width="0.0558%" height="15" fill="rgb(244,224,18)"/><text x="94.8401%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="94.5901%" y="1733" width="0.0558%" height="15" fill="rgb(211,214,4)"/><text x="94.8401%" y="1743.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="94.5901%" y="1717" width="0.0558%" height="15" fill="rgb(206,119,25)"/><text x="94.8401%" y="1727.50"></text></g><g><title>cargo::core::resolver::encode::&lt;impl serde::ser::Serialize for cargo::core::resolver::resolve::Resolve&gt;::serialize (3 samples, 0.17%)</title><rect x="94.5343%" y="1829" width="0.1673%" height="15" fill="rgb(243,93,47)"/><text x="94.7843%" y="1839.50"></text></g><g><title>cargo::core::resolver::encode::_::&lt;impl serde::ser::Serialize for cargo::core::resolver::encode::EncodableResolve&gt;::serialize (1 samples, 0.06%)</title><rect x="94.6458%" y="1813" width="0.0558%" height="15" fill="rgb(224,194,6)"/><text x="94.8958%" y="1823.50"></text></g><g><title>&lt;toml::value::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.06%)</title><rect x="94.6458%" y="1797" width="0.0558%" height="15" fill="rgb(243,229,6)"/><text x="94.8958%" y="1807.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.06%)</title><rect x="94.6458%" y="1781" width="0.0558%" height="15" fill="rgb(207,23,50)"/><text x="94.8958%" y="1791.50"></text></g><g><title>cargo::core::resolver::encode::_::&lt;impl serde::ser::Serialize for cargo::core::resolver::encode::EncodableDependency&gt;::serialize (1 samples, 0.06%)</title><rect x="94.6458%" y="1765" width="0.0558%" height="15" fill="rgb(253,192,32)"/><text x="94.8958%" y="1775.50"></text></g><g><title>&lt;toml::value::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.06%)</title><rect x="94.6458%" y="1749" width="0.0558%" height="15" fill="rgb(213,21,6)"/><text x="94.8958%" y="1759.50"></text></g><g><title>serde::ser::Serializer::collect_str (1 samples, 0.06%)</title><rect x="94.6458%" y="1733" width="0.0558%" height="15" fill="rgb(243,151,13)"/><text x="94.8958%" y="1743.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="94.6458%" y="1717" width="0.0558%" height="15" fill="rgb(233,165,41)"/><text x="94.8958%" y="1727.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as core::fmt::Display&gt;::fmt (1 samples, 0.06%)</title><rect x="94.6458%" y="1701" width="0.0558%" height="15" fill="rgb(246,176,45)"/><text x="94.8958%" y="1711.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.06%)</title><rect x="94.6458%" y="1685" width="0.0558%" height="15" fill="rgb(217,170,52)"/><text x="94.8958%" y="1695.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="94.6458%" y="1669" width="0.0558%" height="15" fill="rgb(214,203,54)"/><text x="94.8958%" y="1679.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="94.6458%" y="1653" width="0.0558%" height="15" fill="rgb(248,215,49)"/><text x="94.8958%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="94.6458%" y="1637" width="0.0558%" height="15" fill="rgb(208,46,10)"/><text x="94.8958%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="94.6458%" y="1621" width="0.0558%" height="15" fill="rgb(254,5,31)"/><text x="94.8958%" y="1631.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="94.6458%" y="1605" width="0.0558%" height="15" fill="rgb(222,104,33)"/><text x="94.8958%" y="1615.50"></text></g><g><title>cargo::ops::lockfile::emit_package (1 samples, 0.06%)</title><rect x="94.7016%" y="1829" width="0.0558%" height="15" fill="rgb(248,49,16)"/><text x="94.9516%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="94.7016%" y="1813" width="0.0558%" height="15" fill="rgb(232,198,41)"/><text x="94.9516%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="94.7016%" y="1797" width="0.0558%" height="15" fill="rgb(214,125,3)"/><text x="94.9516%" y="1807.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="94.7016%" y="1781" width="0.0558%" height="15" fill="rgb(229,220,28)"/><text x="94.9516%" y="1791.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="94.7016%" y="1765" width="0.0558%" height="15" fill="rgb(222,64,37)"/><text x="94.9516%" y="1775.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="94.7016%" y="1749" width="0.0558%" height="15" fill="rgb(249,184,13)"/><text x="94.9516%" y="1759.50"></text></g><g><title>cargo::ops::lockfile::write_pkg_lockfile (5 samples, 0.28%)</title><rect x="94.5343%" y="1877" width="0.2789%" height="15" fill="rgb(252,176,6)"/><text x="94.7843%" y="1887.50"></text></g><g><title>cargo::ops::lockfile::resolve_to_string_orig (5 samples, 0.28%)</title><rect x="94.5343%" y="1861" width="0.2789%" height="15" fill="rgb(228,153,7)"/><text x="94.7843%" y="1871.50"></text></g><g><title>cargo::ops::lockfile::serialize_resolve (5 samples, 0.28%)</title><rect x="94.5343%" y="1845" width="0.2789%" height="15" fill="rgb(242,193,5)"/><text x="94.7843%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,toml::value::Value&gt;&gt; (1 samples, 0.06%)</title><rect x="94.7574%" y="1829" width="0.0558%" height="15" fill="rgb(232,140,9)"/><text x="95.0074%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="94.7574%" y="1813" width="0.0558%" height="15" fill="rgb(213,222,16)"/><text x="95.0074%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,toml::value::Value&gt;&gt; (1 samples, 0.06%)</title><rect x="94.7574%" y="1797" width="0.0558%" height="15" fill="rgb(222,75,50)"/><text x="95.0074%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="94.8132%" y="1845" width="0.0558%" height="15" fill="rgb(205,180,2)"/><text x="95.0632%" y="1855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="94.8132%" y="1829" width="0.0558%" height="15" fill="rgb(216,34,7)"/><text x="95.0632%" y="1839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="94.8132%" y="1813" width="0.0558%" height="15" fill="rgb(253,16,32)"/><text x="95.0632%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::summary::Inner&gt; (1 samples, 0.06%)</title><rect x="94.8132%" y="1797" width="0.0558%" height="15" fill="rgb(208,97,28)"/><text x="95.0632%" y="1807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="94.8132%" y="1781" width="0.0558%" height="15" fill="rgb(225,92,11)"/><text x="95.0632%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.06%)</title><rect x="94.8689%" y="1845" width="0.0558%" height="15" fill="rgb(243,38,12)"/><text x="95.1189%" y="1855.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="94.8689%" y="1829" width="0.0558%" height="15" fill="rgb(208,139,16)"/><text x="95.1189%" y="1839.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (1 samples, 0.06%)</title><rect x="94.9247%" y="1845" width="0.0558%" height="15" fill="rgb(227,24,9)"/><text x="95.1747%" y="1855.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (1 samples, 0.06%)</title><rect x="94.9247%" y="1829" width="0.0558%" height="15" fill="rgb(206,62,11)"/><text x="95.1747%" y="1839.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (1 samples, 0.06%)</title><rect x="94.9247%" y="1813" width="0.0558%" height="15" fill="rgb(228,134,27)"/><text x="95.1747%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.06%)</title><rect x="94.9247%" y="1797" width="0.0558%" height="15" fill="rgb(205,55,33)"/><text x="95.1747%" y="1807.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="94.9247%" y="1781" width="0.0558%" height="15" fill="rgb(243,75,43)"/><text x="95.1747%" y="1791.50"></text></g><g><title>cargo::core::resolver::context::Context::graph (2 samples, 0.11%)</title><rect x="94.9805%" y="1845" width="0.1115%" height="15" fill="rgb(223,27,42)"/><text x="95.2305%" y="1855.50"></text></g><g><title>im_rc::util::linear_search_by (2 samples, 0.11%)</title><rect x="94.9805%" y="1829" width="0.1115%" height="15" fill="rgb(232,189,33)"/><text x="95.2305%" y="1839.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.06%)</title><rect x="95.0363%" y="1813" width="0.0558%" height="15" fill="rgb(210,9,39)"/><text x="95.2863%" y="1823.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (19 samples, 1.06%)</title><rect x="94.0881%" y="1909" width="1.0597%" height="15" fill="rgb(242,85,26)"/><text x="94.3381%" y="1919.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (19 samples, 1.06%)</title><rect x="94.0881%" y="1893" width="1.0597%" height="15" fill="rgb(248,44,4)"/><text x="94.3381%" y="1903.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (6 samples, 0.33%)</title><rect x="94.8132%" y="1877" width="0.3346%" height="15" fill="rgb(250,96,46)"/><text x="95.0632%" y="1887.50"></text></g><g><title>cargo::core::resolver::resolve (6 samples, 0.33%)</title><rect x="94.8132%" y="1861" width="0.3346%" height="15" fill="rgb(229,116,26)"/><text x="95.0632%" y="1871.50"></text></g><g><title>cargo::core::resolver::encode::encodable_package_id (1 samples, 0.06%)</title><rect x="95.0920%" y="1845" width="0.0558%" height="15" fill="rgb(246,94,34)"/><text x="95.3420%" y="1855.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="95.0920%" y="1829" width="0.0558%" height="15" fill="rgb(251,73,21)"/><text x="95.3420%" y="1839.50"></text></g><g><title>&lt;semver::version::Version as core::fmt::Display&gt;::fmt (1 samples, 0.06%)</title><rect x="95.0920%" y="1813" width="0.0558%" height="15" fill="rgb(254,121,25)"/><text x="95.3420%" y="1823.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.06%)</title><rect x="95.0920%" y="1797" width="0.0558%" height="15" fill="rgb(215,161,49)"/><text x="95.3420%" y="1807.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.06%)</title><rect x="95.0920%" y="1781" width="0.0558%" height="15" fill="rgb(221,43,13)"/><text x="95.3420%" y="1791.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="95.0920%" y="1765" width="0.0558%" height="15" fill="rgb(249,5,37)"/><text x="95.3420%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="95.0920%" y="1749" width="0.0558%" height="15" fill="rgb(226,25,44)"/><text x="95.3420%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.06%)</title><rect x="95.0920%" y="1733" width="0.0558%" height="15" fill="rgb(238,189,16)"/><text x="95.3420%" y="1743.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="95.1478%" y="1797" width="0.0558%" height="15" fill="rgb(251,186,8)"/><text x="95.3978%" y="1807.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="95.1478%" y="1781" width="0.0558%" height="15" fill="rgb(254,34,31)"/><text x="95.3978%" y="1791.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.06%)</title><rect x="95.1478%" y="1765" width="0.0558%" height="15" fill="rgb(225,215,27)"/><text x="95.3978%" y="1775.50"></text></g><g><title>&lt;toml::value::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.06%)</title><rect x="95.1478%" y="1749" width="0.0558%" height="15" fill="rgb(221,192,48)"/><text x="95.3978%" y="1759.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="95.1478%" y="1733" width="0.0558%" height="15" fill="rgb(219,137,20)"/><text x="95.3978%" y="1743.50"></text></g><g><title>cargo::util::interning::InternedString::new (1 samples, 0.06%)</title><rect x="95.1478%" y="1717" width="0.0558%" height="15" fill="rgb(219,84,11)"/><text x="95.3978%" y="1727.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="95.1478%" y="1893" width="0.1115%" height="15" fill="rgb(224,10,23)"/><text x="95.3978%" y="1903.50"></text></g><g><title>&lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlManifest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.11%)</title><rect x="95.1478%" y="1877" width="0.1115%" height="15" fill="rgb(248,22,39)"/><text x="95.3978%" y="1887.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.11%)</title><rect x="95.1478%" y="1861" width="0.1115%" height="15" fill="rgb(212,154,20)"/><text x="95.3978%" y="1871.50"></text></g><g><title>&lt;serde_ignored::Deserializer&lt;D,F&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.11%)</title><rect x="95.1478%" y="1845" width="0.1115%" height="15" fill="rgb(236,199,50)"/><text x="95.3978%" y="1855.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="95.1478%" y="1829" width="0.1115%" height="15" fill="rgb(211,9,17)"/><text x="95.3978%" y="1839.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.11%)</title><rect x="95.1478%" y="1813" width="0.1115%" height="15" fill="rgb(243,216,36)"/><text x="95.3978%" y="1823.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="95.2036%" y="1797" width="0.0558%" height="15" fill="rgb(250,2,10)"/><text x="95.4536%" y="1807.50"></text></g><g><title>cargo::core::dependency::Dependency::parse (1 samples, 0.06%)</title><rect x="95.2593%" y="1845" width="0.0558%" height="15" fill="rgb(226,50,48)"/><text x="95.5093%" y="1855.50"></text></g><g><title>cargo::core::dependency::parse_req_with_deprecated (1 samples, 0.06%)</title><rect x="95.2593%" y="1829" width="0.0558%" height="15" fill="rgb(243,81,16)"/><text x="95.5093%" y="1839.50"></text></g><g><title>semver::version_req::VersionReq::parse (1 samples, 0.06%)</title><rect x="95.2593%" y="1813" width="0.0558%" height="15" fill="rgb(250,14,2)"/><text x="95.5093%" y="1823.50"></text></g><g><title>cargo::core::source::source_id::SourceId::new (1 samples, 0.06%)</title><rect x="95.3151%" y="1845" width="0.0558%" height="15" fill="rgb(233,135,29)"/><text x="95.5651%" y="1855.50"></text></g><g><title>cargo::core::source::source_id::SourceId::wrap (1 samples, 0.06%)</title><rect x="95.3151%" y="1829" width="0.0558%" height="15" fill="rgb(224,64,43)"/><text x="95.5651%" y="1839.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::get (1 samples, 0.06%)</title><rect x="95.3151%" y="1813" width="0.0558%" height="15" fill="rgb(238,84,13)"/><text x="95.5651%" y="1823.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceIdInner as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="95.3151%" y="1797" width="0.0558%" height="15" fill="rgb(253,48,26)"/><text x="95.5651%" y="1807.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceKind as core::hash::Hash&gt;::hash (1 samples, 0.06%)</title><rect x="95.3151%" y="1781" width="0.0558%" height="15" fill="rgb(205,223,31)"/><text x="95.5651%" y="1791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="95.3151%" y="1765" width="0.0558%" height="15" fill="rgb(221,41,32)"/><text x="95.5651%" y="1775.50"></text></g><g><title>cargo::util::toml::DetailedTomlDependency::to_dependency (3 samples, 0.17%)</title><rect x="95.2593%" y="1861" width="0.1673%" height="15" fill="rgb(213,158,31)"/><text x="95.5093%" y="1871.50"></text></g><g><title>cargo::util::paths::normalize_path (1 samples, 0.06%)</title><rect x="95.3709%" y="1845" width="0.0558%" height="15" fill="rgb(245,126,43)"/><text x="95.6209%" y="1855.50"></text></g><g><title>std::path::PathBuf::pop (1 samples, 0.06%)</title><rect x="95.3709%" y="1829" width="0.0558%" height="15" fill="rgb(227,7,22)"/><text x="95.6209%" y="1839.50"></text></g><g><title>std::path::Path::parent (1 samples, 0.06%)</title><rect x="95.3709%" y="1813" width="0.0558%" height="15" fill="rgb(252,90,44)"/><text x="95.6209%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.06%)</title><rect x="95.3709%" y="1797" width="0.0558%" height="15" fill="rgb(253,91,0)"/><text x="95.6209%" y="1807.50"></text></g><g><title>std::path::Path::parent::{{closure}} (1 samples, 0.06%)</title><rect x="95.3709%" y="1781" width="0.0558%" height="15" fill="rgb(252,175,49)"/><text x="95.6209%" y="1791.50"></text></g><g><title>std::path::Components::as_path (1 samples, 0.06%)</title><rect x="95.3709%" y="1765" width="0.0558%" height="15" fill="rgb(246,150,1)"/><text x="95.6209%" y="1775.50"></text></g><g><title>std::path::Components::trim_right (1 samples, 0.06%)</title><rect x="95.3709%" y="1749" width="0.0558%" height="15" fill="rgb(241,192,25)"/><text x="95.6209%" y="1759.50"></text></g><g><title>std::path::Components::parse_next_component_back (1 samples, 0.06%)</title><rect x="95.3709%" y="1733" width="0.0558%" height="15" fill="rgb(239,187,11)"/><text x="95.6209%" y="1743.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.06%)</title><rect x="95.3709%" y="1717" width="0.0558%" height="15" fill="rgb(218,202,51)"/><text x="95.6209%" y="1727.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="95.3709%" y="1701" width="0.0558%" height="15" fill="rgb(225,176,8)"/><text x="95.6209%" y="1711.50"></text></g><g><title>cargo::util::toml::TomlManifest::to_real_manifest::process_dependencies (4 samples, 0.22%)</title><rect x="95.2593%" y="1877" width="0.2231%" height="15" fill="rgb(219,122,41)"/><text x="95.5093%" y="1887.50"></text></g><g><title>cargo::util::toml::TomlDependency::to_dependency (1 samples, 0.06%)</title><rect x="95.4267%" y="1861" width="0.0558%" height="15" fill="rgb(248,140,20)"/><text x="95.6767%" y="1871.50"></text></g><g><title>cargo::util::toml::DetailedTomlDependency::to_dependency (1 samples, 0.06%)</title><rect x="95.4267%" y="1845" width="0.0558%" height="15" fill="rgb(245,41,37)"/><text x="95.6767%" y="1855.50"></text></g><g><title>cargo::core::dependency::Dependency::parse (1 samples, 0.06%)</title><rect x="95.4267%" y="1829" width="0.0558%" height="15" fill="rgb(235,82,39)"/><text x="95.6767%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.4267%" y="1813" width="0.0558%" height="15" fill="rgb(230,108,42)"/><text x="95.6767%" y="1823.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="95.4267%" y="1797" width="0.0558%" height="15" fill="rgb(215,150,50)"/><text x="95.6767%" y="1807.50"></text></g><g><title>cargo::util::toml::TomlManifest::to_real_manifest (6 samples, 0.33%)</title><rect x="95.2593%" y="1893" width="0.3346%" height="15" fill="rgb(233,212,5)"/><text x="95.5093%" y="1903.50"></text></g><g><title>cargo::util::toml::targets::targets (2 samples, 0.11%)</title><rect x="95.4824%" y="1877" width="0.1115%" height="15" fill="rgb(245,80,22)"/><text x="95.7324%" y="1887.50"></text></g><g><title>cargo::util::toml::targets::infer_from_directory (2 samples, 0.11%)</title><rect x="95.4824%" y="1861" width="0.1115%" height="15" fill="rgb(238,129,16)"/><text x="95.7324%" y="1871.50"></text></g><g><title>std::sys::unix::fs::readdir (2 samples, 0.11%)</title><rect x="95.4824%" y="1845" width="0.1115%" height="15" fill="rgb(240,19,0)"/><text x="95.7324%" y="1855.50"></text></g><g><title>__opendir (2 samples, 0.11%)</title><rect x="95.4824%" y="1829" width="0.1115%" height="15" fill="rgb(232,42,35)"/><text x="95.7324%" y="1839.50"></text></g><g><title>__GI___open64_nocancel (2 samples, 0.11%)</title><rect x="95.4824%" y="1813" width="0.1115%" height="15" fill="rgb(223,130,24)"/><text x="95.7324%" y="1823.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1797" width="0.1115%" height="15" fill="rgb(237,16,22)"/><text x="95.7324%" y="1807.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1781" width="0.1115%" height="15" fill="rgb(248,192,20)"/><text x="95.7324%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1765" width="0.1115%" height="15" fill="rgb(233,167,2)"/><text x="95.7324%" y="1775.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1749" width="0.1115%" height="15" fill="rgb(252,71,44)"/><text x="95.7324%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1733" width="0.1115%" height="15" fill="rgb(238,37,47)"/><text x="95.7324%" y="1743.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1717" width="0.1115%" height="15" fill="rgb(214,202,54)"/><text x="95.7324%" y="1727.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="95.4824%" y="1701" width="0.1115%" height="15" fill="rgb(254,165,40)"/><text x="95.7324%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.5382%" y="1685" width="0.0558%" height="15" fill="rgb(246,173,38)"/><text x="95.7882%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.5382%" y="1669" width="0.0558%" height="15" fill="rgb(215,3,27)"/><text x="95.7882%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.5382%" y="1653" width="0.0558%" height="15" fill="rgb(239,169,51)"/><text x="95.7882%" y="1663.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="95.5940%" y="1781" width="0.0558%" height="15" fill="rgb(212,5,25)"/><text x="95.8440%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.06%)</title><rect x="95.5940%" y="1765" width="0.0558%" height="15" fill="rgb(243,45,17)"/><text x="95.8440%" y="1775.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.5940%" y="1749" width="0.0558%" height="15" fill="rgb(242,97,9)"/><text x="95.8440%" y="1759.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="95.5940%" y="1733" width="0.0558%" height="15" fill="rgb(228,71,31)"/><text x="95.8440%" y="1743.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.11%)</title><rect x="95.5940%" y="1797" width="0.1115%" height="15" fill="rgb(252,184,16)"/><text x="95.8440%" y="1807.50"></text></g><g><title>&lt;toml::de::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="95.6497%" y="1781" width="0.0558%" height="15" fill="rgb(236,169,46)"/><text x="95.8997%" y="1791.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="95.6497%" y="1765" width="0.0558%" height="15" fill="rgb(207,17,47)"/><text x="95.8997%" y="1775.50"></text></g><g><title>&lt;toml::de::InlineTableDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.06%)</title><rect x="95.6497%" y="1749" width="0.0558%" height="15" fill="rgb(206,201,28)"/><text x="95.8997%" y="1759.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.17%)</title><rect x="95.5940%" y="1845" width="0.1673%" height="15" fill="rgb(224,184,23)"/><text x="95.8440%" y="1855.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.17%)</title><rect x="95.5940%" y="1829" width="0.1673%" height="15" fill="rgb(208,139,48)"/><text x="95.8440%" y="1839.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.17%)</title><rect x="95.5940%" y="1813" width="0.1673%" height="15" fill="rgb(208,130,10)"/><text x="95.8440%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.06%)</title><rect x="95.7055%" y="1797" width="0.0558%" height="15" fill="rgb(211,213,45)"/><text x="95.9555%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.06%)</title><rect x="95.7055%" y="1781" width="0.0558%" height="15" fill="rgb(235,100,30)"/><text x="95.9555%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.06%)</title><rect x="95.7055%" y="1765" width="0.0558%" height="15" fill="rgb(206,144,31)"/><text x="95.9555%" y="1775.50"></text></g><g><title>toml::de::Deserializer::add_dotted_key (1 samples, 0.06%)</title><rect x="95.7613%" y="1797" width="0.0558%" height="15" fill="rgb(224,200,26)"/><text x="96.0113%" y="1807.50"></text></g><g><title>__rust_dealloc (1 samples, 0.06%)</title><rect x="95.7613%" y="1781" width="0.0558%" height="15" fill="rgb(247,104,53)"/><text x="96.0113%" y="1791.50"></text></g><g><title>toml::de::Deserializer::inline_table (2 samples, 0.11%)</title><rect x="95.7613%" y="1813" width="0.1115%" height="15" fill="rgb(220,14,17)"/><text x="96.0113%" y="1823.50"></text></g><g><title>toml::de::Deserializer::dotted_key (1 samples, 0.06%)</title><rect x="95.8171%" y="1797" width="0.0558%" height="15" fill="rgb(230,140,40)"/><text x="96.0671%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="95.8171%" y="1781" width="0.0558%" height="15" fill="rgb(229,2,41)"/><text x="96.0671%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="95.8171%" y="1765" width="0.0558%" height="15" fill="rgb(232,89,16)"/><text x="96.0671%" y="1775.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.8171%" y="1749" width="0.0558%" height="15" fill="rgb(247,59,52)"/><text x="96.0671%" y="1759.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="95.8171%" y="1733" width="0.0558%" height="15" fill="rgb(226,110,21)"/><text x="96.0671%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.8171%" y="1717" width="0.0558%" height="15" fill="rgb(224,176,43)"/><text x="96.0671%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.8171%" y="1701" width="0.0558%" height="15" fill="rgb(221,73,6)"/><text x="96.0671%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.8171%" y="1685" width="0.0558%" height="15" fill="rgb(232,78,19)"/><text x="96.0671%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.8171%" y="1669" width="0.0558%" height="15" fill="rgb(233,112,48)"/><text x="96.0671%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="95.8171%" y="1653" width="0.0558%" height="15" fill="rgb(243,131,47)"/><text x="96.0671%" y="1663.50"></text></g><g><title>cargo::util::toml::read_manifest (14 samples, 0.78%)</title><rect x="95.1478%" y="1909" width="0.7808%" height="15" fill="rgb(226,51,1)"/><text x="95.3978%" y="1919.50"></text></g><g><title>cargo::util::toml::parse (6 samples, 0.33%)</title><rect x="95.5940%" y="1893" width="0.3346%" height="15" fill="rgb(247,58,7)"/><text x="95.8440%" y="1903.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (6 samples, 0.33%)</title><rect x="95.5940%" y="1877" width="0.3346%" height="15" fill="rgb(209,7,32)"/><text x="95.8440%" y="1887.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.33%)</title><rect x="95.5940%" y="1861" width="0.3346%" height="15" fill="rgb(209,39,41)"/><text x="95.8440%" y="1871.50"></text></g><g><title>toml::de::Deserializer::tables (3 samples, 0.17%)</title><rect x="95.7613%" y="1845" width="0.1673%" height="15" fill="rgb(226,182,46)"/><text x="96.0113%" y="1855.50"></text></g><g><title>toml::de::Deserializer::value (3 samples, 0.17%)</title><rect x="95.7613%" y="1829" width="0.1673%" height="15" fill="rgb(230,219,10)"/><text x="96.0113%" y="1839.50"></text></g><g><title>toml::de::Deserializer::value (1 samples, 0.06%)</title><rect x="95.8728%" y="1813" width="0.0558%" height="15" fill="rgb(227,175,30)"/><text x="96.1228%" y="1823.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.06%)</title><rect x="95.8728%" y="1797" width="0.0558%" height="15" fill="rgb(217,2,50)"/><text x="96.1228%" y="1807.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="95.8728%" y="1781" width="0.0558%" height="15" fill="rgb(229,160,0)"/><text x="96.1228%" y="1791.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="95.9286%" y="1909" width="0.0558%" height="15" fill="rgb(207,78,37)"/><text x="96.1786%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="95.9286%" y="1893" width="0.0558%" height="15" fill="rgb(225,57,0)"/><text x="96.1786%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="95.9286%" y="1877" width="0.0558%" height="15" fill="rgb(232,154,2)"/><text x="96.1786%" y="1887.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (1 samples, 0.06%)</title><rect x="95.9286%" y="1861" width="0.0558%" height="15" fill="rgb(241,212,25)"/><text x="96.1786%" y="1871.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (1 samples, 0.06%)</title><rect x="95.9286%" y="1845" width="0.0558%" height="15" fill="rgb(226,69,20)"/><text x="96.1786%" y="1855.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (1 samples, 0.06%)</title><rect x="95.9286%" y="1829" width="0.0558%" height="15" fill="rgb(247,184,54)"/><text x="96.1786%" y="1839.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (1 samples, 0.06%)</title><rect x="95.9286%" y="1813" width="0.0558%" height="15" fill="rgb(210,145,0)"/><text x="96.1786%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="95.9286%" y="1797" width="0.0558%" height="15" fill="rgb(253,82,12)"/><text x="96.1786%" y="1807.50"></text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (1 samples, 0.06%)</title><rect x="95.9286%" y="1781" width="0.0558%" height="15" fill="rgb(245,42,11)"/><text x="96.1786%" y="1791.50"></text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (1 samples, 0.06%)</title><rect x="95.9286%" y="1765" width="0.0558%" height="15" fill="rgb(219,147,32)"/><text x="96.1786%" y="1775.50"></text></g><g><title>serde_json::de::from_slice (1 samples, 0.06%)</title><rect x="95.9286%" y="1749" width="0.0558%" height="15" fill="rgb(246,12,7)"/><text x="96.1786%" y="1759.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.06%)</title><rect x="95.9286%" y="1733" width="0.0558%" height="15" fill="rgb(243,50,9)"/><text x="96.1786%" y="1743.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.06%)</title><rect x="95.9286%" y="1717" width="0.0558%" height="15" fill="rgb(219,149,6)"/><text x="96.1786%" y="1727.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.06%)</title><rect x="95.9286%" y="1701" width="0.0558%" height="15" fill="rgb(241,51,42)"/><text x="96.1786%" y="1711.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.06%)</title><rect x="95.9286%" y="1685" width="0.0558%" height="15" fill="rgb(226,128,27)"/><text x="96.1786%" y="1695.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.06%)</title><rect x="95.9286%" y="1669" width="0.0558%" height="15" fill="rgb(244,144,4)"/><text x="96.1786%" y="1679.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.06%)</title><rect x="95.9286%" y="1653" width="0.0558%" height="15" fill="rgb(221,4,13)"/><text x="96.1786%" y="1663.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.06%)</title><rect x="95.9286%" y="1637" width="0.0558%" height="15" fill="rgb(208,170,28)"/><text x="96.1786%" y="1647.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.06%)</title><rect x="95.9286%" y="1621" width="0.0558%" height="15" fill="rgb(226,131,13)"/><text x="96.1786%" y="1631.50"></text></g><g><title>&lt;im_rc::hash::set::HashSet&lt;A,S&gt; as core::default::Default&gt;::default (1 samples, 0.06%)</title><rect x="95.9844%" y="1893" width="0.0558%" height="15" fill="rgb(215,72,41)"/><text x="96.2344%" y="1903.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.9844%" y="1877" width="0.0558%" height="15" fill="rgb(243,108,20)"/><text x="96.2344%" y="1887.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="95.9844%" y="1861" width="0.0558%" height="15" fill="rgb(230,189,17)"/><text x="96.2344%" y="1871.50"></text></g><g><title>im_rc::ord::map::Entry&lt;K,V&gt;::or_insert_with (2 samples, 0.11%)</title><rect x="95.9844%" y="1909" width="0.1115%" height="15" fill="rgb(220,50,17)"/><text x="96.2344%" y="1919.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="96.0402%" y="1893" width="0.0558%" height="15" fill="rgb(248,152,48)"/><text x="96.2902%" y="1903.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="96.0402%" y="1877" width="0.0558%" height="15" fill="rgb(244,91,11)"/><text x="96.2902%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1861" width="0.0558%" height="15" fill="rgb(220,157,5)"/><text x="96.2902%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1845" width="0.0558%" height="15" fill="rgb(253,137,8)"/><text x="96.2902%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1829" width="0.0558%" height="15" fill="rgb(217,137,51)"/><text x="96.2902%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1813" width="0.0558%" height="15" fill="rgb(218,209,53)"/><text x="96.2902%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1797" width="0.0558%" height="15" fill="rgb(249,137,25)"/><text x="96.2902%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1781" width="0.0558%" height="15" fill="rgb(239,155,26)"/><text x="96.2902%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1765" width="0.0558%" height="15" fill="rgb(227,85,46)"/><text x="96.2902%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1749" width="0.0558%" height="15" fill="rgb(251,107,43)"/><text x="96.2902%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.0402%" y="1733" width="0.0558%" height="15" fill="rgb(234,170,33)"/><text x="96.2902%" y="1743.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::get_mut (3 samples, 0.17%)</title><rect x="96.0959%" y="1909" width="0.1673%" height="15" fill="rgb(206,29,35)"/><text x="96.3459%" y="1919.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::lookup_mut (3 samples, 0.17%)</title><rect x="96.0959%" y="1893" width="0.1673%" height="15" fill="rgb(227,138,25)"/><text x="96.3459%" y="1903.50"></text></g><g><title>[unknown] (343 samples, 19.13%)</title><rect x="77.1891%" y="1925" width="19.1299%" height="15" fill="rgb(249,131,35)"/><text x="77.4391%" y="1935.50">[unknown]</text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.06%)</title><rect x="96.2632%" y="1909" width="0.0558%" height="15" fill="rgb(239,6,40)"/><text x="96.5132%" y="1919.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.06%)</title><rect x="96.2632%" y="1893" width="0.0558%" height="15" fill="rgb(246,136,47)"/><text x="96.5132%" y="1903.50"></text></g><g><title>statx (1 samples, 0.06%)</title><rect x="96.2632%" y="1877" width="0.0558%" height="15" fill="rgb(253,58,26)"/><text x="96.5132%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.2632%" y="1861" width="0.0558%" height="15" fill="rgb(237,141,10)"/><text x="96.5132%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.3748%" y="1893" width="0.0558%" height="15" fill="rgb(234,156,12)"/><text x="96.6248%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.3748%" y="1877" width="0.0558%" height="15" fill="rgb(243,224,36)"/><text x="96.6248%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.3748%" y="1861" width="0.0558%" height="15" fill="rgb(205,229,51)"/><text x="96.6248%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.3748%" y="1845" width="0.0558%" height="15" fill="rgb(223,189,4)"/><text x="96.6248%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.3748%" y="1829" width="0.0558%" height="15" fill="rgb(249,167,54)"/><text x="96.6248%" y="1839.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.06%)</title><rect x="96.4306%" y="1893" width="0.0558%" height="15" fill="rgb(218,34,28)"/><text x="96.6806%" y="1903.50"></text></g><g><title>__GI__setjmp (1 samples, 0.06%)</title><rect x="96.4863%" y="1893" width="0.0558%" height="15" fill="rgb(232,109,42)"/><text x="96.7363%" y="1903.50"></text></g><g><title>__libc_thread_freeres (1 samples, 0.06%)</title><rect x="96.5421%" y="1893" width="0.0558%" height="15" fill="rgb(248,214,46)"/><text x="96.7921%" y="1903.50"></text></g><g><title>__res_thread_freeres (1 samples, 0.06%)</title><rect x="96.5421%" y="1877" width="0.0558%" height="15" fill="rgb(244,216,40)"/><text x="96.7921%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.5421%" y="1861" width="0.0558%" height="15" fill="rgb(231,226,31)"/><text x="96.7921%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.5421%" y="1845" width="0.0558%" height="15" fill="rgb(238,38,43)"/><text x="96.7921%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.5421%" y="1829" width="0.0558%" height="15" fill="rgb(208,88,43)"/><text x="96.7921%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.5421%" y="1813" width="0.0558%" height="15" fill="rgb(205,136,37)"/><text x="96.7921%" y="1823.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.06%)</title><rect x="96.5979%" y="1845" width="0.0558%" height="15" fill="rgb(237,34,14)"/><text x="96.8479%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="96.5979%" y="1829" width="0.0558%" height="15" fill="rgb(236,193,44)"/><text x="96.8479%" y="1839.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.06%)</title><rect x="96.6537%" y="1829" width="0.0558%" height="15" fill="rgb(231,48,10)"/><text x="96.9037%" y="1839.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.06%)</title><rect x="96.6537%" y="1813" width="0.0558%" height="15" fill="rgb(213,141,34)"/><text x="96.9037%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="96.6537%" y="1797" width="0.0558%" height="15" fill="rgb(249,130,34)"/><text x="96.9037%" y="1807.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.06%)</title><rect x="96.6537%" y="1781" width="0.0558%" height="15" fill="rgb(219,42,41)"/><text x="96.9037%" y="1791.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.06%)</title><rect x="96.6537%" y="1765" width="0.0558%" height="15" fill="rgb(224,100,54)"/><text x="96.9037%" y="1775.50"></text></g><g><title>new_heap (1 samples, 0.06%)</title><rect x="96.6537%" y="1749" width="0.0558%" height="15" fill="rgb(229,200,27)"/><text x="96.9037%" y="1759.50"></text></g><g><title>__GI_munmap (1 samples, 0.06%)</title><rect x="96.6537%" y="1733" width="0.0558%" height="15" fill="rgb(217,118,10)"/><text x="96.9037%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1717" width="0.0558%" height="15" fill="rgb(206,22,3)"/><text x="96.9037%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1701" width="0.0558%" height="15" fill="rgb(232,163,46)"/><text x="96.9037%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1685" width="0.0558%" height="15" fill="rgb(206,95,13)"/><text x="96.9037%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1669" width="0.0558%" height="15" fill="rgb(253,154,18)"/><text x="96.9037%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1653" width="0.0558%" height="15" fill="rgb(219,32,23)"/><text x="96.9037%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.6537%" y="1637" width="0.0558%" height="15" fill="rgb(230,191,45)"/><text x="96.9037%" y="1647.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="96.7094%" y="1781" width="0.0558%" height="15" fill="rgb(229,64,36)"/><text x="96.9594%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::compiler::job_queue::Message&gt; (1 samples, 0.06%)</title><rect x="96.7094%" y="1765" width="0.0558%" height="15" fill="rgb(205,129,25)"/><text x="96.9594%" y="1775.50"></text></g><g><title>&lt;jobserver::Acquired as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="96.7094%" y="1749" width="0.0558%" height="15" fill="rgb(254,112,7)"/><text x="96.9594%" y="1759.50"></text></g><g><title>jobserver::imp::Client::release (1 samples, 0.06%)</title><rect x="96.7094%" y="1733" width="0.0558%" height="15" fill="rgb(226,53,48)"/><text x="96.9594%" y="1743.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.06%)</title><rect x="96.7094%" y="1717" width="0.0558%" height="15" fill="rgb(214,153,38)"/><text x="96.9594%" y="1727.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.06%)</title><rect x="96.7094%" y="1701" width="0.0558%" height="15" fill="rgb(243,101,7)"/><text x="96.9594%" y="1711.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.06%)</title><rect x="96.7094%" y="1685" width="0.0558%" height="15" fill="rgb(240,140,22)"/><text x="96.9594%" y="1695.50"></text></g><g><title>__libc_write (1 samples, 0.06%)</title><rect x="96.7094%" y="1669" width="0.0558%" height="15" fill="rgb(235,114,2)"/><text x="96.9594%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1653" width="0.0558%" height="15" fill="rgb(242,59,12)"/><text x="96.9594%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1637" width="0.0558%" height="15" fill="rgb(252,134,9)"/><text x="96.9594%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1621" width="0.0558%" height="15" fill="rgb(236,4,44)"/><text x="96.9594%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1605" width="0.0558%" height="15" fill="rgb(254,172,41)"/><text x="96.9594%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1589" width="0.0558%" height="15" fill="rgb(244,63,20)"/><text x="96.9594%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.7094%" y="1573" width="0.0558%" height="15" fill="rgb(250,73,31)"/><text x="96.9594%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;jobserver::imp::spawn_helper::{{closure}}&gt; (2 samples, 0.11%)</title><rect x="96.7094%" y="1813" width="0.1115%" height="15" fill="rgb(241,38,36)"/><text x="96.9594%" y="1823.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.11%)</title><rect x="96.7094%" y="1797" width="0.1115%" height="15" fill="rgb(245,211,2)"/><text x="96.9594%" y="1807.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="96.7652%" y="1781" width="0.0558%" height="15" fill="rgb(206,120,28)"/><text x="97.0152%" y="1791.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="96.7652%" y="1765" width="0.0558%" height="15" fill="rgb(211,59,34)"/><text x="97.0152%" y="1775.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="96.8210%" y="1797" width="0.0558%" height="15" fill="rgb(233,168,5)"/><text x="97.0710%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.8210%" y="1781" width="0.0558%" height="15" fill="rgb(234,33,13)"/><text x="97.0710%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.8210%" y="1765" width="0.0558%" height="15" fill="rgb(231,150,26)"/><text x="97.0710%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.8210%" y="1749" width="0.0558%" height="15" fill="rgb(217,191,4)"/><text x="97.0710%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.8210%" y="1733" width="0.0558%" height="15" fill="rgb(246,198,38)"/><text x="97.0710%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.8210%" y="1717" width="0.0558%" height="15" fill="rgb(245,64,37)"/><text x="97.0710%" y="1727.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::execute::{{closure}} (1 samples, 0.06%)</title><rect x="96.8767%" y="1797" width="0.0558%" height="15" fill="rgb(250,30,36)"/><text x="97.1267%" y="1807.50"></text></g><g><title>cargo::util::queue::Queue&lt;T&gt;::push (1 samples, 0.06%)</title><rect x="96.8767%" y="1781" width="0.0558%" height="15" fill="rgb(217,86,53)"/><text x="97.1267%" y="1791.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.06%)</title><rect x="96.8767%" y="1765" width="0.0558%" height="15" fill="rgb(228,157,16)"/><text x="97.1267%" y="1775.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.39%)</title><rect x="96.5979%" y="1877" width="0.3904%" height="15" fill="rgb(217,59,31)"/><text x="96.8479%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.39%)</title><rect x="96.5979%" y="1861" width="0.3904%" height="15" fill="rgb(237,138,41)"/><text x="96.8479%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (6 samples, 0.33%)</title><rect x="96.6537%" y="1845" width="0.3346%" height="15" fill="rgb(227,91,49)"/><text x="96.9037%" y="1855.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.28%)</title><rect x="96.7094%" y="1829" width="0.2789%" height="15" fill="rgb(247,21,44)"/><text x="96.9594%" y="1839.50"></text></g><g><title>jobserver::HelperState::for_each_request (3 samples, 0.17%)</title><rect x="96.8210%" y="1813" width="0.1673%" height="15" fill="rgb(219,210,51)"/><text x="97.0710%" y="1823.50"></text></g><g><title>jobserver::imp::Client::acquire_allow_interrupts (1 samples, 0.06%)</title><rect x="96.9325%" y="1797" width="0.0558%" height="15" fill="rgb(209,140,6)"/><text x="97.1825%" y="1807.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1 samples, 0.06%)</title><rect x="96.9325%" y="1781" width="0.0558%" height="15" fill="rgb(221,188,24)"/><text x="97.1825%" y="1791.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.06%)</title><rect x="96.9325%" y="1765" width="0.0558%" height="15" fill="rgb(232,154,20)"/><text x="97.1825%" y="1775.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.06%)</title><rect x="96.9325%" y="1749" width="0.0558%" height="15" fill="rgb(244,137,50)"/><text x="97.1825%" y="1759.50"></text></g><g><title>__libc_read (1 samples, 0.06%)</title><rect x="96.9325%" y="1733" width="0.0558%" height="15" fill="rgb(225,185,43)"/><text x="97.1825%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9325%" y="1717" width="0.0558%" height="15" fill="rgb(213,205,38)"/><text x="97.1825%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9325%" y="1701" width="0.0558%" height="15" fill="rgb(236,73,12)"/><text x="97.1825%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9325%" y="1685" width="0.0558%" height="15" fill="rgb(235,219,13)"/><text x="97.1825%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9325%" y="1669" width="0.0558%" height="15" fill="rgb(218,59,36)"/><text x="97.1825%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9325%" y="1653" width="0.0558%" height="15" fill="rgb(205,110,39)"/><text x="97.1825%" y="1663.50"></text></g><g><title>__sigaltstack (1 samples, 0.06%)</title><rect x="96.9883%" y="1845" width="0.0558%" height="15" fill="rgb(218,206,42)"/><text x="97.2383%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9883%" y="1829" width="0.0558%" height="15" fill="rgb(248,125,24)"/><text x="97.2383%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9883%" y="1813" width="0.0558%" height="15" fill="rgb(242,28,27)"/><text x="97.2383%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="96.9883%" y="1797" width="0.0558%" height="15" fill="rgb(216,228,15)"/><text x="97.2383%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.06%)</title><rect x="97.0441%" y="1845" width="0.0558%" height="15" fill="rgb(235,116,46)"/><text x="97.2941%" y="1855.50"></text></g><g><title>__GI___clone (15 samples, 0.84%)</title><rect x="96.3190%" y="1925" width="0.8366%" height="15" fill="rgb(224,18,32)"/><text x="96.5690%" y="1935.50"></text></g><g><title>start_thread (14 samples, 0.78%)</title><rect x="96.3748%" y="1909" width="0.7808%" height="15" fill="rgb(252,5,12)"/><text x="96.6248%" y="1919.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.56%)</title><rect x="96.5979%" y="1893" width="0.5577%" height="15" fill="rgb(251,36,5)"/><text x="96.8479%" y="1903.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (3 samples, 0.17%)</title><rect x="96.9883%" y="1877" width="0.1673%" height="15" fill="rgb(217,53,14)"/><text x="97.2383%" y="1887.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (3 samples, 0.17%)</title><rect x="96.9883%" y="1861" width="0.1673%" height="15" fill="rgb(215,86,45)"/><text x="97.2383%" y="1871.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.06%)</title><rect x="97.0998%" y="1845" width="0.0558%" height="15" fill="rgb(242,169,11)"/><text x="97.3498%" y="1855.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.06%)</title><rect x="97.0998%" y="1829" width="0.0558%" height="15" fill="rgb(211,213,45)"/><text x="97.3498%" y="1839.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.06%)</title><rect x="97.0998%" y="1813" width="0.0558%" height="15" fill="rgb(205,88,11)"/><text x="97.3498%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.0998%" y="1797" width="0.0558%" height="15" fill="rgb(252,69,26)"/><text x="97.3498%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.0998%" y="1781" width="0.0558%" height="15" fill="rgb(246,123,37)"/><text x="97.3498%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.0998%" y="1765" width="0.0558%" height="15" fill="rgb(212,205,5)"/><text x="97.3498%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.0998%" y="1749" width="0.0558%" height="15" fill="rgb(253,148,0)"/><text x="97.3498%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.0998%" y="1733" width="0.0558%" height="15" fill="rgb(239,22,4)"/><text x="97.3498%" y="1743.50"></text></g><g><title>__restore_rt (1 samples, 0.06%)</title><rect x="97.1556%" y="1925" width="0.0558%" height="15" fill="rgb(226,26,53)"/><text x="97.4056%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.1556%" y="1909" width="0.0558%" height="15" fill="rgb(225,229,45)"/><text x="97.4056%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.1556%" y="1893" width="0.0558%" height="15" fill="rgb(220,60,37)"/><text x="97.4056%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.1556%" y="1877" width="0.0558%" height="15" fill="rgb(217,180,35)"/><text x="97.4056%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.1556%" y="1861" width="0.0558%" height="15" fill="rgb(229,7,53)"/><text x="97.4056%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.2114%" y="1909" width="0.0558%" height="15" fill="rgb(254,137,3)"/><text x="97.4614%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.2114%" y="1893" width="0.0558%" height="15" fill="rgb(215,140,41)"/><text x="97.4614%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.2114%" y="1877" width="0.0558%" height="15" fill="rgb(250,80,15)"/><text x="97.4614%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.2114%" y="1861" width="0.0558%" height="15" fill="rgb(252,191,6)"/><text x="97.4614%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="97.2114%" y="1845" width="0.0558%" height="15" fill="rgb(246,217,18)"/><text x="97.4614%" y="1855.50"></text></g><g><title>__GI_exit (1 samples, 0.06%)</title><rect x="97.2672%" y="1893" width="0.0558%" height="15" fill="rgb(223,93,7)"/><text x="97.5172%" y="1903.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.06%)</title><rect x="97.2672%" y="1877" width="0.0558%" height="15" fill="rgb(225,55,52)"/><text x="97.5172%" y="1887.50"></text></g><g><title>OPENSSL_cleanup (1 samples, 0.06%)</title><rect x="97.2672%" y="1861" width="0.0558%" height="15" fill="rgb(240,31,24)"/><text x="97.5172%" y="1871.50"></text></g><g><title>err_cleanup (1 samples, 0.06%)</title><rect x="97.2672%" y="1845" width="0.0558%" height="15" fill="rgb(205,56,52)"/><text x="97.5172%" y="1855.50"></text></g><g><title>OPENSSL_LH_free (1 samples, 0.06%)</title><rect x="97.2672%" y="1829" width="0.0558%" height="15" fill="rgb(246,146,12)"/><text x="97.5172%" y="1839.50"></text></g><g><title>ERR_load_CMS_strings (1 samples, 0.06%)</title><rect x="97.3229%" y="1525" width="0.0558%" height="15" fill="rgb(239,84,36)"/><text x="97.5729%" y="1535.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.06%)</title><rect x="97.3229%" y="1509" width="0.0558%" height="15" fill="rgb(207,41,40)"/><text x="97.5729%" y="1519.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.06%)</title><rect x="97.3229%" y="1493" width="0.0558%" height="15" fill="rgb(241,179,25)"/><text x="97.5729%" y="1503.50"></text></g><g><title>__libc_csu_init (2 samples, 0.11%)</title><rect x="97.3229%" y="1893" width="0.1115%" height="15" fill="rgb(210,0,34)"/><text x="97.5729%" y="1903.50"></text></g><g><title>curl::init::init_inner (2 samples, 0.11%)</title><rect x="97.3229%" y="1877" width="0.1115%" height="15" fill="rgb(225,217,29)"/><text x="97.5729%" y="1887.50"></text></g><g><title>std::sync::once::Once::call_inner (2 samples, 0.11%)</title><rect x="97.3229%" y="1861" width="0.1115%" height="15" fill="rgb(216,191,38)"/><text x="97.5729%" y="1871.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (2 samples, 0.11%)</title><rect x="97.3229%" y="1845" width="0.1115%" height="15" fill="rgb(232,140,52)"/><text x="97.5729%" y="1855.50"></text></g><g><title>curl_global_init (2 samples, 0.11%)</title><rect x="97.3229%" y="1829" width="0.1115%" height="15" fill="rgb(223,158,51)"/><text x="97.5729%" y="1839.50"></text></g><g><title>Curl_ossl_init (2 samples, 0.11%)</title><rect x="97.3229%" y="1813" width="0.1115%" height="15" fill="rgb(235,29,51)"/><text x="97.5729%" y="1823.50"></text></g><g><title>OPENSSL_init_ssl (2 samples, 0.11%)</title><rect x="97.3229%" y="1797" width="0.1115%" height="15" fill="rgb(215,181,18)"/><text x="97.5729%" y="1807.50"></text></g><g><title>OPENSSL_init_crypto (2 samples, 0.11%)</title><rect x="97.3229%" y="1781" width="0.1115%" height="15" fill="rgb(227,125,34)"/><text x="97.5729%" y="1791.50"></text></g><g><title>CRYPTO_THREAD_run_once (2 samples, 0.11%)</title><rect x="97.3229%" y="1765" width="0.1115%" height="15" fill="rgb(230,197,49)"/><text x="97.5729%" y="1775.50"></text></g><g><title>__pthread_once_slow (2 samples, 0.11%)</title><rect x="97.3229%" y="1749" width="0.1115%" height="15" fill="rgb(239,141,16)"/><text x="97.5729%" y="1759.50"></text></g><g><title>ossl_init_config_ossl_ (2 samples, 0.11%)</title><rect x="97.3229%" y="1733" width="0.1115%" height="15" fill="rgb(225,105,43)"/><text x="97.5729%" y="1743.50"></text></g><g><title>openssl_config_int (2 samples, 0.11%)</title><rect x="97.3229%" y="1717" width="0.1115%" height="15" fill="rgb(214,131,14)"/><text x="97.5729%" y="1727.50"></text></g><g><title>OPENSSL_init_crypto (2 samples, 0.11%)</title><rect x="97.3229%" y="1701" width="0.1115%" height="15" fill="rgb(229,177,11)"/><text x="97.5729%" y="1711.50"></text></g><g><title>CRYPTO_THREAD_run_once (2 samples, 0.11%)</title><rect x="97.3229%" y="1685" width="0.1115%" height="15" fill="rgb(231,180,14)"/><text x="97.5729%" y="1695.50"></text></g><g><title>__pthread_once_slow (2 samples, 0.11%)</title><rect x="97.3229%" y="1669" width="0.1115%" height="15" fill="rgb(232,88,2)"/><text x="97.5729%" y="1679.50"></text></g><g><title>ossl_init_engine_rdrand_ossl_ (2 samples, 0.11%)</title><rect x="97.3229%" y="1653" width="0.1115%" height="15" fill="rgb(205,220,8)"/><text x="97.5729%" y="1663.50"></text></g><g><title>ERR_clear_error (2 samples, 0.11%)</title><rect x="97.3229%" y="1637" width="0.1115%" height="15" fill="rgb(225,23,53)"/><text x="97.5729%" y="1647.50"></text></g><g><title>ERR_get_state (2 samples, 0.11%)</title><rect x="97.3229%" y="1621" width="0.1115%" height="15" fill="rgb(213,62,29)"/><text x="97.5729%" y="1631.50"></text></g><g><title>OPENSSL_init_crypto (2 samples, 0.11%)</title><rect x="97.3229%" y="1605" width="0.1115%" height="15" fill="rgb(227,75,7)"/><text x="97.5729%" y="1615.50"></text></g><g><title>CRYPTO_THREAD_run_once (2 samples, 0.11%)</title><rect x="97.3229%" y="1589" width="0.1115%" height="15" fill="rgb(207,105,14)"/><text x="97.5729%" y="1599.50"></text></g><g><title>__pthread_once_slow (2 samples, 0.11%)</title><rect x="97.3229%" y="1573" width="0.1115%" height="15" fill="rgb(245,62,29)"/><text x="97.5729%" y="1583.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (2 samples, 0.11%)</title><rect x="97.3229%" y="1557" width="0.1115%" height="15" fill="rgb(236,202,4)"/><text x="97.5729%" y="1567.50"></text></g><g><title>err_load_crypto_strings_int (2 samples, 0.11%)</title><rect x="97.3229%" y="1541" width="0.1115%" height="15" fill="rgb(250,67,1)"/><text x="97.5729%" y="1551.50"></text></g><g><title>ERR_load_EVP_strings (1 samples, 0.06%)</title><rect x="97.3787%" y="1525" width="0.0558%" height="15" fill="rgb(253,115,44)"/><text x="97.6287%" y="1535.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.06%)</title><rect x="97.3787%" y="1509" width="0.0558%" height="15" fill="rgb(251,139,18)"/><text x="97.6287%" y="1519.50"></text></g><g><title>ERR_load_ERR_strings (1 samples, 0.06%)</title><rect x="97.3787%" y="1493" width="0.0558%" height="15" fill="rgb(218,22,32)"/><text x="97.6287%" y="1503.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.06%)</title><rect x="97.3787%" y="1477" width="0.0558%" height="15" fill="rgb(243,53,5)"/><text x="97.6287%" y="1487.50"></text></g><g><title>SSL_CTX_new (1 samples, 0.06%)</title><rect x="97.4345%" y="1621" width="0.0558%" height="15" fill="rgb(227,56,16)"/><text x="97.6845%" y="1631.50"></text></g><g><title>drbg_bytes (1 samples, 0.06%)</title><rect x="97.4345%" y="1605" width="0.0558%" height="15" fill="rgb(245,53,0)"/><text x="97.6845%" y="1615.50"></text></g><g><title>RAND_DRBG_get0_public (1 samples, 0.06%)</title><rect x="97.4345%" y="1589" width="0.0558%" height="15" fill="rgb(216,170,35)"/><text x="97.6845%" y="1599.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.06%)</title><rect x="97.4345%" y="1573" width="0.0558%" height="15" fill="rgb(211,200,8)"/><text x="97.6845%" y="1583.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.06%)</title><rect x="97.4345%" y="1557" width="0.0558%" height="15" fill="rgb(228,204,44)"/><text x="97.6845%" y="1567.50"></text></g><g><title>do_rand_drbg_init_ossl_ (1 samples, 0.06%)</title><rect x="97.4345%" y="1541" width="0.0558%" height="15" fill="rgb(214,121,17)"/><text x="97.6845%" y="1551.50"></text></g><g><title>RAND_DRBG_instantiate (1 samples, 0.06%)</title><rect x="97.4345%" y="1525" width="0.0558%" height="15" fill="rgb(233,64,38)"/><text x="97.6845%" y="1535.50"></text></g><g><title>drbg_ctr_instantiate (1 samples, 0.06%)</title><rect x="97.4345%" y="1509" width="0.0558%" height="15" fill="rgb(253,54,19)"/><text x="97.6845%" y="1519.50"></text></g><g><title>ctr_update (1 samples, 0.06%)</title><rect x="97.4345%" y="1493" width="0.0558%" height="15" fill="rgb(253,94,18)"/><text x="97.6845%" y="1503.50"></text></g><g><title>asn1_item_embed_new (1 samples, 0.06%)</title><rect x="97.4902%" y="1525" width="0.0558%" height="15" fill="rgb(227,57,52)"/><text x="97.7402%" y="1535.50"></text></g><g><title>asn1_template_new (1 samples, 0.06%)</title><rect x="97.4902%" y="1509" width="0.0558%" height="15" fill="rgb(230,228,50)"/><text x="97.7402%" y="1519.50"></text></g><g><title>asn1_item_embed_new (1 samples, 0.06%)</title><rect x="97.4902%" y="1493" width="0.0558%" height="15" fill="rgb(217,205,27)"/><text x="97.7402%" y="1503.50"></text></g><g><title>asn1_check_tlen (1 samples, 0.06%)</title><rect x="97.5460%" y="1429" width="0.0558%" height="15" fill="rgb(252,71,50)"/><text x="97.7960%" y="1439.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.06%)</title><rect x="97.6018%" y="1429" width="0.0558%" height="15" fill="rgb(209,86,4)"/><text x="97.8518%" y="1439.50"></text></g><g><title>c2i_ASN1_INTEGER (1 samples, 0.06%)</title><rect x="97.6018%" y="1413" width="0.0558%" height="15" fill="rgb(229,94,0)"/><text x="97.8518%" y="1423.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.06%)</title><rect x="97.6018%" y="1397" width="0.0558%" height="15" fill="rgb(252,223,21)"/><text x="97.8518%" y="1407.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="97.6018%" y="1381" width="0.0558%" height="15" fill="rgb(230,210,4)"/><text x="97.8518%" y="1391.50"></text></g><g><title>EVP_PKEY_new (1 samples, 0.06%)</title><rect x="97.6576%" y="1397" width="0.0558%" height="15" fill="rgb(240,149,38)"/><text x="97.9076%" y="1407.50"></text></g><g><title>BN_MONT_CTX_set (1 samples, 0.06%)</title><rect x="97.7133%" y="1317" width="0.0558%" height="15" fill="rgb(254,105,20)"/><text x="97.9633%" y="1327.50"></text></g><g><title>BN_div (1 samples, 0.06%)</title><rect x="97.7133%" y="1301" width="0.0558%" height="15" fill="rgb(253,87,46)"/><text x="97.9633%" y="1311.50"></text></g><g><title>bn_div_fixed_top (1 samples, 0.06%)</title><rect x="97.7133%" y="1285" width="0.0558%" height="15" fill="rgb(253,116,33)"/><text x="97.9633%" y="1295.50"></text></g><g><title>pubkey_cb (3 samples, 0.17%)</title><rect x="97.6576%" y="1429" width="0.1673%" height="15" fill="rgb(229,198,5)"/><text x="97.9076%" y="1439.50"></text></g><g><title>x509_pubkey_decode (3 samples, 0.17%)</title><rect x="97.6576%" y="1413" width="0.1673%" height="15" fill="rgb(242,38,37)"/><text x="97.9076%" y="1423.50"></text></g><g><title>eckey_pub_decode (2 samples, 0.11%)</title><rect x="97.7133%" y="1397" width="0.1115%" height="15" fill="rgb(242,69,53)"/><text x="97.9633%" y="1407.50"></text></g><g><title>eckey_type2param (2 samples, 0.11%)</title><rect x="97.7133%" y="1381" width="0.1115%" height="15" fill="rgb(249,80,16)"/><text x="97.9633%" y="1391.50"></text></g><g><title>EC_GROUP_new_by_curve_name (2 samples, 0.11%)</title><rect x="97.7133%" y="1365" width="0.1115%" height="15" fill="rgb(206,128,11)"/><text x="97.9633%" y="1375.50"></text></g><g><title>EC_GROUP_new_curve_GFp (2 samples, 0.11%)</title><rect x="97.7133%" y="1349" width="0.1115%" height="15" fill="rgb(212,35,20)"/><text x="97.9633%" y="1359.50"></text></g><g><title>ec_GFp_mont_group_set_curve (2 samples, 0.11%)</title><rect x="97.7133%" y="1333" width="0.1115%" height="15" fill="rgb(236,79,13)"/><text x="97.9633%" y="1343.50"></text></g><g><title>ec_GFp_simple_group_set_curve (1 samples, 0.06%)</title><rect x="97.7691%" y="1317" width="0.0558%" height="15" fill="rgb(233,123,3)"/><text x="98.0191%" y="1327.50"></text></g><g><title>BN_nnmod (1 samples, 0.06%)</title><rect x="97.7691%" y="1301" width="0.0558%" height="15" fill="rgb(214,93,52)"/><text x="98.0191%" y="1311.50"></text></g><g><title>BN_div (1 samples, 0.06%)</title><rect x="97.7691%" y="1285" width="0.0558%" height="15" fill="rgb(251,37,40)"/><text x="98.0191%" y="1295.50"></text></g><g><title>bn_div_fixed_top (1 samples, 0.06%)</title><rect x="97.7691%" y="1269" width="0.0558%" height="15" fill="rgb(227,80,54)"/><text x="98.0191%" y="1279.50"></text></g><g><title>bn_mul_words (1 samples, 0.06%)</title><rect x="97.7691%" y="1253" width="0.0558%" height="15" fill="rgb(254,48,11)"/><text x="98.0191%" y="1263.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1413" width="0.0558%" height="15" fill="rgb(235,193,26)"/><text x="98.0749%" y="1423.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1397" width="0.0558%" height="15" fill="rgb(229,99,21)"/><text x="98.0749%" y="1407.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1381" width="0.0558%" height="15" fill="rgb(211,140,41)"/><text x="98.0749%" y="1391.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1365" width="0.0558%" height="15" fill="rgb(240,227,30)"/><text x="98.0749%" y="1375.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1349" width="0.0558%" height="15" fill="rgb(215,224,45)"/><text x="98.0749%" y="1359.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1333" width="0.0558%" height="15" fill="rgb(206,123,31)"/><text x="98.0749%" y="1343.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.06%)</title><rect x="97.8249%" y="1317" width="0.0558%" height="15" fill="rgb(210,138,16)"/><text x="98.0749%" y="1327.50"></text></g><g><title>asn1_check_tlen (1 samples, 0.06%)</title><rect x="97.8249%" y="1301" width="0.0558%" height="15" fill="rgb(228,57,28)"/><text x="98.0749%" y="1311.50"></text></g><g><title>UTF8_getc (1 samples, 0.06%)</title><rect x="97.8806%" y="1349" width="0.0558%" height="15" fill="rgb(242,170,10)"/><text x="98.1306%" y="1359.50"></text></g><g><title>ASN1_STRING_to_UTF8 (2 samples, 0.11%)</title><rect x="97.8806%" y="1397" width="0.1115%" height="15" fill="rgb(228,214,39)"/><text x="98.1306%" y="1407.50"></text></g><g><title>ASN1_mbstring_copy (2 samples, 0.11%)</title><rect x="97.8806%" y="1381" width="0.1115%" height="15" fill="rgb(218,179,33)"/><text x="98.1306%" y="1391.50"></text></g><g><title>ASN1_mbstring_ncopy (2 samples, 0.11%)</title><rect x="97.8806%" y="1365" width="0.1115%" height="15" fill="rgb(235,193,39)"/><text x="98.1306%" y="1375.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="97.9364%" y="1349" width="0.0558%" height="15" fill="rgb(219,221,36)"/><text x="98.1864%" y="1359.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="97.9364%" y="1333" width="0.0558%" height="15" fill="rgb(248,218,19)"/><text x="98.1864%" y="1343.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.06%)</title><rect x="97.9922%" y="1397" width="0.0558%" height="15" fill="rgb(205,50,9)"/><text x="98.2422%" y="1407.50"></text></g><g><title>asn1_template_ex_i2d (1 samples, 0.06%)</title><rect x="97.9922%" y="1381" width="0.0558%" height="15" fill="rgb(238,81,28)"/><text x="98.2422%" y="1391.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.06%)</title><rect x="97.9922%" y="1365" width="0.0558%" height="15" fill="rgb(235,110,19)"/><text x="98.2422%" y="1375.50"></text></g><g><title>asn1_template_ex_i2d (1 samples, 0.06%)</title><rect x="97.9922%" y="1349" width="0.0558%" height="15" fill="rgb(214,7,14)"/><text x="98.2422%" y="1359.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.06%)</title><rect x="97.9922%" y="1333" width="0.0558%" height="15" fill="rgb(211,77,3)"/><text x="98.2422%" y="1343.50"></text></g><g><title>asn1_i2d_ex_primitive (1 samples, 0.06%)</title><rect x="97.9922%" y="1317" width="0.0558%" height="15" fill="rgb(229,5,9)"/><text x="98.2422%" y="1327.50"></text></g><g><title>asn1_ex_i2c (1 samples, 0.06%)</title><rect x="97.9922%" y="1301" width="0.0558%" height="15" fill="rgb(225,90,11)"/><text x="98.2422%" y="1311.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="97.9922%" y="1285" width="0.0558%" height="15" fill="rgb(242,56,8)"/><text x="98.2422%" y="1295.50"></text></g><g><title>ASN1_item_d2i (11 samples, 0.61%)</title><rect x="97.4902%" y="1557" width="0.6135%" height="15" fill="rgb(249,212,39)"/><text x="97.7402%" y="1567.50"></text></g><g><title>asn1_item_embed_d2i (11 samples, 0.61%)</title><rect x="97.4902%" y="1541" width="0.6135%" height="15" fill="rgb(236,90,9)"/><text x="97.7402%" y="1551.50"></text></g><g><title>asn1_template_ex_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1525" width="0.5577%" height="15" fill="rgb(206,88,35)"/><text x="97.7960%" y="1535.50"></text></g><g><title>asn1_template_noexp_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1509" width="0.5577%" height="15" fill="rgb(205,126,30)"/><text x="97.7960%" y="1519.50"></text></g><g><title>asn1_item_embed_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1493" width="0.5577%" height="15" fill="rgb(230,176,12)"/><text x="97.7960%" y="1503.50"></text></g><g><title>asn1_template_ex_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1477" width="0.5577%" height="15" fill="rgb(243,19,9)"/><text x="97.7960%" y="1487.50"></text></g><g><title>asn1_template_noexp_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1461" width="0.5577%" height="15" fill="rgb(245,171,17)"/><text x="97.7960%" y="1471.50"></text></g><g><title>asn1_item_embed_d2i (10 samples, 0.56%)</title><rect x="97.5460%" y="1445" width="0.5577%" height="15" fill="rgb(227,52,21)"/><text x="97.7960%" y="1455.50"></text></g><g><title>x509_name_ex_d2i (5 samples, 0.28%)</title><rect x="97.8249%" y="1429" width="0.2789%" height="15" fill="rgb(238,69,14)"/><text x="98.0749%" y="1439.50"></text></g><g><title>x509_name_canon (4 samples, 0.22%)</title><rect x="97.8806%" y="1413" width="0.2231%" height="15" fill="rgb(241,156,39)"/><text x="98.1306%" y="1423.50"></text></g><g><title>OPENSSL_sk_push (1 samples, 0.06%)</title><rect x="98.0480%" y="1397" width="0.0558%" height="15" fill="rgb(212,227,28)"/><text x="98.2980%" y="1407.50"></text></g><g><title>sk_reserve (1 samples, 0.06%)</title><rect x="98.0480%" y="1381" width="0.0558%" height="15" fill="rgb(209,118,27)"/><text x="98.2980%" y="1391.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.06%)</title><rect x="98.0480%" y="1365" width="0.0558%" height="15" fill="rgb(226,102,5)"/><text x="98.2980%" y="1375.50"></text></g><g><title>BIO_gets (1 samples, 0.06%)</title><rect x="98.1037%" y="1541" width="0.0558%" height="15" fill="rgb(223,34,3)"/><text x="98.3537%" y="1551.50"></text></g><g><title>file_gets (1 samples, 0.06%)</title><rect x="98.1037%" y="1525" width="0.0558%" height="15" fill="rgb(221,81,38)"/><text x="98.3537%" y="1535.50"></text></g><g><title>fgets (1 samples, 0.06%)</title><rect x="98.1037%" y="1509" width="0.0558%" height="15" fill="rgb(236,219,28)"/><text x="98.3537%" y="1519.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.06%)</title><rect x="98.1037%" y="1493" width="0.0558%" height="15" fill="rgb(213,200,14)"/><text x="98.3537%" y="1503.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.06%)</title><rect x="98.1037%" y="1477" width="0.0558%" height="15" fill="rgb(240,33,19)"/><text x="98.3537%" y="1487.50"></text></g><g><title>PEM_X509_INFO_read_bio (15 samples, 0.84%)</title><rect x="97.4902%" y="1573" width="0.8366%" height="15" fill="rgb(233,113,27)"/><text x="97.7402%" y="1583.50"></text></g><g><title>PEM_read_bio_ex (4 samples, 0.22%)</title><rect x="98.1037%" y="1557" width="0.2231%" height="15" fill="rgb(220,221,18)"/><text x="98.3537%" y="1567.50"></text></g><g><title>EVP_DecodeUpdate (3 samples, 0.17%)</title><rect x="98.1595%" y="1541" width="0.1673%" height="15" fill="rgb(238,92,8)"/><text x="98.4095%" y="1551.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (17 samples, 0.95%)</title><rect x="97.4345%" y="1749" width="0.9481%" height="15" fill="rgb(222,164,16)"/><text x="97.6845%" y="1759.50"></text></g><g><title>cargo::ops::registry::http_proxy (17 samples, 0.95%)</title><rect x="97.4345%" y="1733" width="0.9481%" height="15" fill="rgb(241,119,3)"/><text x="97.6845%" y="1743.50"></text></g><g><title>git2::config::Config::open_default (17 samples, 0.95%)</title><rect x="97.4345%" y="1717" width="0.9481%" height="15" fill="rgb(241,44,8)"/><text x="97.6845%" y="1727.50"></text></g><g><title>libgit2_sys::init (17 samples, 0.95%)</title><rect x="97.4345%" y="1701" width="0.9481%" height="15" fill="rgb(230,36,40)"/><text x="97.6845%" y="1711.50"></text></g><g><title>std::sync::once::Once::call_inner (17 samples, 0.95%)</title><rect x="97.4345%" y="1685" width="0.9481%" height="15" fill="rgb(243,16,36)"/><text x="97.6845%" y="1695.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (17 samples, 0.95%)</title><rect x="97.4345%" y="1669" width="0.9481%" height="15" fill="rgb(231,4,26)"/><text x="97.6845%" y="1679.50"></text></g><g><title>git_runtime_init (17 samples, 0.95%)</title><rect x="97.4345%" y="1653" width="0.9481%" height="15" fill="rgb(240,9,31)"/><text x="97.6845%" y="1663.50"></text></g><g><title>git_openssl_stream_global_init (17 samples, 0.95%)</title><rect x="97.4345%" y="1637" width="0.9481%" height="15" fill="rgb(207,173,15)"/><text x="97.6845%" y="1647.50"></text></g><g><title>X509_STORE_set_default_paths (16 samples, 0.89%)</title><rect x="97.4902%" y="1621" width="0.8924%" height="15" fill="rgb(224,192,53)"/><text x="97.7402%" y="1631.50"></text></g><g><title>by_file_ctrl (16 samples, 0.89%)</title><rect x="97.4902%" y="1605" width="0.8924%" height="15" fill="rgb(223,67,28)"/><text x="97.7402%" y="1615.50"></text></g><g><title>X509_load_cert_crl_file (16 samples, 0.89%)</title><rect x="97.4902%" y="1589" width="0.8924%" height="15" fill="rgb(211,20,47)"/><text x="97.7402%" y="1599.50"></text></g><g><title>X509_STORE_add_cert (1 samples, 0.06%)</title><rect x="98.3268%" y="1573" width="0.0558%" height="15" fill="rgb(240,228,2)"/><text x="98.5768%" y="1583.50"></text></g><g><title>x509_store_add (1 samples, 0.06%)</title><rect x="98.3268%" y="1557" width="0.0558%" height="15" fill="rgb(248,151,12)"/><text x="98.5768%" y="1567.50"></text></g><g><title>X509_OBJECT_retrieve_match (1 samples, 0.06%)</title><rect x="98.3268%" y="1541" width="0.0558%" height="15" fill="rgb(244,8,39)"/><text x="98.5768%" y="1551.50"></text></g><g><title>internal_find (1 samples, 0.06%)</title><rect x="98.3268%" y="1525" width="0.0558%" height="15" fill="rgb(222,26,8)"/><text x="98.5768%" y="1535.50"></text></g><g><title>__GI___qsort_r (1 samples, 0.06%)</title><rect x="98.3268%" y="1509" width="0.0558%" height="15" fill="rgb(213,106,44)"/><text x="98.5768%" y="1519.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.06%)</title><rect x="98.3268%" y="1493" width="0.0558%" height="15" fill="rgb(214,129,20)"/><text x="98.5768%" y="1503.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.06%)</title><rect x="98.3268%" y="1477" width="0.0558%" height="15" fill="rgb(212,32,13)"/><text x="98.5768%" y="1487.50"></text></g><g><title>X509_subject_name_cmp (1 samples, 0.06%)</title><rect x="98.3268%" y="1461" width="0.0558%" height="15" fill="rgb(208,168,33)"/><text x="98.5768%" y="1471.50"></text></g><g><title>__libc_start_main (21 samples, 1.17%)</title><rect x="97.2672%" y="1909" width="1.1712%" height="15" fill="rgb(231,207,8)"/><text x="97.5172%" y="1919.50"></text></g><g><title>main (18 samples, 1.00%)</title><rect x="97.4345%" y="1893" width="1.0039%" height="15" fill="rgb(235,219,23)"/><text x="97.6845%" y="1903.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 1.00%)</title><rect x="97.4345%" y="1877" width="1.0039%" height="15" fill="rgb(226,216,26)"/><text x="97.6845%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 1.00%)</title><rect x="97.4345%" y="1861" width="1.0039%" height="15" fill="rgb(239,137,16)"/><text x="97.6845%" y="1871.50"></text></g><g><title>std::panicking::try (18 samples, 1.00%)</title><rect x="97.4345%" y="1845" width="1.0039%" height="15" fill="rgb(207,12,36)"/><text x="97.6845%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 1.00%)</title><rect x="97.4345%" y="1829" width="1.0039%" height="15" fill="rgb(210,214,24)"/><text x="97.6845%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 1.00%)</title><rect x="97.4345%" y="1813" width="1.0039%" height="15" fill="rgb(206,56,30)"/><text x="97.6845%" y="1823.50"></text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 1.00%)</title><rect x="97.4345%" y="1797" width="1.0039%" height="15" fill="rgb(228,143,26)"/><text x="97.6845%" y="1807.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 1.00%)</title><rect x="97.4345%" y="1781" width="1.0039%" height="15" fill="rgb(216,218,46)"/><text x="97.6845%" y="1791.50"></text></g><g><title>cargo::main (18 samples, 1.00%)</title><rect x="97.4345%" y="1765" width="1.0039%" height="15" fill="rgb(206,6,19)"/><text x="97.6845%" y="1775.50"></text></g><g><title>clap::app::App::get_matches_safe (1 samples, 0.06%)</title><rect x="98.3826%" y="1749" width="0.0558%" height="15" fill="rgb(239,177,51)"/><text x="98.6326%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::app::App&gt; (1 samples, 0.06%)</title><rect x="98.3826%" y="1733" width="0.0558%" height="15" fill="rgb(216,55,25)"/><text x="98.6326%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::app::parser::Parser&gt; (1 samples, 0.06%)</title><rect x="98.3826%" y="1717" width="0.0558%" height="15" fill="rgb(231,163,29)"/><text x="98.6326%" y="1727.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="98.3826%" y="1701" width="0.0558%" height="15" fill="rgb(232,149,50)"/><text x="98.6326%" y="1711.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="98.3826%" y="1685" width="0.0558%" height="15" fill="rgb(223,142,48)"/><text x="98.6326%" y="1695.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="98.3826%" y="1669" width="0.0558%" height="15" fill="rgb(245,83,23)"/><text x="98.6326%" y="1679.50"></text></g><g><title>[unknown] (5 samples, 0.28%)</title><rect x="98.4384%" y="1893" width="0.2789%" height="15" fill="rgb(224,63,2)"/><text x="98.6884%" y="1903.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="98.4941%" y="1877" width="0.2231%" height="15" fill="rgb(218,65,53)"/><text x="98.7441%" y="1887.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="98.4941%" y="1861" width="0.2231%" height="15" fill="rgb(221,84,29)"/><text x="98.7441%" y="1871.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="98.4941%" y="1845" width="0.2231%" height="15" fill="rgb(234,0,32)"/><text x="98.7441%" y="1855.50"></text></g><g><title>[unknown] (4 samples, 0.22%)</title><rect x="98.4941%" y="1829" width="0.2231%" height="15" fill="rgb(206,20,16)"/><text x="98.7441%" y="1839.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="98.5499%" y="1813" width="0.1673%" height="15" fill="rgb(244,172,18)"/><text x="98.7999%" y="1823.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="98.5499%" y="1797" width="0.1673%" height="15" fill="rgb(254,133,1)"/><text x="98.7999%" y="1807.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="98.5499%" y="1781" width="0.1673%" height="15" fill="rgb(222,206,41)"/><text x="98.7999%" y="1791.50"></text></g><g><title>[unknown] (3 samples, 0.17%)</title><rect x="98.5499%" y="1765" width="0.1673%" height="15" fill="rgb(212,3,42)"/><text x="98.7999%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.6615%" y="1749" width="0.0558%" height="15" fill="rgb(241,11,4)"/><text x="98.9115%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.7172%" y="1877" width="0.0558%" height="15" fill="rgb(205,19,26)"/><text x="98.9672%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.7172%" y="1861" width="0.0558%" height="15" fill="rgb(210,179,32)"/><text x="98.9672%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.7172%" y="1845" width="0.0558%" height="15" fill="rgb(227,116,49)"/><text x="98.9672%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.7172%" y="1829" width="0.0558%" height="15" fill="rgb(211,146,6)"/><text x="98.9672%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.7172%" y="1813" width="0.0558%" height="15" fill="rgb(219,44,39)"/><text x="98.9672%" y="1823.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.06%)</title><rect x="98.7730%" y="1877" width="0.0558%" height="15" fill="rgb(234,128,11)"/><text x="99.0230%" y="1887.50"></text></g><g><title>__brk (1 samples, 0.06%)</title><rect x="98.8288%" y="1877" width="0.0558%" height="15" fill="rgb(220,183,53)"/><text x="99.0788%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1861" width="0.0558%" height="15" fill="rgb(213,219,32)"/><text x="99.1346%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1845" width="0.0558%" height="15" fill="rgb(232,156,16)"/><text x="99.1346%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1829" width="0.0558%" height="15" fill="rgb(246,135,34)"/><text x="99.1346%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1813" width="0.0558%" height="15" fill="rgb(241,99,0)"/><text x="99.1346%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1797" width="0.0558%" height="15" fill="rgb(222,103,45)"/><text x="99.1346%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1781" width="0.0558%" height="15" fill="rgb(212,57,4)"/><text x="99.1346%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1765" width="0.0558%" height="15" fill="rgb(215,68,47)"/><text x="99.1346%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1749" width="0.0558%" height="15" fill="rgb(230,84,2)"/><text x="99.1346%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1733" width="0.0558%" height="15" fill="rgb(220,102,14)"/><text x="99.1346%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="98.8846%" y="1717" width="0.0558%" height="15" fill="rgb(240,10,32)"/><text x="99.1346%" y="1727.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.06%)</title><rect x="98.9403%" y="1861" width="0.0558%" height="15" fill="rgb(215,47,27)"/><text x="99.1903%" y="1871.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.06%)</title><rect x="98.9403%" y="1845" width="0.0558%" height="15" fill="rgb(233,188,43)"/><text x="99.1903%" y="1855.50"></text></g><g><title>openaux (1 samples, 0.06%)</title><rect x="98.9403%" y="1829" width="0.0558%" height="15" fill="rgb(253,190,1)"/><text x="99.1903%" y="1839.50"></text></g><g><title>_dl_map_object (1 samples, 0.06%)</title><rect x="98.9403%" y="1813" width="0.0558%" height="15" fill="rgb(206,114,52)"/><text x="99.1903%" y="1823.50"></text></g><g><title>cargo (400 samples, 22.31%)</title><rect x="77.0218%" y="1941" width="22.3090%" height="15" fill="rgb(233,120,37)"/><text x="77.2718%" y="1951.50">cargo</text></g><g><title>_start (38 samples, 2.12%)</title><rect x="97.2114%" y="1925" width="2.1194%" height="15" fill="rgb(214,52,39)"/><text x="97.4614%" y="1935.50">_..</text></g><g><title>_dl_start (16 samples, 0.89%)</title><rect x="98.4384%" y="1909" width="0.8924%" height="15" fill="rgb(223,80,29)"/><text x="98.6884%" y="1919.50"></text></g><g><title>_dl_sysdep_start (11 samples, 0.61%)</title><rect x="98.7172%" y="1893" width="0.6135%" height="15" fill="rgb(230,101,40)"/><text x="98.9672%" y="1903.50"></text></g><g><title>dl_main (8 samples, 0.45%)</title><rect x="98.8846%" y="1877" width="0.4462%" height="15" fill="rgb(219,211,8)"/><text x="99.1346%" y="1887.50"></text></g><g><title>_dl_relocate_object (6 samples, 0.33%)</title><rect x="98.9961%" y="1861" width="0.3346%" height="15" fill="rgb(252,126,28)"/><text x="99.2461%" y="1871.50"></text></g><g><title>_dl_lookup_symbol_x (5 samples, 0.28%)</title><rect x="99.0519%" y="1845" width="0.2789%" height="15" fill="rgb(215,56,38)"/><text x="99.3019%" y="1855.50"></text></g><g><title>do_lookup_x (5 samples, 0.28%)</title><rect x="99.0519%" y="1829" width="0.2789%" height="15" fill="rgb(249,55,44)"/><text x="99.3019%" y="1839.50"></text></g><g><title>check_match (2 samples, 0.11%)</title><rect x="99.2192%" y="1813" width="0.1115%" height="15" fill="rgb(220,221,32)"/><text x="99.4692%" y="1823.50"></text></g><g><title>strcmp (1 samples, 0.06%)</title><rect x="99.2750%" y="1797" width="0.0558%" height="15" fill="rgb(212,216,41)"/><text x="99.5250%" y="1807.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.06%)</title><rect x="99.3865%" y="1893" width="0.0558%" height="15" fill="rgb(228,213,43)"/><text x="99.6365%" y="1903.50"></text></g><g><title>__GI___sigsetjmp (1 samples, 0.06%)</title><rect x="99.4423%" y="1893" width="0.0558%" height="15" fill="rgb(211,31,26)"/><text x="99.6923%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.06%)</title><rect x="99.5538%" y="1877" width="0.0558%" height="15" fill="rgb(229,202,19)"/><text x="99.8038%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.06%)</title><rect x="99.5538%" y="1861" width="0.0558%" height="15" fill="rgb(229,105,46)"/><text x="99.8038%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.06%)</title><rect x="99.5538%" y="1845" width="0.0558%" height="15" fill="rgb(235,108,1)"/><text x="99.8038%" y="1855.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.06%)</title><rect x="99.5538%" y="1829" width="0.0558%" height="15" fill="rgb(245,111,35)"/><text x="99.8038%" y="1839.50"></text></g><g><title>__GI___prctl (1 samples, 0.06%)</title><rect x="99.5538%" y="1813" width="0.0558%" height="15" fill="rgb(219,185,31)"/><text x="99.8038%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.5538%" y="1797" width="0.0558%" height="15" fill="rgb(214,4,43)"/><text x="99.8038%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.5538%" y="1781" width="0.0558%" height="15" fill="rgb(235,227,40)"/><text x="99.8038%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.5538%" y="1765" width="0.0558%" height="15" fill="rgb(230,88,30)"/><text x="99.8038%" y="1775.50"></text></g><g><title>__sigaltstack (1 samples, 0.06%)</title><rect x="99.6096%" y="1845" width="0.0558%" height="15" fill="rgb(216,217,1)"/><text x="99.8596%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6096%" y="1829" width="0.0558%" height="15" fill="rgb(248,139,50)"/><text x="99.8596%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6096%" y="1813" width="0.0558%" height="15" fill="rgb(233,1,21)"/><text x="99.8596%" y="1823.50"></text></g><g><title>__GI___clone (7 samples, 0.39%)</title><rect x="99.3307%" y="1925" width="0.3904%" height="15" fill="rgb(215,183,12)"/><text x="99.5807%" y="1935.50"></text></g><g><title>start_thread (7 samples, 0.39%)</title><rect x="99.3307%" y="1909" width="0.3904%" height="15" fill="rgb(229,104,42)"/><text x="99.5807%" y="1919.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.22%)</title><rect x="99.4980%" y="1893" width="0.2231%" height="15" fill="rgb(243,34,48)"/><text x="99.7480%" y="1903.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.11%)</title><rect x="99.6096%" y="1877" width="0.1115%" height="15" fill="rgb(239,11,44)"/><text x="99.8596%" y="1887.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.11%)</title><rect x="99.6096%" y="1861" width="0.1115%" height="15" fill="rgb(231,98,35)"/><text x="99.8596%" y="1871.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.06%)</title><rect x="99.6654%" y="1845" width="0.0558%" height="15" fill="rgb(233,28,25)"/><text x="99.9154%" y="1855.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.06%)</title><rect x="99.6654%" y="1829" width="0.0558%" height="15" fill="rgb(234,123,11)"/><text x="99.9154%" y="1839.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.06%)</title><rect x="99.6654%" y="1813" width="0.0558%" height="15" fill="rgb(220,69,3)"/><text x="99.9154%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6654%" y="1797" width="0.0558%" height="15" fill="rgb(214,64,36)"/><text x="99.9154%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6654%" y="1781" width="0.0558%" height="15" fill="rgb(211,138,32)"/><text x="99.9154%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6654%" y="1765" width="0.0558%" height="15" fill="rgb(213,118,47)"/><text x="99.9154%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6654%" y="1749" width="0.0558%" height="15" fill="rgb(243,124,49)"/><text x="99.9154%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.6654%" y="1733" width="0.0558%" height="15" fill="rgb(221,30,28)"/><text x="99.9154%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.06%)</title><rect x="99.7211%" y="1861" width="0.0558%" height="15" fill="rgb(246,37,13)"/><text x="99.9711%" y="1871.50"></text></g><g><title>std::panicking::try (1 samples, 0.06%)</title><rect x="99.7211%" y="1845" width="0.0558%" height="15" fill="rgb(249,66,14)"/><text x="99.9711%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.06%)</title><rect x="99.7211%" y="1829" width="0.0558%" height="15" fill="rgb(213,166,5)"/><text x="99.9711%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.06%)</title><rect x="99.7211%" y="1813" width="0.0558%" height="15" fill="rgb(221,66,24)"/><text x="99.9711%" y="1823.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1797" width="0.0558%" height="15" fill="rgb(210,132,17)"/><text x="99.9711%" y="1807.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.06%)</title><rect x="99.7211%" y="1781" width="0.0558%" height="15" fill="rgb(243,202,5)"/><text x="99.9711%" y="1791.50"></text></g><g><title>test::test_main_static (1 samples, 0.06%)</title><rect x="99.7211%" y="1765" width="0.0558%" height="15" fill="rgb(233,70,48)"/><text x="99.9711%" y="1775.50"></text></g><g><title>test::test_main (1 samples, 0.06%)</title><rect x="99.7211%" y="1749" width="0.0558%" height="15" fill="rgb(238,41,26)"/><text x="99.9711%" y="1759.50"></text></g><g><title>test::console::run_tests_console (1 samples, 0.06%)</title><rect x="99.7211%" y="1733" width="0.0558%" height="15" fill="rgb(241,19,31)"/><text x="99.9711%" y="1743.50"></text></g><g><title>term::stdout (1 samples, 0.06%)</title><rect x="99.7211%" y="1717" width="0.0558%" height="15" fill="rgb(214,76,10)"/><text x="99.9711%" y="1727.50"></text></g><g><title>term::terminfo::TerminfoTerminal&lt;T&gt;::new (1 samples, 0.06%)</title><rect x="99.7211%" y="1701" width="0.0558%" height="15" fill="rgb(254,202,22)"/><text x="99.9711%" y="1711.50"></text></g><g><title>term::terminfo::TermInfo::from_env (1 samples, 0.06%)</title><rect x="99.7211%" y="1685" width="0.0558%" height="15" fill="rgb(214,72,24)"/><text x="99.9711%" y="1695.50"></text></g><g><title>term::terminfo::TermInfo::from_name (1 samples, 0.06%)</title><rect x="99.7211%" y="1669" width="0.0558%" height="15" fill="rgb(221,92,46)"/><text x="99.9711%" y="1679.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.06%)</title><rect x="99.7211%" y="1653" width="0.0558%" height="15" fill="rgb(246,13,50)"/><text x="99.9711%" y="1663.50"></text></g><g><title>term::terminfo::TermInfo::from_name::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1637" width="0.0558%" height="15" fill="rgb(240,165,38)"/><text x="99.9711%" y="1647.50"></text></g><g><title>term::terminfo::TermInfo::from_path (1 samples, 0.06%)</title><rect x="99.7211%" y="1621" width="0.0558%" height="15" fill="rgb(241,24,51)"/><text x="99.9711%" y="1631.50"></text></g><g><title>term::terminfo::TermInfo::_from_path (1 samples, 0.06%)</title><rect x="99.7211%" y="1605" width="0.0558%" height="15" fill="rgb(227,51,44)"/><text x="99.9711%" y="1615.50"></text></g><g><title>term::terminfo::parser::compiled::parse (1 samples, 0.06%)</title><rect x="99.7211%" y="1589" width="0.0558%" height="15" fill="rgb(231,121,3)"/><text x="99.9711%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.06%)</title><rect x="99.7211%" y="1573" width="0.0558%" height="15" fill="rgb(245,3,41)"/><text x="99.9711%" y="1583.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="99.7211%" y="1557" width="0.0558%" height="15" fill="rgb(214,13,26)"/><text x="99.9711%" y="1567.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.06%)</title><rect x="99.7211%" y="1541" width="0.0558%" height="15" fill="rgb(252,75,11)"/><text x="99.9711%" y="1551.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1525" width="0.0558%" height="15" fill="rgb(218,226,17)"/><text x="99.9711%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.06%)</title><rect x="99.7211%" y="1509" width="0.0558%" height="15" fill="rgb(248,89,38)"/><text x="99.9711%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="99.7211%" y="1493" width="0.0558%" height="15" fill="rgb(237,73,46)"/><text x="99.9711%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="99.7211%" y="1477" width="0.0558%" height="15" fill="rgb(242,78,33)"/><text x="99.9711%" y="1487.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="99.7211%" y="1461" width="0.0558%" height="15" fill="rgb(235,60,3)"/><text x="99.9711%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.06%)</title><rect x="99.7211%" y="1445" width="0.0558%" height="15" fill="rgb(216,172,19)"/><text x="99.9711%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1429" width="0.0558%" height="15" fill="rgb(227,6,42)"/><text x="99.9711%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1413" width="0.0558%" height="15" fill="rgb(223,207,42)"/><text x="99.9711%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1397" width="0.0558%" height="15" fill="rgb(246,138,30)"/><text x="99.9711%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1381" width="0.0558%" height="15" fill="rgb(251,199,47)"/><text x="99.9711%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1365" width="0.0558%" height="15" fill="rgb(228,218,44)"/><text x="99.9711%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.06%)</title><rect x="99.7211%" y="1349" width="0.0558%" height="15" fill="rgb(220,68,6)"/><text x="99.9711%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1333" width="0.0558%" height="15" fill="rgb(240,60,26)"/><text x="99.9711%" y="1343.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1317" width="0.0558%" height="15" fill="rgb(211,200,19)"/><text x="99.9711%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1301" width="0.0558%" height="15" fill="rgb(242,145,30)"/><text x="99.9711%" y="1311.50"></text></g><g><title>term::terminfo::parser::compiled::parse::{{closure}} (1 samples, 0.06%)</title><rect x="99.7211%" y="1285" width="0.0558%" height="15" fill="rgb(225,64,13)"/><text x="99.9711%" y="1295.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.06%)</title><rect x="99.7211%" y="1269" width="0.0558%" height="15" fill="rgb(218,103,35)"/><text x="99.9711%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.06%)</title><rect x="99.7211%" y="1253" width="0.0558%" height="15" fill="rgb(216,93,46)"/><text x="99.9711%" y="1263.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.06%)</title><rect x="99.7211%" y="1237" width="0.0558%" height="15" fill="rgb(225,159,27)"/><text x="99.9711%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.06%)</title><rect x="99.7211%" y="1221" width="0.0558%" height="15" fill="rgb(225,204,11)"/><text x="99.9711%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.06%)</title><rect x="99.7211%" y="1205" width="0.0558%" height="15" fill="rgb(205,56,4)"/><text x="99.9711%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="99.7211%" y="1189" width="0.0558%" height="15" fill="rgb(206,6,35)"/><text x="99.9711%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="99.7211%" y="1173" width="0.0558%" height="15" fill="rgb(247,73,52)"/><text x="99.9711%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="99.7211%" y="1157" width="0.0558%" height="15" fill="rgb(246,97,4)"/><text x="99.9711%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="99.7211%" y="1141" width="0.0558%" height="15" fill="rgb(212,37,15)"/><text x="99.9711%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="99.7211%" y="1125" width="0.0558%" height="15" fill="rgb(208,130,40)"/><text x="99.9711%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="99.7211%" y="1109" width="0.0558%" height="15" fill="rgb(236,55,29)"/><text x="99.9711%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="99.7211%" y="1093" width="0.0558%" height="15" fill="rgb(209,156,45)"/><text x="99.9711%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="99.7211%" y="1077" width="0.0558%" height="15" fill="rgb(249,107,4)"/><text x="99.9711%" y="1087.50"></text></g><g><title>__libc_start_main (2 samples, 0.11%)</title><rect x="99.7211%" y="1909" width="0.1115%" height="15" fill="rgb(227,7,13)"/><text x="99.9711%" y="1919.50"></text></g><g><title>main (2 samples, 0.11%)</title><rect x="99.7211%" y="1893" width="0.1115%" height="15" fill="rgb(250,129,14)"/><text x="99.9711%" y="1903.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.11%)</title><rect x="99.7211%" y="1877" width="0.1115%" height="15" fill="rgb(229,92,13)"/><text x="99.9711%" y="1887.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.06%)</title><rect x="99.7769%" y="1861" width="0.0558%" height="15" fill="rgb(245,98,39)"/><text x="100.0269%" y="1871.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.06%)</title><rect x="99.7769%" y="1845" width="0.0558%" height="15" fill="rgb(234,135,48)"/><text x="100.0269%" y="1855.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.06%)</title><rect x="99.7769%" y="1829" width="0.0558%" height="15" fill="rgb(230,98,28)"/><text x="100.0269%" y="1839.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.06%)</title><rect x="99.7769%" y="1813" width="0.0558%" height="15" fill="rgb(223,121,0)"/><text x="100.0269%" y="1823.50"></text></g><g><title>__fopen_internal (1 samples, 0.06%)</title><rect x="99.7769%" y="1797" width="0.0558%" height="15" fill="rgb(234,173,33)"/><text x="100.0269%" y="1807.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.06%)</title><rect x="99.7769%" y="1781" width="0.0558%" height="15" fill="rgb(245,47,8)"/><text x="100.0269%" y="1791.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.06%)</title><rect x="99.7769%" y="1765" width="0.0558%" height="15" fill="rgb(205,17,20)"/><text x="100.0269%" y="1775.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.06%)</title><rect x="99.7769%" y="1749" width="0.0558%" height="15" fill="rgb(232,151,16)"/><text x="100.0269%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1733" width="0.0558%" height="15" fill="rgb(208,30,32)"/><text x="100.0269%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1717" width="0.0558%" height="15" fill="rgb(254,26,3)"/><text x="100.0269%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1701" width="0.0558%" height="15" fill="rgb(240,177,30)"/><text x="100.0269%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1685" width="0.0558%" height="15" fill="rgb(248,76,44)"/><text x="100.0269%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1669" width="0.0558%" height="15" fill="rgb(241,186,54)"/><text x="100.0269%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1653" width="0.0558%" height="15" fill="rgb(249,171,29)"/><text x="100.0269%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1637" width="0.0558%" height="15" fill="rgb(237,151,44)"/><text x="100.0269%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="99.7769%" y="1621" width="0.0558%" height="15" fill="rgb(228,174,30)"/><text x="100.0269%" y="1631.50"></text></g><g><title>_dl_new_object (1 samples, 0.06%)</title><rect x="99.8327%" y="1861" width="0.0558%" height="15" fill="rgb(252,14,37)"/><text x="100.0827%" y="1871.50"></text></g><g><title>rtld_malloc (1 samples, 0.06%)</title><rect x="99.8327%" y="1845" width="0.0558%" height="15" fill="rgb(207,111,40)"/><text x="100.0827%" y="1855.50"></text></g><g><title>all (1,793 samples, 100%)</title><rect x="0.0000%" y="1957" width="100.0000%" height="15" fill="rgb(248,171,54)"/><text x="0.2500%" y="1967.50"></text></g><g><title>mbe-eb0146ca498 (12 samples, 0.67%)</title><rect x="99.3307%" y="1941" width="0.6693%" height="15" fill="rgb(211,127,2)"/><text x="99.5807%" y="1951.50"></text></g><g><title>_start (5 samples, 0.28%)</title><rect x="99.7211%" y="1925" width="0.2789%" height="15" fill="rgb(236,87,47)"/><text x="99.9711%" y="1935.50"></text></g><g><title>_dl_start (3 samples, 0.17%)</title><rect x="99.8327%" y="1909" width="0.1673%" height="15" fill="rgb(223,190,45)"/><text x="100.0827%" y="1919.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.17%)</title><rect x="99.8327%" y="1893" width="0.1673%" height="15" fill="rgb(215,5,16)"/><text x="100.0827%" y="1903.50"></text></g><g><title>dl_main (3 samples, 0.17%)</title><rect x="99.8327%" y="1877" width="0.1673%" height="15" fill="rgb(252,82,33)"/><text x="100.0827%" y="1887.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.11%)</title><rect x="99.8885%" y="1861" width="0.1115%" height="15" fill="rgb(247,213,44)"/><text x="100.1385%" y="1871.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.06%)</title><rect x="99.9442%" y="1845" width="0.0558%" height="15" fill="rgb(205,196,44)"/><text x="100.1942%" y="1855.50"></text></g><g><title>do_lookup_x (1 samples, 0.06%)</title><rect x="99.9442%" y="1829" width="0.0558%" height="15" fill="rgb(237,96,54)"/><text x="100.1942%" y="1839.50"></text></g><g><title>check_match (1 samples, 0.06%)</title><rect x="99.9442%" y="1813" width="0.0558%" height="15" fill="rgb(230,113,34)"/><text x="100.1942%" y="1823.50"></text></g><g><title>strcmp (1 samples, 0.06%)</title><rect x="99.9442%" y="1797" width="0.0558%" height="15" fill="rgb(221,224,12)"/><text x="100.1942%" y="1807.50"></text></g></svg></svg>